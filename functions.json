{
	"dgsGetPosition": {
		"scope": "lua",
		"prefix": "dgsGetPosition",
		"description": "This function allows retrieval of a DGS element's current position, relative to its parent. | URL: https://wiki.multitheftauto.com/wiki/DgsGetPosition",
		"body": "dgsGetPosition(${1:element dgsElement}, ${2:bool relative [}, ${3:bool includeParent = false ]})"
	},
	"dgsSetPosition": {
		"scope": "lua",
		"prefix": "dgsSetPosition",
		"description": "This function sets the position of a DGS element. | URL: https://wiki.multitheftauto.com/wiki/DgsSetPosition",
		"body": "dgsSetPosition(${1:element theElement}, ${2:float x}, ${3:float y}, ${4:bool relative [}, ${5:bool isCenterPosition = false ]})"
	},
	"dgsSetParent": {
		"scope": "lua",
		"prefix": "dgsSetParent",
		"description": "This function is used for setting a DGS element as the parent of another DGS element. | URL: https://wiki.multitheftauto.com/wiki/DgsSetParent",
		"body": "dgsSetParent(${1:element theElement}, ${2:element parent})"
	},
	"dgsGetParent": {
		"scope": "lua",
		"prefix": "dgsGetParent",
		"description": "This function is used to determine the parent of a DGS element. | URL: https://wiki.multitheftauto.com/wiki/DgsGetParent",
		"body": "dgsGetParent(${1:element theElement})"
	},
	"dgsGetChild": {
		"scope": "lua",
		"prefix": "dgsGetChild",
		"description": "This function returns one of the child dgs elements of a given parent dgs element. The child dgs element is selected by its index (0 for the... | URL: https://wiki.multitheftauto.com/wiki/DgsGetChild",
		"body": "dgsGetChild(${1:element dgsParent}, ${2:int index})"
	},
	"dgsGetChildren": {
		"scope": "lua",
		"prefix": "dgsGetChildren",
		"description": "This function returns all of the child dgs elements of a given parent dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsGetChildren",
		"body": "dgsGetChildren(${1:element dgsParent})"
	},
	"dgsGetSize": {
		"scope": "lua",
		"prefix": "dgsGetSize",
		"description": "This function gets the size of a DGS element. | URL: https://wiki.multitheftauto.com/wiki/DgsGetSize",
		"body": "dgsGetSize(${1:element theElement}, ${2:bool relative})"
	},
	"dgsSetSize": {
		"scope": "lua",
		"prefix": "dgsSetSize",
		"description": "This function sets the dimensions (size) of a DGS element. It refers to the bounding box size for DGS elements. It does not make DGS element... | URL: https://wiki.multitheftauto.com/wiki/DgsSetSize",
		"body": "dgsSetSize(${1:element dgsElement}, ${2:float width}, ${3:float height}, ${4:bool relative})"
	},
	"dgsGetType": {
		"scope": "lua",
		"prefix": "dgsGetType",
		"description": "This function is used to retrieve the type of a dgs element, an element even a string/number/bool value. | URL: https://wiki.multitheftauto.com/wiki/DgsGetType",
		"body": "dgsGetType(${1:mixed theMixed})"
	},
	"dgsSetLayer": {
		"scope": "lua",
		"prefix": "dgsSetLayer",
		"description": "This function allow us to set the render layer of a dgs element. This function only have effect on a non-parent dgs element unless the force... | URL: https://wiki.multitheftauto.com/wiki/DgsSetLayer",
		"body": "dgsSetLayer(${1:element dgsElement}, ${2:string layer [}, ${3:bool forceDetatch = false ]})"
	},
	"dgsGetLayer": {
		"scope": "lua",
		"prefix": "dgsGetLayer",
		"description": "This function allow us to set the render layer of a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsGetLayer",
		"body": "dgsGetLayer(${1:element dgsElement})"
	},
	"dgsSetCurrentLayerIndex": {
		"scope": "lua",
		"prefix": "dgsSetCurrentLayerIndex",
		"description": "This function allow us to change the render layer index of a dgs element. This function will only act on the parent layer. For example: | URL: https://wiki.multitheftauto.com/wiki/DgsSetCurrentLayerIndex",
		"body": "dgsSetCurrentLayerIndex(${1:element dgsElement}, ${2:integer index})"
	},
	"dgsGetCurrentLayerIndex": {
		"scope": "lua",
		"prefix": "dgsGetCurrentLayerIndex",
		"description": "This function allow us to get the render layer index of a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsGetCurrentLayerIndex",
		"body": "dgsGetCurrentLayerIndex(${1:element dgsElement})"
	},
	"dgsGetLayerElements": {
		"scope": "lua",
		"prefix": "dgsGetLayerElements",
		"description": "This function allow us to get all elements from a layer. | URL: https://wiki.multitheftauto.com/wiki/DgsGetLayerElements",
		"body": "dgsGetLayerElements(${1:string layer})"
	},
	"dgsGetProperty": {
		"scope": "lua",
		"prefix": "dgsGetProperty",
		"description": "This function gets the value of a specific property of a DGS element. For a list of properties and their meaning, see the  DGS properties pa... | URL: https://wiki.multitheftauto.com/wiki/DgsGetProperty",
		"body": "dgsGetProperty(${1:element dgsElement}, ${2:string property})"
	},
	"dgsSetProperty": {
		"scope": "lua",
		"prefix": "dgsSetProperty",
		"description": "This function sets the value of a specific property of a DGS element. For a list of properties and their meaning, see the  DGS properties pa... | URL: https://wiki.multitheftauto.com/wiki/DgsSetProperty",
		"body": "dgsSetProperty(${1:element/table dgsElement}, ${2:string property}, ${3:mixed value [}, ${4:mixed arg1}, ${5:mixed arg2 ... ]})"
	},
	"dgsSetPropertyInherit": {
		"scope": "lua",
		"prefix": "dgsSetPropertyInherit",
		"description": "This function sets the value of a specific property of a DGS element and affects its children. For a list of properties and their meaning, s... | URL: https://wiki.multitheftauto.com/wiki/DgsSetPropertyInherit",
		"body": "dgsSetPropertyInherit(${1:element/table dgsElement}, ${2:string property}, ${3:mixed value [}, ${4:mixed arg1}, ${5:mixed arg2 ... ]})"
	},
	"dgsGetProperties": {
		"scope": "lua",
		"prefix": "dgsGetProperties",
		"description": "This function gets the values of secific properties or all the properties of a DGS element. For a list of properties and their meaning, see... | URL: https://wiki.multitheftauto.com/wiki/DgsGetProperties",
		"body": "dgsGetProperties(${1:element dgsElement [}, ${2:table properties ]})"
	},
	"dgsSetProperties": {
		"scope": "lua",
		"prefix": "dgsSetProperties",
		"description": "This function sets the values of specific properties of a DGS element. For a list of properties and their meaning, see the  DGS properties p... | URL: https://wiki.multitheftauto.com/wiki/DgsSetProperties",
		"body": "dgsSetProperties(${1:element/table dgsElement}, ${2:table properties})"
	},
	"dgsGetVisible": {
		"scope": "lua",
		"prefix": "dgsGetVisible",
		"description": "This function determines if a DGS element is visible. | URL: https://wiki.multitheftauto.com/wiki/DgsGetVisible",
		"body": "dgsGetVisible(${1:element guiElement})"
	},
	"dgsSetVisible": {
		"scope": "lua",
		"prefix": "dgsSetVisible",
		"description": "This function changes the visibility state of a DGS element. | URL: https://wiki.multitheftauto.com/wiki/DgsSetVisible",
		"body": "dgsSetVisible(${1:element/table dgsElement}, ${2:bool state})"
	},
	"dgsGetEnabled": {
		"scope": "lua",
		"prefix": "dgsGetEnabled",
		"description": "This function determines if a DGS element is enabled. | URL: https://wiki.multitheftauto.com/wiki/DgsGetEnabled",
		"body": "dgsGetEnabled(${1:element guiElement})"
	},
	"dgsSetEnabled": {
		"scope": "lua",
		"prefix": "dgsSetEnabled",
		"description": "This function enables/disables a DGS element. A disabled DGS element can't be used, gets a gray aspect and doesn't receive any events. | URL: https://wiki.multitheftauto.com/wiki/DgsSetEnabled",
		"body": "dgsSetEnabled(${1:element dgsElement}, ${2:bool enabled})"
	},
	"dgsGetPositionAlignment": {
		"scope": "lua",
		"prefix": "dgsGetPositionAlignment",
		"description": "This function returns the alignment of position from a specific DGS element | URL: https://wiki.multitheftauto.com/wiki/DgsGetPositionAlignment",
		"body": "dgsGetPositionAlignment(${1:element dgsElement})"
	},
	"dgsSetPositionAlignment": {
		"scope": "lua",
		"prefix": "dgsSetPositionAlignment",
		"description": "This function to set the alignment of position of a specific DGS element | URL: https://wiki.multitheftauto.com/wiki/DgsSetPositionAlignment",
		"body": "dgsSetPositionAlignment(${1:element dgsElement [}, ${2:string horizontalAlignment}, ${3:string verticalAlignment ]})"
	},
	"dgsGetAlpha": {
		"scope": "lua",
		"prefix": "dgsGetAlpha",
		"description": "Alpha represents the transparency of a dgs element. This function allows retrieval of a dgs element's current alpha. | URL: https://wiki.multitheftauto.com/wiki/DgsGetAlpha",
		"body": "dgsGetAlpha(${1:element dgsElement [}, ${2:bool isAbsolute = false}, ${3:bool includeParent = false ]})"
	},
	"dgsSetAlpha": {
		"scope": "lua",
		"prefix": "dgsSetAlpha",
		"description": "This changes the alpha level (the visibleness/transparency) of a DGS element | URL: https://wiki.multitheftauto.com/wiki/DgsSetAlpha",
		"body": "dgsSetAlpha(${1:element guielement}, ${2:float alpha})"
	},
	"dgsGetFont": {
		"scope": "lua",
		"prefix": "dgsGetFont",
		"description": "This function is used to get the current font that is used to draw text in DGS elements. | URL: https://wiki.multitheftauto.com/wiki/DgsGetFont",
		"body": "dgsGetFont(${1:element dgsElement})"
	},
	"dgsSetFont": {
		"scope": "lua",
		"prefix": "dgsSetFont",
		"description": "This function sets the font of a dgs element to be used when drawing text. a dgs font can be affected by dgsSetSystemFont | URL: https://wiki.multitheftauto.com/wiki/DgsSetFont",
		"body": "dgsSetFont(${1:element dgsElement}, ${2:mixed font})"
	},
	"dgsGetText": {
		"scope": "lua",
		"prefix": "dgsGetText",
		"description": "This function is used to get the text of DGS elements like edit boxes, labels, buttons etc. | URL: https://wiki.multitheftauto.com/wiki/DgsGetText",
		"body": "dgsGetText(${1:element guiElement})"
	},
	"dgsSetText": {
		"scope": "lua",
		"prefix": "dgsSetText",
		"description": "This function sets the text of a DGS element. | URL: https://wiki.multitheftauto.com/wiki/DgsSetText",
		"body": "dgsSetText(${1:element DGS element}, ${2:string text})"
	},
	"dgsGetPostGUI": {
		"scope": "lua",
		"prefix": "dgsGetPostGUI",
		"description": "This function gets the post gui state of a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsGetPostGUI",
		"body": "dgsGetPostGUI(${1:element dgsElement})"
	},
	"dgsSetPostGUI": {
		"scope": "lua",
		"prefix": "dgsSetPostGUI",
		"description": "This function sets the post gui state of a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsSetPostGUI",
		"body": "dgsSetPostGUI(${1:element dgsElement}, ${2:bool postGUI})"
	},
	"dgsGetInputEnabled": {
		"scope": "lua",
		"prefix": "dgsGetInputEnabled",
		"description": "This function is a replica of guiGetInputEnabled. In order to satisfy the needs of developers, the function exists here. | URL: https://wiki.multitheftauto.com/wiki/DgsGetInputEnabled",
		"body": "dgsGetInputEnabled()"
	},
	"dgsSetInputEnabled": {
		"scope": "lua",
		"prefix": "dgsSetInputEnabled",
		"description": "This function is a replica of guiSetInputEnabled. In order to satisfy the needs of developers, the function exists here. Because DGS element... | URL: https://wiki.multitheftauto.com/wiki/DgsSetInputEnabled",
		"body": "dgsSetInputEnabled(${1:bool enabled})"
	},
	"dgsGetInputMode": {
		"scope": "lua",
		"prefix": "dgsGetInputMode",
		"description": "This function is a replica of guiGetInputMode. In order to satisfy the needs of developers, the function exists here. | URL: https://wiki.multitheftauto.com/wiki/DgsGetInputMode",
		"body": "dgsGetInputMode(${1:})"
	},
	"dgsSetInputMode": {
		"scope": "lua",
		"prefix": "dgsSetInputMode",
		"description": "This function is a replica of guiSetInputMode. In order to satisfy the needs of developers, the function exists here. DGS elements will also... | URL: https://wiki.multitheftauto.com/wiki/DgsSetInputMode",
		"body": "dgsSetInputMode(${1:string mode})"
	},
	"dgsAttachToAutoDestroy": {
		"scope": "lua",
		"prefix": "dgsAttachToAutoDestroy",
		"description": "This function allows you to make a specific element destroy with a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsAttachToAutoDestroy",
		"body": "dgsAttachToAutoDestroy(${1:element sourceElement}, ${2:element dgsElement})"
	},
	"dgsDetachFromAutoDestroy": {
		"scope": "lua",
		"prefix": "dgsDetachFromAutoDestroy",
		"description": "This function allows you to stop the specific element from destroying with a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsDetachFromAutoDestroy",
		"body": "dgsDetachFromAutoDestroy(${1:element sourceElement}, ${2:element dgsElement})"
	},
	"dgsFocus": {
		"scope": "lua",
		"prefix": "dgsFocus",
		"description": "This function focuses a defocused DGS element. Used primarily for edit fields, memos, browser etc. | URL: https://wiki.multitheftauto.com/wiki/DgsFocus",
		"body": "dgsFocus(${1:element dgsElement})"
	},
	"dgsBlur": {
		"scope": "lua",
		"prefix": "dgsBlur",
		"description": "This function defocuses a focused DGS element. Used primarily for edit fields, memos, browser etc. | URL: https://wiki.multitheftauto.com/wiki/DgsBlur",
		"body": "dgsBlur(${1:element dgsElement})"
	},
	"dgsCreateFont": {
		"scope": "lua",
		"prefix": "dgsCreateFont",
		"description": "This function creates a dx font element that can be used in dgsSetFont and stored in dgs. Successful font creation is not guaranteed, and ma... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateFont",
		"body": "dgsCreateFont(${1:string filepath [}, ${2:int size=9}, ${3:bool bold=false}, ${4:string quality=\"proof\" ]})"
	},
	"dgsBringToFront": {
		"scope": "lua",
		"prefix": "dgsBringToFront",
		"description": "This function bring a dgs element to front. | URL: https://wiki.multitheftauto.com/wiki/DgsBringToFront",
		"body": "dgsBringToFront(${1:element dgsElement})"
	},
	"dgsMoveToBack": {
		"scope": "lua",
		"prefix": "dgsMoveToBack",
		"description": "This function moves a DGS element to the very back of all other DGS elements. | URL: https://wiki.multitheftauto.com/wiki/DgsMoveToBack",
		"body": "dgsMoveToBack(${1:element dgsElement})"
	},
	"dgsGetScreenSize": {
		"scope": "lua",
		"prefix": "dgsGetScreenSize",
		"description": "This function is a replica of guiGetScreenSize. In order to satisfy the needs of developers, the function exists here. | URL: https://wiki.multitheftauto.com/wiki/DgsGetScreenSize",
		"body": "dgsGetScreenSize()"
	},
	"dgsGetCursorPosition": {
		"scope": "lua",
		"prefix": "dgsGetCursorPosition",
		"description": "This function gets the position of the cursor and can be relative to a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsGetCursorPosition",
		"body": "dgsGetCursorPosition(${1:[ element dgsElement}, ${2:bool relative ]})"
	},
	"dgsGetMouseEnterGUI": {
		"scope": "lua",
		"prefix": "dgsGetMouseEnterGUI",
		"description": "This function gets the DGS Dx GUI element that the cursor is hovering on. | URL: https://wiki.multitheftauto.com/wiki/DgsGetMouseEnterGUI",
		"body": "dgsGetMouseEnterGUI(${1:})"
	},
	"dgsGetMouseLeaveGUI": {
		"scope": "lua",
		"prefix": "dgsGetMouseLeaveGUI",
		"description": "This function gets the DGS Dx GUI element that the cursor has just left from. | URL: https://wiki.multitheftauto.com/wiki/DgsGetMouseLeaveGUI",
		"body": "dgsGetMouseLeaveGUI(${1:})"
	},
	"dgsIsMouseWithinGUI": {
		"scope": "lua",
		"prefix": "dgsIsMouseWithinGUI",
		"description": "This function returns whether the mouse is in a specific dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsIsMouseWithinGUI",
		"body": "dgsIsMouseWithinGUI(${1:element/table withinElement})"
	},
	"dgsSetSystemFont": {
		"scope": "lua",
		"prefix": "dgsSetSystemFont",
		"description": "This function creates a dx font element as default font stored in dgs. Successful font creation is not guaranteed, and may fail due to hardw... | URL: https://wiki.multitheftauto.com/wiki/DgsSetSystemFont",
		"body": "dgsSetSystemFont(${1:string filepath [}, ${2:int size=9}, ${3:bool bold=false}, ${4:string quality=\"proof\" ]})"
	},
	"dgsGetSystemFont": {
		"scope": "lua",
		"prefix": "dgsGetSystemFont",
		"description": "This function gets the default dx font element in dgs. | URL: https://wiki.multitheftauto.com/wiki/DgsGetSystemFont",
		"body": "dgsGetSystemFont(${1:})"
	},
	"dgsGetElementsInLayer": {
		"scope": "lua",
		"prefix": "dgsGetElementsInLayer",
		"description": "This function gets the dgs elements which don't have parents from a specific layer. | URL: https://wiki.multitheftauto.com/wiki/DgsGetElementsInLayer",
		"body": "dgsGetElementsInLayer(${1:[ string layer = \"center\" ]})"
	},
	"dgsGetElementsFromResource": {
		"scope": "lua",
		"prefix": "dgsGetElementsFromResource",
		"description": "This function is used to get DGS elements which were created by other resources. | URL: https://wiki.multitheftauto.com/wiki/DgsGetElementsFromResource",
		"body": "dgsGetElementsFromResource(${1:[ resource res ]})"
	},
	"dgsGetFocusedGUI": {
		"scope": "lua",
		"prefix": "dgsGetFocusedGUI",
		"description": "This function gets a dgs element that is focused at present. | URL: https://wiki.multitheftauto.com/wiki/DgsGetFocusedGUI",
		"body": "dgsGetFocusedGUI(${1:})"
	},
	"dgsGetExportedFunctionName": {
		"scope": "lua",
		"prefix": "dgsGetExportedFunctionName",
		"description": "This function is used to get a specific exported function name or all exported function names | URL: https://wiki.multitheftauto.com/wiki/DgsGetExportedFunctionName",
		"body": "dgsGetExportedFunctionName(${1:[ string name ]})"
	},
	"dgsImportFunction": {
		"scope": "lua",
		"prefix": "dgsImportFunction",
		"description": "This function allows developers to import functions into his script. What we used to do is  or With this function, We can When you load dgs... | URL: https://wiki.multitheftauto.com/wiki/DgsImportFunction",
		"body": "dgsImportFunction(${1:[ string functionName ]})"
	},
	"dgsImportOOPClass": {
		"scope": "lua",
		"prefix": "dgsImportOOPClass",
		"description": "This function allows developers to import DGS OOP Class into his script. What we used to do is  or with import function with OOP Class When... | URL: https://wiki.multitheftauto.com/wiki/DgsImportOOPClass",
		"body": "dgsImportOOPClass(${1:})"
	},
	"dgsG2DLoadHooker": {
		"scope": "lua",
		"prefix": "dgsG2DLoadHooker",
		"description": "This function allows developers to load G2D hooker in script. | URL: https://wiki.multitheftauto.com/wiki/DgsG2DLoadHooker",
		"body": "dgsG2DLoadHooker(${1:})"
	},
	"dgsSetRenderSetting": {
		"scope": "lua",
		"prefix": "dgsSetRenderSetting",
		"description": "This function allows developers to change DGS render settings. | URL: https://wiki.multitheftauto.com/wiki/DgsSetRenderSetting",
		"body": "dgsSetRenderSetting(${1:string settingName}, ${2:mixed value})"
	},
	"dgsGetRenderSetting": {
		"scope": "lua",
		"prefix": "dgsGetRenderSetting",
		"description": "This function allows developers to get DGS render settings. | URL: https://wiki.multitheftauto.com/wiki/DgsGetRenderSetting",
		"body": "dgsGetRenderSetting(${1:string settingName})"
	},
	"dgsSimulateClick": {
		"scope": "lua",
		"prefix": "dgsSimulateClick",
		"description": "This function simulates a click without mouse clicking. | URL: https://wiki.multitheftauto.com/wiki/DgsSimulateClick",
		"body": "dgsSimulateClick(${1:element dgsElement}, ${2:string button})"
	},
	"dgsGetRootElement": {
		"scope": "lua",
		"prefix": "dgsGetRootElement",
		"description": "This function gets the resource root element of dgs, just like guiRoot. | URL: https://wiki.multitheftauto.com/wiki/DgsGetRootElement",
		"body": "dgsGetRootElement(${1:})"
	},
	"dgsAddMoveHandler": {
		"scope": "lua",
		"prefix": "dgsAddMoveHandler",
		"description": "This function can make dgs element movable like a window. Note: If applying move handler on dgs window, the original move handler will be re... | URL: https://wiki.multitheftauto.com/wiki/DgsAddMoveHandler",
		"body": "dgsAddMoveHandler(${1:element dgsElement [}, ${2:float x = 0}, ${3:float y = 0}, ${4:float width = 1}, ${5:float height = 1}, ${6:bool relativeX = true}, ${7:bool relativeY = true}, ${8:bool relativeW = true}, ${9:bool relativeH = true ]})"
	},
	"dgsRemoveMoveHandler": {
		"scope": "lua",
		"prefix": "dgsRemoveMoveHandler",
		"description": "This function removes move handler from dgs element. Note: You can not remove the built-in move handler of dgs window. | URL: https://wiki.multitheftauto.com/wiki/DgsRemoveMoveHandler",
		"body": "dgsRemoveMoveHandler(${1:element dgsElement})"
	},
	"dgsIsMoveHandled": {
		"scope": "lua",
		"prefix": "dgsIsMoveHandled",
		"description": "This function checks whether the move handler is added to the dgs element. Note: You can not check the built-in move handler of dgs window. | URL: https://wiki.multitheftauto.com/wiki/DgsIsMoveHandled",
		"body": "dgsIsMoveHandled(${1:element dgsElement})"
	},
	"dgsAddSizeHandler": {
		"scope": "lua",
		"prefix": "dgsAddSizeHandler",
		"description": "This function can make dgs element sizable like a window. Note: If applying size handler on dgs window, the original size handler will be re... | URL: https://wiki.multitheftauto.com/wiki/DgsAddSizeHandler",
		"body": "dgsAddSizeHandler(${1:element dgsElement [}, ${2:float left = 0}, ${3:float right = 0}, ${4:float top = 0}, ${5:float bottom = 0}, ${6:bool relativeLeft = true}, ${7:bool relativeRight = true}, ${8:bool relativeTop = true}, ${9:bool relativeBottom = true ]})"
	},
	"dgsRemoveSizeHandler": {
		"scope": "lua",
		"prefix": "dgsRemoveSizeHandler",
		"description": "This function removes size handler from dgs element. Note: You can not remove the built-in size handler of dgs window. | URL: https://wiki.multitheftauto.com/wiki/DgsRemoveSizeHandler",
		"body": "dgsRemoveSizeHandler(${1:element dgsElement})"
	},
	"dgsIsSizeHandled": {
		"scope": "lua",
		"prefix": "dgsIsSizeHandled",
		"description": "This function checks whether the size handler is added to the dgs element. Note: You can not check the built-in size handler of dgs window. | URL: https://wiki.multitheftauto.com/wiki/DgsIsSizeHandled",
		"body": "dgsIsSizeHandled(${1:element dgsElement})"
	},
	"dgsAttachElements": {
		"scope": "lua",
		"prefix": "dgsAttachElements",
		"description": "This function allows you to attach a specific dgs element to another dgs element. This will make something like dgsSetParent, but there will... | URL: https://wiki.multitheftauto.com/wiki/DgsAttachElements",
		"body": "dgsAttachElements(${1:element dgsElement}, ${2:element attachTo}, ${3:int/float offsetX}, ${4:int/float offsetY}, ${5:int/float offsetW}, ${6:int/float offsetH [}, ${7:bool relativePos = false}, ${8:bool relativeSize = false ]})"
	},
	"dgsDetachElements": {
		"scope": "lua",
		"prefix": "dgsDetachElements",
		"description": "This function allows you to detach a specific dgsElement from attached dgsElement | URL: https://wiki.multitheftauto.com/wiki/DgsDetachElements",
		"body": "dgsDetachElements(${1:element dgsElement})"
	},
	"dgsElementIsAttached": {
		"scope": "lua",
		"prefix": "dgsElementIsAttached",
		"description": "This function allows you know whether the specific dgs element is attached to other dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsElementIsAttached",
		"body": "dgsElementIsAttached(${1:element dgsElement})"
	},
	"dgsSetMultiClickInterval": {
		"scope": "lua",
		"prefix": "dgsSetMultiClickInterval",
		"description": "This function sets the interval among (n) times clicks. | URL: https://wiki.multitheftauto.com/wiki/DgsSetMultiClickInterval",
		"body": "dgsSetMultiClickInterval(${1:int interval})"
	},
	"dgsGetMultiClickInterval": {
		"scope": "lua",
		"prefix": "dgsGetMultiClickInterval",
		"description": "This function gets the interval among (n) times clicks. | URL: https://wiki.multitheftauto.com/wiki/DgsGetMultiClickInterval",
		"body": "dgsGetMultiClickInterval(${1:})"
	},
	"dgsSetMouseStayDelay": {
		"scope": "lua",
		"prefix": "dgsSetMouseStayDelay",
		"description": "This function sets the delay time that from mouse stops moving and cursor stays at a DGS element to onDgsMouseStay event triggers. | URL: https://wiki.multitheftauto.com/wiki/DgsSetMouseStayDelay",
		"body": "dgsSetMouseStayDelay(${1:int interval})"
	},
	"dgsGetMouseStayDelay": {
		"scope": "lua",
		"prefix": "dgsGetMouseStayDelay",
		"description": "This function gets the delay time that from mouse stops moving and cursor stays at a DGS element to onDgsMouseStay event triggers. | URL: https://wiki.multitheftauto.com/wiki/DgsGetMouseStayDelay",
		"body": "dgsGetMouseStayDelay(${1:})"
	},
	"dgsCenterElement": {
		"scope": "lua",
		"prefix": "dgsCenterElement",
		"description": "No info | URL: https://wiki.multitheftauto.com/wiki/DgsCenterElement",
		"body": "dgsCenterElement(${1:element dgsElement [}, ${2:bool remainX}, ${3:bool remainY ]})"
	},
	"dgsSetElementKeeperEnabled": {
		"scope": "lua",
		"prefix": "dgsSetElementKeeperEnabled",
		"description": "This function only works with dgsImportFunction and dgsImportOOPClass This function will enable/disable DGS element keeper. What is DGS Elem... | URL: https://wiki.multitheftauto.com/wiki/DgsSetElementKeeperEnabled",
		"body": "dgsSetElementKeeperEnabled(${1:bool state})"
	},
	"dgsGetElementKeeperEnabled": {
		"scope": "lua",
		"prefix": "dgsGetElementKeeperEnabled",
		"description": "This function only works with dgsImportFunction and dgsImportOOPClass This function gets whether current resource enables DGS element keeper... | URL: https://wiki.multitheftauto.com/wiki/DgsGetElementKeeperEnabled",
		"body": "dgsGetElementKeeperEnabled(${1:})"
	},
	"dgsSetClickingSound": {
		"scope": "lua",
		"prefix": "dgsSetClickingSound",
		"description": "This function applies a clicking sound to a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsSetClickingSound",
		"body": "dgsSetClickingSound(${1:element dgsElement}, ${2:string soundPath})"
	},
	"dgsGetClickingSound": {
		"scope": "lua",
		"prefix": "dgsGetClickingSound",
		"description": "This function gets the clicking sound that has already been applied. | URL: https://wiki.multitheftauto.com/wiki/DgsGetClickingSound",
		"body": "dgsGetClickingSound(${1:element dgsElement})"
	},
	"dgsSetClickingSoundVolume": {
		"scope": "lua",
		"prefix": "dgsSetClickingSoundVolume",
		"description": "This function changes the volume of the clicking sound to a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsSetClickingSoundVolume",
		"body": "dgsSetClickingSoundVolume(${1:element dgsElement}, ${2:float volume})"
	},
	"dgsGetClickingSoundVolume": {
		"scope": "lua",
		"prefix": "dgsGetClickingSoundVolume",
		"description": "This function gets the volume of the clicking sound of a dgs element | URL: https://wiki.multitheftauto.com/wiki/DgsGetClickingSoundVolume",
		"body": "dgsGetClickingSoundVolume(${1:element dgsElement})"
	},
	"dgsSetCustomCursorEnabled": {
		"scope": "lua",
		"prefix": "dgsSetCustomCursorEnabled",
		"description": "This function enables custom cursor of DGS. | URL: https://wiki.multitheftauto.com/wiki/DgsSetCustomCursorEnabled",
		"body": "dgsSetCustomCursorEnabled(${1:bool state})"
	},
	"dgsGetCustomCursorEnabled": {
		"scope": "lua",
		"prefix": "dgsGetCustomCursorEnabled",
		"description": "This function gets whether the custom cursor of DGS is enabled or not. | URL: https://wiki.multitheftauto.com/wiki/DgsGetCustomCursorEnabled",
		"body": "dgsGetCustomCursorEnabled()"
	},
	"dgsSetCustomCursorImage": {
		"scope": "lua",
		"prefix": "dgsSetCustomCursorImage",
		"description": "This function applys an image to a specific type. If leaving the parameters empty, DGS will apply the images from current style settings. | URL: https://wiki.multitheftauto.com/wiki/DgsSetCustomCursorImage",
		"body": "dgsSetCustomCursorImage(${1:[ string cursorType = nil}, ${2:material image = nil}, ${3:float rotation = 0.0}, ${4:table rotationCenter = { 0}, ${5:0 }}, ${6:table offset = { 0}, ${7:0 }}, ${8:float scale = 0.0 ]})"
	},
	"dgsGetCustomCursorImage": {
		"scope": "lua",
		"prefix": "dgsGetCustomCursorImage",
		"description": "This function gets the image that has applied to a specific type. | URL: https://wiki.multitheftauto.com/wiki/DgsGetCustomCursorImage",
		"body": "dgsGetCustomCursorImage(${1:string cursorType})"
	},
	"dgsSetCustomCursorSize": {
		"scope": "lua",
		"prefix": "dgsSetCustomCursorSize",
		"description": "This function changes the size of DGS custom cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsSetCustomCursorSize",
		"body": "dgsSetCustomCursorSize(${1:float size})"
	},
	"dgsGetCustomCursorSize": {
		"scope": "lua",
		"prefix": "dgsGetCustomCursorSize",
		"description": "This function gets the size of DGS custom cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsGetCustomCursorSize",
		"body": "dgsGetCustomCursorSize(${1:})"
	},
	"dgsGetCustomCursorType": {
		"scope": "lua",
		"prefix": "dgsGetCustomCursorType",
		"description": "This function gets the current type of cursor. This function also works when custom cursor is not enabled. Available cursor type are as foll... | URL: https://wiki.multitheftauto.com/wiki/DgsGetCustomCursorType",
		"body": "dgsGetCustomCursorType(${1:})"
	},
	"dgsSetCustomCursorColor": {
		"scope": "lua",
		"prefix": "dgsSetCustomCursorColor",
		"description": "This function sets the color of DGS custom cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsSetCustomCursorColor",
		"body": "dgsSetCustomCursorColor(${1:int color})"
	},
	"dgsGetCustomCursorColor": {
		"scope": "lua",
		"prefix": "dgsGetCustomCursorColor",
		"description": "This function gets the color of DGS custom cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsGetCustomCursorColor",
		"body": "dgsGetCustomCursorColor(${1:})"
	},
	"dgsTranslationTableExists": {
		"scope": "lua",
		"prefix": "dgsTranslationTableExists",
		"description": "This function checks whether translation table exists | URL: https://wiki.multitheftauto.com/wiki/DgsTranslationTableExists",
		"body": "dgsTranslationTableExists(${1:string name})"
	},
	"dgsSetTranslationTable": {
		"scope": "lua",
		"prefix": "dgsSetTranslationTable",
		"description": "This function sets translation table. | URL: https://wiki.multitheftauto.com/wiki/DgsSetTranslationTable",
		"body": "dgsSetTranslationTable(${1:string name}, ${2:table translationTable})"
	},
	"dgsAttachToTranslation": {
		"scope": "lua",
		"prefix": "dgsAttachToTranslation",
		"description": "This function attaches a single dgs element to a specfic translation table. | URL: https://wiki.multitheftauto.com/wiki/DgsAttachToTranslation",
		"body": "dgsAttachToTranslation(${1:element dgsElement}, ${2:string name})"
	},
	"dgsDetachFromTranslation": {
		"scope": "lua",
		"prefix": "dgsDetachFromTranslation",
		"description": "This function detaches dgs element from translation table. | URL: https://wiki.multitheftauto.com/wiki/DgsDetachFromTranslation",
		"body": "dgsDetachFromTranslation(${1:element dgsElement})"
	},
	"dgsSetAttachTranslation": {
		"scope": "lua",
		"prefix": "dgsSetAttachTranslation",
		"description": "This function allows following dgs element to attach to translation table when creating in the same resource. This is not client-global sett... | URL: https://wiki.multitheftauto.com/wiki/DgsSetAttachTranslation",
		"body": "dgsSetAttachTranslation(${1:string name})"
	},
	"dgsGetTranslationName": {
		"scope": "lua",
		"prefix": "dgsGetTranslationName",
		"description": "This function gets translation table name that the dgs element use. | URL: https://wiki.multitheftauto.com/wiki/DgsGetTranslationName",
		"body": "dgsGetTranslationName(${1:element dgsElement})"
	},
	"dgsAnimTo": {
		"scope": "lua",
		"prefix": "dgsAnimTo",
		"description": "This function allow us to add animation to dgs elements. Change any property of dgs elements with animation effect. | URL: https://wiki.multitheftauto.com/wiki/DgsAnimTo",
		"body": "dgsAnimTo(${1:element/table dgsElement}, ${2:string propertyName}, ${3:mixed value}, ${4:string easing = \"Linear\"}, ${5:int duration [}, ${6:int delay = 0}, ${7:bool reverseProgress = false ]})"
	},
	"dgsIsAniming": {
		"scope": "lua",
		"prefix": "dgsIsAniming",
		"description": "This function allow us to check whether the dgs element is being animated dgsAnimTo. | URL: https://wiki.multitheftauto.com/wiki/DgsIsAniming",
		"body": "dgsIsAniming(${1:element dgsElement})"
	},
	"dgsStopAniming": {
		"scope": "lua",
		"prefix": "dgsStopAniming",
		"description": "This function allow us to stop the animation of dgs element by dgsAnimTo. | URL: https://wiki.multitheftauto.com/wiki/DgsStopAniming",
		"body": "dgsStopAniming(${1:element dgsElement})"
	},
	"dgsMoveTo": {
		"scope": "lua",
		"prefix": "dgsMoveTo",
		"description": "This function allow us to add animation to dgs elements. Change position of dgs elements with animation effect. | URL: https://wiki.multitheftauto.com/wiki/DgsMoveTo",
		"body": "dgsMoveTo(${1:element dgsElement}, ${2:float x}, ${3:float y}, ${4:bool relative}, ${5:string easing = \"Linear\"}, ${6:float duration [}, ${7:int delay = 0 ]})"
	},
	"dgsIsMoving": {
		"scope": "lua",
		"prefix": "dgsIsMoving",
		"description": "This function allow us to check whether the position of dgs element is being changed by dgsMoveTo. | URL: https://wiki.multitheftauto.com/wiki/DgsIsMoving",
		"body": "dgsIsMoving(${1:element dgsElement})"
	},
	"dgsStopMoving": {
		"scope": "lua",
		"prefix": "dgsStopMoving",
		"description": "This function allow us to stop the position changing of dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsStopMoving",
		"body": "dgsStopMoving(${1:element dgsElement})"
	},
	"dgsSizeTo": {
		"scope": "lua",
		"prefix": "dgsSizeTo",
		"description": "This function allow us to add animation to dgs elements. Change size of dgs elements with animation effect. | URL: https://wiki.multitheftauto.com/wiki/DgsSizeTo",
		"body": "dgsSizeTo(${1:element dgsElement}, ${2:float w}, ${3:float h}, ${4:bool relative}, ${5:string easing = \"Linear\"}, ${6:float duration [}, ${7:int delay = 0 ]})"
	},
	"dgsIsSizing": {
		"scope": "lua",
		"prefix": "dgsIsSizing",
		"description": "This function allow us to check whether the size of dgs element is being changed by dgsSizeTo. | URL: https://wiki.multitheftauto.com/wiki/DgsIsSizing",
		"body": "dgsIsSizing(${1:element dgsElement})"
	},
	"dgsStopSizing": {
		"scope": "lua",
		"prefix": "dgsStopSizing",
		"description": "This function allow us to stop the size changing of dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsStopSizing",
		"body": "dgsStopSizing(${1:element dgsElement})"
	},
	"dgsAlphaTo": {
		"scope": "lua",
		"prefix": "dgsAlphaTo",
		"description": "This function allow us to add animation to dgs elements. Change alpha of dgs elements with animation effect. | URL: https://wiki.multitheftauto.com/wiki/DgsAlphaTo",
		"body": "dgsAlphaTo(${1:element dgsElement}, ${2:float targetAlpha}, ${3:string easing = \"Linear\"}, ${4:float duration [}, ${5:int delay = 0 ]})"
	},
	"dgsIsAlphaing": {
		"scope": "lua",
		"prefix": "dgsIsAlphaing",
		"description": "This function allow us to check whether the alpha of dgs element is being changed by dgsAlphaTo. | URL: https://wiki.multitheftauto.com/wiki/DgsIsAlphaing",
		"body": "dgsIsAlphaing(${1:element dgsElement})"
	},
	"dgsStopAlphaing": {
		"scope": "lua",
		"prefix": "dgsStopAlphaing",
		"description": "This function allow us to stop the alpha changing of dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsStopAlphaing",
		"body": "dgsStopAlphaing(${1:element dgsElement})"
	},
	"dgsAddEasingFunction": {
		"scope": "lua",
		"prefix": "dgsAddEasingFunction",
		"description": "This function allow us to add easing functions for DGS animation. And this can only be used with DGS. | URL: https://wiki.multitheftauto.com/wiki/DgsAddEasingFunction",
		"body": "dgsAddEasingFunction(${1:string name}, ${2:string functionStr})"
	},
	"dgsRemoveEasingFunction": {
		"scope": "lua",
		"prefix": "dgsRemoveEasingFunction",
		"description": "This function allow us to remove easing functions we created by dgsAddEasingFunction. | URL: https://wiki.multitheftauto.com/wiki/DgsRemoveEasingFunction",
		"body": "dgsRemoveEasingFunction(${1:string name})"
	},
	"dgsEasingFunctionExists": {
		"scope": "lua",
		"prefix": "dgsEasingFunctionExists",
		"description": "This function checks whether the easing function exists (built-in easing functions and those who were created by dgsAddEasingFunction). | URL: https://wiki.multitheftauto.com/wiki/DgsEasingFunctionExists",
		"body": "dgsEasingFunctionExists(${1:string name})"
	},
	"dgs3DGetPosition": {
		"scope": "lua",
		"prefix": "dgs3DGetPosition",
		"description": "This function returns the position of 3D element in the world. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DGetPosition",
		"body": "dgs3DGetPosition(${1:element dgsElement})"
	},
	"dgs3DSetPosition": {
		"scope": "lua",
		"prefix": "dgs3DSetPosition",
		"description": "This function sets the position of 3D element in the world. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DSetPosition",
		"body": "dgs3DSetPosition(${1:element dgsElement}, ${2:float x}, ${3:float y}, ${4:float z})"
	},
	"dgs3DGetInterior": {
		"scope": "lua",
		"prefix": "dgs3DGetInterior",
		"description": "This function gets the interior of the DGS 3D element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DGetInterior",
		"body": "dgs3DGetInterior(${1:element element3D})"
	},
	"dgs3DSetInterior": {
		"scope": "lua",
		"prefix": "dgs3DSetInterior",
		"description": "This function sets the interior of the DGS 3D element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DSetInterior",
		"body": "dgs3DSetInterior(${1:element element3D}, ${2:int interior})"
	},
	"dgs3DSetDimension": {
		"scope": "lua",
		"prefix": "dgs3DSetDimension",
		"description": "This function sets the dimension (-1~65535) of the DGS 3D Element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DSetDimension",
		"body": "dgs3DSetDimension(${1:element element3D}, ${2:int dimension})"
	},
	"dgs3DGetDimension": {
		"scope": "lua",
		"prefix": "dgs3DGetDimension",
		"description": "This function gets the dimension (-1~65535) of the DGS 3D Element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DGetDimension",
		"body": "dgs3DGetDimension(${1:element element3D})"
	},
	"dgsCreate3DInterface": {
		"scope": "lua",
		"prefix": "dgsCreate3DInterface",
		"description": "This function creates a 3d interface in the world. Where the 3d interface faces to can be adjusted by normal vector. | URL: https://wiki.multitheftauto.com/wiki/DgsCreate3DInterface",
		"body": "dgsCreate3DInterface(${1:float x}, ${2:float y}, ${3:float z}, ${4:float width}, ${5:float height}, ${6:int resolutionX}, ${7:int resolutionY [}, ${8:int color = 0xFFFFFFFF}, ${9:float faceX = cameraX}, ${10:float faceY = cameraY}, ${11:float faceZ = cameraZ}, ${12:float distance = 100}, ${13:float rotation = 0 ]})"
	},
	"dgs3DInterfaceGetBlendMode": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceGetBlendMode",
		"description": "This function allows yout to get the blend mode of dgs 3d interface. Learn More dxGetBlendMode | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceGetBlendMode",
		"body": "dgs3DInterfaceGetBlendMode(${1:element dgsElement})"
	},
	"dgs3DInterfaceSetBlendMode": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceSetBlendMode",
		"description": "This function allows yout to change the blend mode of dgs 3d interface. Learn More dxSetBlendMode | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceSetBlendMode",
		"body": "dgs3DInterfaceSetBlendMode(${1:element dgsElement}, ${2:string blendMode})"
	},
	"dgs3DInterfaceGetFaceTo": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceGetFaceTo",
		"description": "This function gets the position that the DGS 3D interface faces to. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceGetFaceTo",
		"body": "dgs3DInterfaceGetFaceTo(${1:element dgsElement})"
	},
	"dgs3DInterfaceSetFaceTo": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceSetFaceTo",
		"description": "This function sets the position that the DGS 3D interface faces to. >>>Note: If the DGS 3D interface is attached to an element, please use d... | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceSetFaceTo",
		"body": "dgs3DInterfaceSetFaceTo(${1:element dgsElement [}, ${2:float x}, ${3:float y}, ${4:float z}, ${5:string relativeTo = \"self\" ]})"
	},
	"dgs3DInterfaceGetResolution": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceGetResolution",
		"description": "This function returns the width and height of the render target of 3D interface. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceGetResolution",
		"body": "dgs3DInterfaceGetResolution(${1:element dgsElement})"
	},
	"dgs3DInterfaceSetResolution": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceSetResolution",
		"description": "This function sets the width and height of render target of 3D interface. >>>Warning: Higher resolution takes more video memory!<<< | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceSetResolution",
		"body": "dgs3DInterfaceSetResolution(${1:element dgsElement}, ${2:int width}, ${3:int height})"
	},
	"dgs3DInterfaceSetRoll": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceSetRoll",
		"description": "This function sets the roll rotation of dgs 3d interface | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceSetRoll",
		"body": "dgs3DInterfaceSetRoll(${1:element dgsElement}, ${2:float rollRotation})"
	},
	"dgs3DInterfaceGetRoll": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceGetRoll",
		"description": "This function gets the roll rotation of dgs 3d interface | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceGetRoll",
		"body": "dgs3DInterfaceGetRoll(${1:element dgsElement})"
	},
	"dgs3DInterfaceGetSize": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceGetSize",
		"description": "This function returns the width and height of 3D interface in the world. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceGetSize",
		"body": "dgs3DInterfaceGetSize(${1:element dgsElement})"
	},
	"dgs3DInterfaceSetSize": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceSetSize",
		"description": "This function sets the width and height of 3D interface in the world. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceSetSize",
		"body": "dgs3DInterfaceSetSize(${1:element dgsElement}, ${2:float width}, ${3:float height})"
	},
	"dgs3DInterfaceIsAttached": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceIsAttached",
		"description": "This function checks whether the dgs 3d interface is attached to an element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceIsAttached",
		"body": "dgs3DInterfaceIsAttached(${1:element dgsElement})"
	},
	"dgs3DInterfaceAttachToElement": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceAttachToElement",
		"description": "This function sets the attached offsets of the attached dgs 3d interface. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceAttachToElement",
		"body": "dgs3DInterfaceAttachToElement(${1:element dgsElement}, ${2:element targetElement [}, ${3:float offX = offX}, ${4:float offY = offY}, ${5:float offZ = offZ}, ${6:float offFaceX = offFaceX}, ${7:float offFaceY = offFaceY}, ${8:float offFaceZ = offFaceZ ]})"
	},
	"dgs3DInterfaceDetachFromElement": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceDetachFromElement",
		"description": "This function detaches dgs 3d interface. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceDetachFromElement",
		"body": "dgs3DInterfaceDetachFromElement(${1:element dgsElement})"
	},
	"dgs3DInterfaceSetAttachedOffsets": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceSetAttachedOffsets",
		"description": "This function sets the attached offsets of the attached dgs 3d interface. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceSetAttachedOffsets",
		"body": "dgs3DInterfaceSetAttachedOffsets(${1:element dgsElement [}, ${2:float offsetX = offsetX}, ${3:float offsetY = offsetY}, ${4:float offsetZ = offsetZ}, ${5:float offsetFaceX = offsetFaceX}, ${6:float offsetFaceY = offsetFaceY}, ${7:float offsetFaceZ = offsetFaceZ ]})"
	},
	"dgs3DInterfaceGetAttachedOffsets": {
		"scope": "lua",
		"prefix": "dgs3DInterfaceGetAttachedOffsets",
		"description": "This function gets the attached offsets of the attached dgs 3d interface. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DInterfaceGetAttachedOffsets",
		"body": "dgs3DInterfaceGetAttachedOffsets(${1:element dgsElement})"
	},
	"dgsCreate3DLine": {
		"scope": "lua",
		"prefix": "dgsCreate3DLine",
		"description": "This function creates a DGS 3D Line in the world. | URL: https://wiki.multitheftauto.com/wiki/DgsCreate3DLine",
		"body": "dgsCreate3DLine(${1:float x}, ${2:float y}, ${3:float z [}, ${4:float rx = 0}, ${5:float ry = 0}, ${6:float rz = 0}, ${7:float width = 1}, ${8:float color = 0xFFFFFFFF}, ${9:float maxDistance = 80 ]})"
	},
	"dgs3DLineAddItem": {
		"scope": "lua",
		"prefix": "dgs3DLineAddItem",
		"description": "This function adds an item into 3d line. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DLineAddItem",
		"body": "dgs3DLineAddItem(${1:element line3D}, ${2:float startX}, ${3:float startY}, ${4:float startZ}, ${5:float endX}, ${6:float endY}, ${7:float endZ [}, ${8:float lineWidth = dgs3DLineWidth}, ${9:int lineColor = dgs3DLineColor}, ${10:bool isRelative = false ]})"
	},
	"dgs3DLineRemoveItem": {
		"scope": "lua",
		"prefix": "dgs3DLineRemoveItem",
		"description": "This function removes an item from dgs 3d line. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DLineRemoveItem",
		"body": "dgs3DLineRemoveItem(${1:element line3D}, ${2:int itemIndex})"
	},
	"dgs3DLineSetItemPosition": {
		"scope": "lua",
		"prefix": "dgs3DLineSetItemPosition",
		"description": "This function sets the position of the specified item of DGS 3D Line. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DLineSetItemPosition",
		"body": "dgs3DLineSetItemPosition(${1:element line3D}, ${2:int index}, ${3:float x}, ${4:float y}, ${5:float z})"
	},
	"dgs3DLineGetItemPosition": {
		"scope": "lua",
		"prefix": "dgs3DLineGetItemPosition",
		"description": "This function gets the position of the specified item of DGS 3D Line. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DLineGetItemPosition",
		"body": "dgs3DLineGetItemPosition(${1:element line3D}, ${2:int index})"
	},
	"dgs3DLineSetItemWidth": {
		"scope": "lua",
		"prefix": "dgs3DLineSetItemWidth",
		"description": "This function sets the width of the specified item of DGS 3D Line. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DLineSetItemWidth",
		"body": "dgs3DLineSetItemWidth(${1:element line3D}, ${2:int index}, ${3:float width})"
	},
	"dgs3DLineGetItemWidth": {
		"scope": "lua",
		"prefix": "dgs3DLineGetItemWidth",
		"description": "This function gets the width of the specified item of DGS 3D Line. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DLineGetItemWidth",
		"body": "dgs3DLineGetItemWidth(${1:element line3D}, ${2:int index})"
	},
	"dgs3DLineSetItemColor": {
		"scope": "lua",
		"prefix": "dgs3DLineSetItemColor",
		"description": "This function sets the color of the specified item of DGS 3D Line. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DLineSetItemColor",
		"body": "dgs3DLineSetItemColor(${1:element line3D}, ${2:int index}, ${3:int color})"
	},
	"dgs3DLineGetItemColor": {
		"scope": "lua",
		"prefix": "dgs3DLineGetItemColor",
		"description": "This function gets the color of the specified item of DGS 3D Line. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DLineGetItemColor",
		"body": "dgs3DLineGetItemColor(${1:element line3D}, ${2:int index})"
	},
	"dgsCreate3DImage": {
		"scope": "lua",
		"prefix": "dgsCreate3DImage",
		"description": "This function creates a 3d image in the world ( such as nametag ). | URL: https://wiki.multitheftauto.com/wiki/DgsCreate3DImage",
		"body": "dgsCreate3DImage(${1:float x}, ${2:float y}, ${3:float z}, ${4:string/texture/nil image[}, ${5:int color = 0xFFFFFFFF}, ${6:float scaleX = 1}, ${7:float scaleY = 1}, ${8:float maxDistance = 80 ]})"
	},
	"dgs3DImageSetSize": {
		"scope": "lua",
		"prefix": "dgs3DImageSetSize",
		"description": "This function sets the size of the image of the 3d image when distance between camera and 3d image is 50 units. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageSetSize",
		"body": "dgs3DImageSetSize(${1:element image3D}, ${2:float width}, ${3:float height})"
	},
	"dgs3DImageGetSize": {
		"scope": "lua",
		"prefix": "dgs3DImageGetSize",
		"description": "This function gets the size of the image of the 3d image when distance between camera and 3d image is 50 units. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageGetSize",
		"body": "dgs3DImageGetSize(${1:element image3D})"
	},
	"dgs3DImageSetImage": {
		"scope": "lua",
		"prefix": "dgs3DImageSetImage",
		"description": "This function allows you to change the image in DGS 3d image element to another one. Note: | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageSetImage",
		"body": "dgs3DImageSetImage(${1:element image3D}, ${2:element/string texture})"
	},
	"dgs3DImageGetImage": {
		"scope": "lua",
		"prefix": "dgs3DImageGetImage",
		"description": "This function allows you to get the image from dgs 3d image element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageGetImage",
		"body": "dgs3DImageGetImage(${1:element image3D})"
	},
	"dgs3DImageAttachToElement": {
		"scope": "lua",
		"prefix": "dgs3DImageAttachToElement",
		"description": "This function attaches 3D Image element to another element, so that the first one follows the second whenever it moves.  If an attempt is ma... | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageAttachToElement",
		"body": "dgs3DImageAttachToElement(${1:dgsElement the3DImageElement}, ${2:element theAttachToElement}, ${3:[ float xPosOffset = 0}, ${4:float yPosOffset = 0}, ${5:float zPosOffset = 0}, ${6:float xRotOffset = 0}, ${7:float yRotOffset = 0}, ${8:float zRotOffset = 0 ]})"
	},
	"dgs3DImageIsAttached": {
		"scope": "lua",
		"prefix": "dgs3DImageIsAttached",
		"description": "This functions checks whether or not 3DImage element is attached to another element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageIsAttached",
		"body": "dgs3DImageIsAttached(${1:dgsElement element})"
	},
	"dgs3DImageDetachFromElement": {
		"scope": "lua",
		"prefix": "dgs3DImageDetachFromElement",
		"description": "This function detaches attached 3DImageElement from another element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageDetachFromElement",
		"body": "dgs3DImageDetachFromElement(${1:element the3DImageElement}, ${2:[ element theAttachToElement ]})"
	},
	"dgs3DImageGetNativeSize": {
		"scope": "lua",
		"prefix": "dgs3DImageGetNativeSize",
		"description": "This function gets the size of the texture that is loaded in DGS 3d image. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageGetNativeSize",
		"body": "dgs3DImageGetNativeSize(${1:element dgs3DImage})"
	},
	"dgs3DImageSetUVPosition": {
		"scope": "lua",
		"prefix": "dgs3DImageSetUVPosition",
		"description": "This function sets the UV positon of a DGS 3d image (Only available when there is a texture loaded in DGS 3d image). | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageSetUVPosition",
		"body": "dgs3DImageSetUVPosition(${1:element dgs3DImage}, ${2:float UPos}, ${3:float VPos}, ${4:bool relative})"
	},
	"dgs3DImageGetUVPosition": {
		"scope": "lua",
		"prefix": "dgs3DImageGetUVPosition",
		"description": "This function gets the UV positon of a DGS 3d image (Only available when there is a texture loaded in DGS 3d image). | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageGetUVPosition",
		"body": "dgs3DImageGetUVPosition(${1:element dgs3DImage}, ${2:bool relative})"
	},
	"dgs3DImageSetUVSize": {
		"scope": "lua",
		"prefix": "dgs3DImageSetUVSize",
		"description": "This function sets the UV size of a DGS 3d image (Only available when there is a texture loaded in DGS 3d image). | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageSetUVSize",
		"body": "dgs3DImageSetUVSize(${1:element dgs3DImage}, ${2:float UPos}, ${3:float VPos}, ${4:bool relative})"
	},
	"dgs3DImageGetUVSize": {
		"scope": "lua",
		"prefix": "dgs3DImageGetUVSize",
		"description": "This function gets the UV size of a DGS 3d image (Only available when there is a texture loaded in DGS 3d image). | URL: https://wiki.multitheftauto.com/wiki/Dgs3DImageGetUVSize",
		"body": "dgs3DImageGetUVSize(${1:element dgs3DImage}, ${2:bool relative})"
	},
	"dgsCreate3DText": {
		"scope": "lua",
		"prefix": "dgsCreate3DText",
		"description": "This function creates a 3d text in the world ( such as nametag ). | URL: https://wiki.multitheftauto.com/wiki/DgsCreate3DText",
		"body": "dgsCreate3DText(${1:float x}, ${2:float y}, ${3:float z}, ${4:string text [}, ${5:int color = 0xFFFFFFFF}, ${6:dx-font/string font = nil}, ${7:float scaleX = 1}, ${8:float scaleY = 1}, ${9:float maxDistance = 80}, ${10:bool = colorcoded = false ]})"
	},
	"dgs3DTextIsAttached": {
		"scope": "lua",
		"prefix": "dgs3DTextIsAttached",
		"description": "This function checks whether the DGS 3D Text is attached. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DTextIsAttached",
		"body": "dgs3DTextIsAttached(${1:element text3D})"
	},
	"dgs3DTextAttachToElement": {
		"scope": "lua",
		"prefix": "dgs3DTextAttachToElement",
		"description": "This function attaches DGS 3D Text to an element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DTextAttachToElement",
		"body": "dgs3DTextAttachToElement(${1:element text3D}, ${2:element targetElement [}, ${3:float offsetX = 0}, ${4:float offsetY = 0}, ${5:float offsetZ = 0 ]})"
	},
	"dgs3DTextDetachFromElement": {
		"scope": "lua",
		"prefix": "dgs3DTextDetachFromElement",
		"description": "This function detaches DGS 3D Text from the attached element. | URL: https://wiki.multitheftauto.com/wiki/Dgs3DTextDetachFromElement",
		"body": "dgs3DTextDetachFromElement(${1:element text3D})"
	},
	"dgs3DTextSetAttachedOffsets": {
		"scope": "lua",
		"prefix": "dgs3DTextSetAttachedOffsets",
		"description": "This function sets the attached offsets of the attached DGS 3D Text | URL: https://wiki.multitheftauto.com/wiki/Dgs3DTextSetAttachedOffsets",
		"body": "dgs3DTextSetAttachedOffsets(${1:element text3D [}, ${2:float offsetX = 0}, ${3:float offsetY = 0}, ${4:float offsetZ = 0 ]})"
	},
	"dgs3DTextGetAttachedOffsets": {
		"scope": "lua",
		"prefix": "dgs3DTextGetAttachedOffsets",
		"description": "This function gets the attached offsets of the attached DGS 3D Text | URL: https://wiki.multitheftauto.com/wiki/Dgs3DTextGetAttachedOffsets",
		"body": "dgs3DTextGetAttachedOffsets(${1:element text3D})"
	},
	"dgsCreateBrowser": {
		"scope": "lua",
		"prefix": "dgsCreateBrowser",
		"description": "This function creates a browser handled and rendered by dgs. All of the functions of browser are available. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateBrowser",
		"body": "dgsCreateBrowser(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:bool relative [}, ${6:element parent = nil}, ${7:bool isLocal = false}, ${8:bool isTransparent = false}, ${9:float resolutionX = width}, ${10:float resolutionY = height}, ${11:int color = 0xFFFFFFFF ]})"
	},
	"dgsCreateButton": {
		"scope": "lua",
		"prefix": "dgsCreateButton",
		"description": "This function allows creation of a DGS Button, which is a clickable item as part of GUI. Notice: This is a function exported by DGS! | URL: https://wiki.multitheftauto.com/wiki/DgsCreateButton",
		"body": "dgsCreateButton(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:string text}, ${6:bool relative [}, ${7:element parent = nil}, ${8:int textColor = 0xFFFFFFFF}, ${9:float scaleX = 1}, ${10:float scaleY = 1}, ${11:element normalImage = nil}, ${12:element hoveringImage = nil}, ${13:element clickedImage = nil}, ${14:int normalColor = 0xC80078C8}, ${15:int hoveringColor = 0xC8005AFF}, ${16:int clickedColor = 0xC8325A]})"
	},
	"dgsButtonGetTextExtent": {
		"scope": "lua",
		"prefix": "dgsButtonGetTextExtent",
		"description": "This function returns the extent, or width, of the current text inside a DGS button. | URL: https://wiki.multitheftauto.com/wiki/DgsButtonGetTextExtent",
		"body": "dgsButtonGetTextExtent(${1:element theButton})"
	},
	"dgsButtonGetFontHeight": {
		"scope": "lua",
		"prefix": "dgsButtonGetFontHeight",
		"description": "This function returns the height of the font currently used in a DGS button. | URL: https://wiki.multitheftauto.com/wiki/DgsButtonGetFontHeight",
		"body": "dgsButtonGetFontHeight(${1:element theButton})"
	},
	"dgsButtonGetTextSize": {
		"scope": "lua",
		"prefix": "dgsButtonGetTextSize",
		"description": "This function retrieves the theoretical width and height (in pixels) of a certain piece of text of dgs button. | URL: https://wiki.multitheftauto.com/wiki/DgsButtonGetTextSize",
		"body": "dgsButtonGetTextSize(${1:element theButton})"
	},
	"dgsCreateCheckBox": {
		"scope": "lua",
		"prefix": "dgsCreateCheckBox",
		"description": "This function creates a DGS Dx Check Box. Note: DGS Dx Check Box have 3 states.(checked: true; unchecked: false; indeterminate: nil) | URL: https://wiki.multitheftauto.com/wiki/DgsCreateCheckBox",
		"body": "dgsCreateCheckBox(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:string text}, ${6:bool selected}, ${7:bool relative [}, ${8:element parent = nil}, ${9:int textColor}, ${10:float scaleX = 1.0}, ${11:float scaleY = 1.0}, ${12:element normalUncheckedImage = nil}, ${13:element hoveringUncheckedImage = nil}, ${14:element clickedUnCheckedImage = nil}, ${15:int normalUnCheckedColor = 0xFFFFFFFF}, ${16:int hoveringUnCheckedColor = 0xFFFFFFFF}, ${17:int clickedUnCheckedColor = 0xFFB4B4B4}, ${18:element normalCheckedImage = nil}, ${19:element  hoveringCheckedImage = nil}, ${20:element clickedCheckedImage = nil}, ${21:int normalCheckedColor = 0xFFFFFFFF}, ${22:int hoveringCheckedColor = 0xFFFFFFFF}, ${23:int clickedCheckedColor = 0xFFB4B4B4}, ${24:element normalIndeterminateImage = nil}, ${25:element  hoveringIndeterminateImage = nil}, ${26:element clickedIndeterminateImage = nil}, ${27:int normalIndeterminateColor = 0xFFFFFFFF}, ${28:int hoveringIndeterminateColor = 0xFFFFFFFF}, ${29:int clickedIndeterminateColor = 0xFFB4B4B4 ]})"
	},
	"dgsCheckBoxGetSelected": {
		"scope": "lua",
		"prefix": "dgsCheckBoxGetSelected",
		"description": "This function gets a checkbox's selection state. | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxGetSelected",
		"body": "dgsCheckBoxGetSelected(${1:element theCheckbox})"
	},
	"dgsCheckBoxSetSelected": {
		"scope": "lua",
		"prefix": "dgsCheckBoxSetSelected",
		"description": "This function selects (ticks) or unselects a checkbox. | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxSetSelected",
		"body": "dgsCheckBoxSetSelected(${1:element theCheckbox}, ${2:bool state})"
	},
	"dgsCheckBoxSetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsCheckBoxSetHorizontalAlign",
		"description": "This function sets the horizontal alignment of the text of a dgs check box. | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxSetHorizontalAlign",
		"body": "dgsCheckBoxSetHorizontalAlign(${1:element checkBox}, ${2:string align})"
	},
	"dgsCheckBoxGetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsCheckBoxGetHorizontalAlign",
		"description": "This function gets the horizontal alignment of a dgs check box.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxGetHorizontalAlign",
		"body": "dgsCheckBoxGetHorizontalAlign(${1:element checkBox})"
	},
	"dgsCheckBoxSetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsCheckBoxSetVerticalAlign",
		"description": "This function sets the vertical alignment of the text of a dgs check box. | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxSetVerticalAlign",
		"body": "dgsCheckBoxSetVerticalAlign(${1:element checkBox}, ${2:string align})"
	},
	"dgsCheckBoxGetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsCheckBoxGetVerticalAlign",
		"description": "This function gets the vertical alignment of a dgs check box.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxGetVerticalAlign",
		"body": "dgsCheckBoxGetVerticalAlign(${1:element checkBox})"
	},
	"dgsCheckBoxGetButtonSide": {
		"scope": "lua",
		"prefix": "dgsCheckBoxGetButtonSide",
		"description": "This function gets the side of the button of a dgs check box. | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxGetButtonSide",
		"body": "dgsCheckBoxGetButtonSide(${1:dgsCheckBox [}, ${2:string side = \"left\" ]})"
	},
	"dgsCheckBoxSetButtonSide": {
		"scope": "lua",
		"prefix": "dgsCheckBoxSetButtonSide",
		"description": "This function sets the side of the button of a dgs check box. | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxSetButtonSide",
		"body": "dgsCheckBoxSetButtonSide(${1:dgsCheckBox [}, ${2:string side = \"left\" ]})"
	},
	"dgsCheckBoxGetButtonAlign": {
		"scope": "lua",
		"prefix": "dgsCheckBoxGetButtonAlign",
		"description": "This function gets the alignment of the button of a dgs check box. | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxGetButtonAlign",
		"body": "dgsCheckBoxGetButtonAlign(${1:dgsCheckBox})"
	},
	"dgsCheckBoxSetButtonAlign": {
		"scope": "lua",
		"prefix": "dgsCheckBoxSetButtonAlign",
		"description": "This function sets the alignment of the button of a dgs check box. | URL: https://wiki.multitheftauto.com/wiki/DgsCheckBoxSetButtonAlign",
		"body": "dgsCheckBoxSetButtonAlign(${1:dgsCheckBox [}, ${2:string alignment = \"left\" ]})"
	},
	"dgsCreateComboBox": {
		"scope": "lua",
		"prefix": "dgsCreateComboBox",
		"description": "This function allows creation of a DGS ComboBox . | URL: https://wiki.multitheftauto.com/wiki/DgsCreateComboBox",
		"body": "dgsCreateComboBox(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:string caption}, ${6:bool relative [}, ${7:element parent = nil}, ${8:element itemHeight = 20}, ${9:int textColor = 0xFF000000}, ${10:float scaleX = 1}, ${11:float scaleY = 1}, ${12:element normalImage = nil}, ${13:element hoveringImage = nil}, ${14:element clickedImage = nil}, ${15:int normalColor = 0x0078C8C8}, ${16:int hoveringColor = 0xC8005AFF}, ${17:int clickedColor = 0xC8325AFA]})"
	},
	"dgsComboBoxAddItem": {
		"scope": "lua",
		"prefix": "dgsComboBoxAddItem",
		"description": "Adds an item to a combobox. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxAddItem",
		"body": "dgsComboBoxAddItem(${1:element comboBox}, ${2:string value})"
	},
	"dgsComboBoxRemoveItem": {
		"scope": "lua",
		"prefix": "dgsComboBoxRemoveItem",
		"description": "This function removes an item from a dgs combobox. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxRemoveItem",
		"body": "dgsComboBoxRemoveItem(${1:element comboBox}, ${2:int itemId})"
	},
	"dgsComboBoxSetItemText": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetItemText",
		"description": "This function changes the text of a dgs combobox item. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetItemText",
		"body": "dgsComboBoxSetItemText(${1:element comboBox}, ${2:int itemId}, ${3:string/number text})"
	},
	"dgsComboBoxGetItemText": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetItemText",
		"description": "This function retrieves the text from a specific dgs combobox item. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetItemText",
		"body": "dgsComboBoxGetItemText(${1:element comboBox}, ${2:int itemId})"
	},
	"dgsComboBoxSetItemData": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetItemData",
		"description": "Returns true if set successfully, false if one of the arguments was invalid. This example displays a random item data from the combobox. Thi... | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetItemData",
		"body": "dgsComboBoxSetItemData(${1:element combobox}, ${2:int itemIndex}, ${3:mixed data})"
	},
	"dgsComboBoxSetItemData2": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetItemData2",
		"description": "Returns true if set successfully, false if one of the arguments was invalid. This example displays a random item data from the combobox. Thi... | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetItemData",
		"body": "dgsComboBoxSetItemData(${1:element combobox}, ${2:int itemIndex}, ${3:mixed key}, ${4:mixed data})"
	},
	"dgsComboBoxGetItemData": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetItemData",
		"description": "Returns the item data of the specified item, false otherwise. This example displays a random item data from the combobox. This function gets... | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetItemData",
		"body": "dgsComboBoxGetItemData(${1:element combobox}, ${2:int itemIndex})"
	},
	"dgsComboBoxGetItemData2": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetItemData2",
		"description": "Returns the item data of the specified item, false otherwise. This example displays a random item data from the combobox. This function gets... | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetItemData",
		"body": "dgsComboBoxGetItemData(${1:element combobox}, ${2:int itemIndex}, ${3:mixed key})"
	},
	"dgsComboBoxGetItemCount": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetItemCount",
		"description": "No info | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetItemCount",
		"body": "dgsComboBoxGetItemCount(${1:element comboBox})"
	},
	"dgsComboBoxClear": {
		"scope": "lua",
		"prefix": "dgsComboBoxClear",
		"description": "This function removes all the items from a dgs combobox. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxClear",
		"body": "dgsComboBoxClear(${1:element comboBox})"
	},
	"dgsComboBoxSetSelectedItem": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetSelectedItem",
		"description": "This function sets the selected item from a dgs combobox. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetSelectedItem",
		"body": "dgsComboBoxSetSelectedItem(${1:element comboBox}, ${2:int itemIndex})"
	},
	"dgsComboBoxGetSelectedItem": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetSelectedItem",
		"description": "This function returns the index of the selected dgs combobox item. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetSelectedItem",
		"body": "dgsComboBoxGetSelectedItem(${1:element comboBox})"
	},
	"dgsComboBoxSetItemColor": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetItemColor",
		"description": "This function changes the color of a comboBox item. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetItemColor",
		"body": "dgsComboBoxSetItemColor(${1:element comboBox}, ${2:int item}, ${3:int color})"
	},
	"dgsComboBoxGetItemColor": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetItemColor",
		"description": "This function get the color of a comboBox item. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetItemColor",
		"body": "dgsComboBoxGetItemColor(${1:element comboBox}, ${2:int item})"
	},
	"dgsComboBoxSetItemFont": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetItemFont",
		"description": "This function changes the font of a dgs combobox item. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetItemFont",
		"body": "dgsComboBoxSetItemFont(${1:element comboBox}, ${2:int itemId}, ${3:mixed font})"
	},
	"dgsComboBoxGetState": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetState",
		"description": "This function gets the state of combo box ( true:Drop Down; false:Take Back ). | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetState",
		"body": "dgsComboBoxGetState(${1:element comboBox})"
	},
	"dgsComboBoxSetState": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetState",
		"description": "This function sets the state of combo box (true:Drop Down; false:Take Back). | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetState",
		"body": "dgsComboBoxSetState(${1:element comboBox}, ${2:bool state})"
	},
	"dgsComboBoxGetBoxHeight": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetBoxHeight",
		"description": "This function gets the height of the drop-down box of combo box. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetBoxHeight",
		"body": "dgsComboBoxGetBoxHeight(${1:element comboBox}, ${2:bool relative})"
	},
	"dgsComboBoxSetBoxHeight": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetBoxHeight",
		"description": "This function sets the height of the drop-down box of combo box. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetBoxHeight",
		"body": "dgsComboBoxSetBoxHeight(${1:element comboBox}, ${2:float height}, ${3:bool relative})"
	},
	"dgsComboBoxSetViewCount": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetViewCount",
		"description": "This function sets how many items will be viewed on the drop-down box of combo box. Note: After using this function you won't be able to cha... | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetViewCount",
		"body": "dgsComboBoxSetViewCount(${1:element comboBox [}, ${2:int viewCount ]})"
	},
	"dgsComboBoxGetViewCount": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetViewCount",
		"description": "This function gets the viewed items count of the drop-down box of combo box. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetViewCount",
		"body": "dgsComboBoxGetViewCount(${1:element comboBox})"
	},
	"dgsComboBoxGetScrollBar": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetScrollBar",
		"description": "This function gets the scroll bar of dgs combo box. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetScrollBar",
		"body": "dgsComboBoxGetScrollBar(${1:element comboBox})"
	},
	"dgsComboBoxSetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetScrollPosition",
		"description": "This function set scroll position of dgs combo box. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetScrollPosition",
		"body": "dgsComboBoxSetScrollPosition(${1:element comboBox [}, ${2:float vertical = nil ]})"
	},
	"dgsComboBoxGetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetScrollPosition",
		"description": "This function get scroll position of dgs combo box. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetScrollPosition",
		"body": "dgsComboBoxGetScrollPosition(${1:element comboBox})"
	},
	"dgsComboBoxSetCaptionText": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetCaptionText",
		"description": "This function allows to change the caption of a DGS ComboBox. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetCaptionText",
		"body": "dgsComboBoxSetCaptionText(${1:element combobox}, ${2:string captain})"
	},
	"dgsComboBoxGetCaptionText": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetCaptionText",
		"description": "This function allows to get the caption of a DGS ComboBox. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetCaptionText",
		"body": "dgsComboBoxGetCaptionText(${1:element combobox})"
	},
	"dgsComboBoxSetEditEnabled": {
		"scope": "lua",
		"prefix": "dgsComboBoxSetEditEnabled",
		"description": "This function allows you to make combo box editable. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxSetEditEnabled",
		"body": "dgsComboBoxSetEditEnabled(${1:element comboBox}, ${2:bool enabled})"
	},
	"dgsComboBoxGetEditEnabled": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetEditEnabled",
		"description": "This function allows you to get whether combobox editable. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetEditEnabled",
		"body": "dgsComboBoxGetEditEnabled(${1:element comboBox})"
	},
	"dgsComboBoxGetText": {
		"scope": "lua",
		"prefix": "dgsComboBoxGetText",
		"description": "This function gets the text from combo box. | URL: https://wiki.multitheftauto.com/wiki/DgsComboBoxGetText",
		"body": "dgsComboBoxGetText(${1:element comboBox})"
	},
	"dgsCreateCustomRenderer": {
		"scope": "lua",
		"prefix": "dgsCreateCustomRenderer",
		"description": "This function creates a custom renderer that can be used in any texture required property of dgs elements, which is useful for creating cust... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateCustomRenderer",
		"body": "dgsCreateCustomRenderer(${1:[ string renderFunction ]})"
	},
	"dgsCustomRendererSetFunction": {
		"scope": "lua",
		"prefix": "dgsCustomRendererSetFunction",
		"description": "This function sets the render function of a dgs custom renderer. | URL: https://wiki.multitheftauto.com/wiki/DgsCustomRendererSetFunction",
		"body": "dgsCustomRendererSetFunction(${1:element customRenderer}, ${2:string renderFunction})"
	},
	"dgsCreateEdit": {
		"scope": "lua",
		"prefix": "dgsCreateEdit",
		"description": "No info | URL: https://wiki.multitheftauto.com/wiki/DgsCreateEdit",
		"body": "dgsCreateEdit(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:string text}, ${6:bool relative [}, ${7:element parent = nil}, ${8:int textColor = FF000000}, ${9:float scaleX = 1}, ${10:float scaleY = 1}, ${11:element bgImage = nil}, ${12:int bgColor = 0xFFC8C8C8}, ${13:bool selectMode = false ]})"
	},
	"dgsEditMoveCaret": {
		"scope": "lua",
		"prefix": "dgsEditMoveCaret",
		"description": "This function sets the current position of the caret (the text cursor) within the edit box by offsets. | URL: https://wiki.multitheftauto.com/wiki/DgsEditMoveCaret",
		"body": "dgsEditMoveCaret(${1:element theElement}, ${2:int indexoffset [}, ${3:bool selectText = false ]})"
	},
	"dgsEditGetCaretPosition": {
		"scope": "lua",
		"prefix": "dgsEditGetCaretPosition",
		"description": "This function gets the current position of the caret (the text cursor) within the edit box. | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetCaretPosition",
		"body": "dgsEditGetCaretPosition(${1:element theElement})"
	},
	"dgsEditSetCaretPosition": {
		"scope": "lua",
		"prefix": "dgsEditSetCaretPosition",
		"description": "This function sets the current position of the caret (the text cursor) within the edit box. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetCaretPosition",
		"body": "dgsEditSetCaretPosition(${1:element theElement}, ${2:int index [}, ${3:bool selectText = false ]})"
	},
	"dgsEditSetCaretStyle": {
		"scope": "lua",
		"prefix": "dgsEditSetCaretStyle",
		"description": "This function is to set the caret style of dgs edit ( 0 is \"|\"; 1 is \"_\" ). Example(0): This is Text| Example(1): This is Text_ | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetCaretStyle",
		"body": "dgsEditSetCaretStyle(${1:element dgsElement}, ${2:int style})"
	},
	"dgsEditGetCaretStyle": {
		"scope": "lua",
		"prefix": "dgsEditGetCaretStyle",
		"description": "This function is to get the caret style of dgs edit ( 0 is \"|\"; 1 is \"_\" ). Example(0): This is Text| Example(1): This is Text_ | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetCaretStyle",
		"body": "dgsEditGetCaretStyle(${1:element dgsElement})"
	},
	"dgsEditSetTextFilter": {
		"scope": "lua",
		"prefix": "dgsEditSetTextFilter",
		"description": "This function sets the text filter of edit text. Text Filter in edit means every character of the text should meet the requirement of the fi... | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetTextFilter",
		"body": "dgsEditSetTextFilter(${1:element edit}, ${2:string filter})"
	},
	"dgsEditGetMaxLength": {
		"scope": "lua",
		"prefix": "dgsEditGetMaxLength",
		"description": "This function gets the maximum text length that can be typed into an edit box. | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetMaxLength",
		"body": "dgsEditGetMaxLength(${1:element theElement})"
	},
	"dgsEditSetMaxLength": {
		"scope": "lua",
		"prefix": "dgsEditSetMaxLength",
		"description": "This function sets the maximum text length that can be typed into an edit box. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetMaxLength",
		"body": "dgsEditSetMaxLength(${1:element theElement}, ${2:int length})"
	},
	"dgsEditSetReadOnly": {
		"scope": "lua",
		"prefix": "dgsEditSetReadOnly",
		"description": "This function allows you to set or remove read-only status for a dgs edit box. If read-only is set to true, the box is not editable. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetReadOnly",
		"body": "dgsEditSetReadOnly(${1:element edit}, ${2:bool status})"
	},
	"dgsEditGetReadOnly": {
		"scope": "lua",
		"prefix": "dgsEditGetReadOnly",
		"description": "This function allows you to get read-only status for a dgs edit box. | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetReadOnly",
		"body": "dgsEditGetReadOnly(${1:element edit})"
	},
	"dgsEditSetMasked": {
		"scope": "lua",
		"prefix": "dgsEditSetMasked",
		"description": "This function sets or removes masking (covering up the text being typed) for password text fields. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetMasked",
		"body": "dgsEditSetMasked(${1:element theElement}, ${2:bool status})"
	},
	"dgsEditGetMasked": {
		"scope": "lua",
		"prefix": "dgsEditGetMasked",
		"description": "This function get the state of edit box masking (covering up the text being typed). | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetMasked",
		"body": "dgsEditGetMasked(${1:element theElement})"
	},
	"dgsEditSetUnderlined": {
		"scope": "lua",
		"prefix": "dgsEditSetUnderlined",
		"description": "This function sets underline to edit text. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetUnderlined",
		"body": "dgsEditSetUnderlined(${1:element edit}, ${2:bool state})"
	},
	"dgsEditGetUnderlined": {
		"scope": "lua",
		"prefix": "dgsEditGetUnderlined",
		"description": "This function get whether the underline of edit is enabled or not. | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetUnderlined",
		"body": "dgsEditGetUnderlined(${1:element edit})"
	},
	"dgsEditSetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsEditSetHorizontalAlign",
		"description": "This function sets the horizontal alignment of a dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetHorizontalAlign",
		"body": "dgsEditSetHorizontalAlign(${1:element theEdit}, ${2:string align})"
	},
	"dgsEditSetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsEditSetVerticalAlign",
		"description": "This function sets the vertical alignment of a dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetVerticalAlign",
		"body": "dgsEditSetVerticalAlign(${1:element theEdit}, ${2:string align})"
	},
	"dgsEditGetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsEditGetHorizontalAlign",
		"description": "This function gets the horizontal alignment of a dgs edit.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetHorizontalAlign",
		"body": "dgsEditGetHorizontalAlign(${1:element theEdit})"
	},
	"dgsEditGetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsEditGetVerticalAlign",
		"description": "This function gets the vertical alignment of a dgs edit.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetVerticalAlign",
		"body": "dgsEditGetVerticalAlign(${1:element theEdit})"
	},
	"dgsEditSetAlignment": {
		"scope": "lua",
		"prefix": "dgsEditSetAlignment",
		"description": "This function sets both vertical and horizontal alignment of a dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetAlignment",
		"body": "dgsEditSetAlignment(${1:element theEdit [}, ${2:string horizontalAlignment}, ${3:string verticalAlignment ]})"
	},
	"dgsEditGetAlignment": {
		"scope": "lua",
		"prefix": "dgsEditGetAlignment",
		"description": "This function gets both vertical and horizontal alignment of a dgs edit. Horizontal Alignment: Vertical Alignment: | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetAlignment",
		"body": "dgsEditGetAlignment(${1:element theEdit})"
	},
	"dgsEditInsertText": {
		"scope": "lua",
		"prefix": "dgsEditInsertText",
		"description": "This function deletes a part of text from the edit by index. | URL: https://wiki.multitheftauto.com/wiki/DgsEditInsertText",
		"body": "dgsEditInsertText(${1:element theElement}, ${2:int index}, ${3:string text})"
	},
	"dgsEditDeleteText": {
		"scope": "lua",
		"prefix": "dgsEditDeleteText",
		"description": "This function deletes a part of text from the edit by index. | URL: https://wiki.multitheftauto.com/wiki/DgsEditDeleteText",
		"body": "dgsEditDeleteText(${1:element theElement}, ${2:int startIndex}, ${3:int endIndex [}, ${4:bool noAffectCaret = false ]})"
	},
	"dgsEditGetPartOfText": {
		"scope": "lua",
		"prefix": "dgsEditGetPartOfText",
		"description": "This function returns a part of text from the edit by index. | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetPartOfText",
		"body": "dgsEditGetPartOfText(${1:element theElement [}, ${2:int startIndex = 0}, ${3:int endIndex}, ${4:bool deleteText = false ]})"
	},
	"dgsEditClearText": {
		"scope": "lua",
		"prefix": "dgsEditClearText",
		"description": "This function clears the whole text of the edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditClearText",
		"body": "dgsEditClearText(${1:element theElement})"
	},
	"dgsEditReplaceText": {
		"scope": "lua",
		"prefix": "dgsEditReplaceText",
		"description": "This function replaces a part of text from the edit by index. | URL: https://wiki.multitheftauto.com/wiki/DgsEditReplaceText",
		"body": "dgsEditReplaceText(${1:element theElement}, ${2:int startIndex}, ${3:int endIndex}, ${4:string text [}, ${5:bool noAffectCaret = false ]})"
	},
	"dgsEditSetTypingSound": {
		"scope": "lua",
		"prefix": "dgsEditSetTypingSound",
		"description": "This function applies a typing sound to a dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetTypingSound",
		"body": "dgsEditSetTypingSound(${1:element dxEdit}, ${2:string soundPath})"
	},
	"dgsEditGetTypingSound": {
		"scope": "lua",
		"prefix": "dgsEditGetTypingSound",
		"description": "This function gets the typing sound that has already been applied. | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetTypingSound",
		"body": "dgsEditGetTypingSound(${1:element dxEdit})"
	},
	"dgsEditSetTypingSoundVolume": {
		"scope": "lua",
		"prefix": "dgsEditSetTypingSoundVolume",
		"description": "This function changes the volume of the typing sound to a dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetTypingSoundVolume",
		"body": "dgsEditSetTypingSoundVolume(${1:element edit}, ${2:float volume})"
	},
	"dgsEditGetTypingSoundVolume": {
		"scope": "lua",
		"prefix": "dgsEditGetTypingSoundVolume",
		"description": "This function gets the volume of the typing sound of a dgs edit | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetTypingSoundVolume",
		"body": "dgsEditGetTypingSoundVolume(${1:element edit})"
	},
	"dgsEditSetPlaceHolder": {
		"scope": "lua",
		"prefix": "dgsEditSetPlaceHolder",
		"description": "This function sets the place holder of a dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetPlaceHolder",
		"body": "dgsEditSetPlaceHolder(${1:element theEdit}, ${2:string placeHolder})"
	},
	"dgsEditGetPlaceHolder": {
		"scope": "lua",
		"prefix": "dgsEditGetPlaceHolder",
		"description": "This function gets the place holder of a dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetPlaceHolder",
		"body": "dgsEditGetPlaceHolder(${1:element theEdit})"
	},
	"dgsEditAddAutoComplete": {
		"scope": "lua",
		"prefix": "dgsEditAddAutoComplete",
		"description": "This function adds an auto complete string to edit box. | URL: https://wiki.multitheftauto.com/wiki/DgsEditAddAutoComplete",
		"body": "dgsEditAddAutoComplete(${1:bool editBox}, ${2:string str [}, ${3:bool isSensitive]})"
	},
	"dgsEditRemoveAutoComplete": {
		"scope": "lua",
		"prefix": "dgsEditRemoveAutoComplete",
		"description": "This function removes the specific auto complete string from the dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditRemoveAutoComplete",
		"body": "dgsEditRemoveAutoComplete(${1:element edit}, ${2:string autoCompleteText})"
	},
	"dgsEditSetAutoComplete": {
		"scope": "lua",
		"prefix": "dgsEditSetAutoComplete",
		"description": "This function sets auto complete table to the dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditSetAutoComplete",
		"body": "dgsEditSetAutoComplete(${1:element edit}, ${2:table autoCompleteTable})"
	},
	"dgsEditGetAutoComplete": {
		"scope": "lua",
		"prefix": "dgsEditGetAutoComplete",
		"description": "This function gets auto complete table from the dgs edit. | URL: https://wiki.multitheftauto.com/wiki/DgsEditGetAutoComplete",
		"body": "dgsEditGetAutoComplete(${1:element edit})"
	},
	"dgsCreateDetectArea": {
		"scope": "lua",
		"prefix": "dgsCreateDetectArea",
		"description": "This function creates a custom detect area for any kind of shapes. DGS Detect Area Tutorial: https://www.youtube.com/watch?v=9kxKI1epzWI | URL: https://wiki.multitheftauto.com/wiki/DgsCreateDetectArea",
		"body": "dgsCreateDetectArea(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:bool relative [}, ${6:element parent = nil ]})"
	},
	"dgsGetDetectArea": {
		"scope": "lua",
		"prefix": "dgsGetDetectArea",
		"description": "This function gets the detectarea from a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsGetDetectArea",
		"body": "dgsGetDetectArea(${1:element dgsElement})"
	},
	"dgsApplyDetectArea": {
		"scope": "lua",
		"prefix": "dgsApplyDetectArea",
		"description": "This function applies the detectarea to a dgs element as collider. | URL: https://wiki.multitheftauto.com/wiki/DgsApplyDetectArea",
		"body": "dgsApplyDetectArea(${1:element dgsElement}, ${2:element detectArea})"
	},
	"dgsRemoveDetectArea": {
		"scope": "lua",
		"prefix": "dgsRemoveDetectArea",
		"description": "This function removes the detectarea from a dgs element. | URL: https://wiki.multitheftauto.com/wiki/DgsRemoveDetectArea",
		"body": "dgsRemoveDetectArea(${1:element dgsElement})"
	},
	"dgsDetectAreaSetFunction": {
		"scope": "lua",
		"prefix": "dgsDetectAreaSetFunction",
		"description": "This function set the detecting function of the detect area. For texture detecting function: | URL: https://wiki.multitheftauto.com/wiki/DgsDetectAreaSetFunction",
		"body": "dgsDetectAreaSetFunction(${1:element da}, ${2:string/texture detectingFnc})"
	},
	"dgsDetectAreaSetDebugModeEnabled": {
		"scope": "lua",
		"prefix": "dgsDetectAreaSetDebugModeEnabled",
		"description": "This function set the debug mode of the detect area. For using non-texture based detecting function, it will generate the debug view itself. | URL: https://wiki.multitheftauto.com/wiki/DgsDetectAreaSetDebugModeEnabled",
		"body": "dgsDetectAreaSetDebugModeEnabled(${1:element da}, ${2:bool state})"
	},
	"dgsDetectAreaGetDebugModeEnabled": {
		"scope": "lua",
		"prefix": "dgsDetectAreaGetDebugModeEnabled",
		"description": "This function get the debug mode of the detect area. | URL: https://wiki.multitheftauto.com/wiki/DgsDetectAreaGetDebugModeEnabled",
		"body": "dgsDetectAreaGetDebugModeEnabled(${1:element da})"
	},
	"dgsSendDragNDropData": {
		"scope": "lua",
		"prefix": "dgsSendDragNDropData",
		"description": "This function makes the possibility of transfering dynamic data between dgs elements by Drag&Drop, which is useful for inventory system. | URL: https://wiki.multitheftauto.com/wiki/DgsSendDragNDropData",
		"body": "dgsSendDragNDropData(${1:mixed dragData [}, ${2:material preview = nil}, ${3:int previewColor = tocolor(255}, ${4:255}, ${5:255}, ${6:255})"
	},
	"dgsRetrieveDragNDropData": {
		"scope": "lua",
		"prefix": "dgsRetrieveDragNDropData",
		"description": "This function retrieves the Drag&Drop data that is holding on cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsRetrieveDragNDropData",
		"body": "dgsRetrieveDragNDropData(${1:[ bool retainData = false ]})"
	},
	"dgsIsDragNDropData": {
		"scope": "lua",
		"prefix": "dgsIsDragNDropData",
		"description": "This function checks whether there is some data holding on cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsIsDragNDropData",
		"body": "dgsIsDragNDropData(${1:})"
	},
	"dgsCreateGridList": {
		"scope": "lua",
		"prefix": "dgsCreateGridList",
		"description": "This function creates a grid list DGS element. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateGridList",
		"body": "dgsCreateGridList(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:bool relative [}, ${6:element parent = nil}, ${7:float columnHeight = 20}, ${8:int bgColor = 0xFFD2D2D2}, ${9:int columnTextColor = 0xFF000000}, ${10:int columnColor = 0xFFDCDCDC}, ${11:int normalRowColor = 0xFFC8C8C8}, ${12:int hoveringRowColor = 0xFF969696}, ${13:int selectedRowColor = 0xFF00ACF2}, ${14:element bgImage = nil}, ${15:element columnImage = nil}, ${16:element normalRowImage = nil}, ${17:element hoveringRowImage = nil}, ${18:element selectedRowImage = nil]})"
	},
	"dgsGridListClear": {
		"scope": "lua",
		"prefix": "dgsGridListClear",
		"description": "This function clears all the data from a dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListClear",
		"body": "dgsGridListClear(${1:element gridList [}, ${2:bool clearRow = true}, ${3:bool clearColumn = false ]})"
	},
	"dgsGridListGetScrollBar": {
		"scope": "lua",
		"prefix": "dgsGridListGetScrollBar",
		"description": "This function gets two scroll bars of dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetScrollBar",
		"body": "dgsGridListGetScrollBar(${1:element gridList})"
	},
	"dgsGridListSetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsGridListSetScrollPosition",
		"description": "This function set scroll position of dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetScrollPosition",
		"body": "dgsGridListSetScrollPosition(${1:element gridList[}, ${2:float vertical = nil}, ${3:float horizontal = nil ]})"
	},
	"dgsGridListGetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsGridListGetScrollPosition",
		"description": "This function get scroll position of dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetScrollPosition",
		"body": "dgsGridListGetScrollPosition(${1:element gridList})"
	},
	"dgsGridListScrollTo": {
		"scope": "lua",
		"prefix": "dgsGridListScrollTo",
		"description": "This function scrolls the grid list to the specific item. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListScrollTo",
		"body": "dgsGridListScrollTo(${1:element gridList}, ${2:int row}, ${3:int column})"
	},
	"dgsGridListSetHorizontalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsGridListSetHorizontalScrollPosition",
		"description": "This function is used to set the horizontal scroll position from a grid list | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetHorizontalScrollPosition",
		"body": "dgsGridListSetHorizontalScrollPosition(${1:element dgsGridList}, ${2:float position})"
	},
	"dgsGridListGetHorizontalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsGridListGetHorizontalScrollPosition",
		"description": "This function is used to get the horizontal scroll position from a grid list | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetHorizontalScrollPosition",
		"body": "dgsGridListGetHorizontalScrollPosition(${1:element dgsGridList})"
	},
	"dgsGridListSetVerticalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsGridListSetVerticalScrollPosition",
		"description": "This function is used to set the vertical scroll position from a grid list | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetVerticalScrollPosition",
		"body": "dgsGridListSetVerticalScrollPosition(${1:element dgsGridList}, ${2:float position})"
	},
	"dgsGridListGetVerticalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsGridListGetVerticalScrollPosition",
		"description": "This function is used to get the vertical scroll position from a grid list | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetVerticalScrollPosition",
		"body": "dgsGridListGetVerticalScrollPosition(${1:element dgsGridList})"
	},
	"dgsGridListResetScrollBarPosition": {
		"scope": "lua",
		"prefix": "dgsGridListResetScrollBarPosition",
		"description": "This function reset the position of vertical and horizontal scroll bars. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListResetScrollBarPosition",
		"body": "dgsGridListResetScrollBarPosition(${1:element gridList [}, ${2:bool remainVertical = false}, ${3:bool remainHorizontal = false ]})"
	},
	"dgsGridListSetColumnRelative": {
		"scope": "lua",
		"prefix": "dgsGridListSetColumnRelative",
		"description": "This function set whether the columns' length are relative . | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetColumnRelative",
		"body": "dgsGridListSetColumnRelative(${1:element gridList [}, ${2:bool relative = false}, ${3:bool transformColumn = true ]})"
	},
	"dgsGridListGetColumnRelative": {
		"scope": "lua",
		"prefix": "dgsGridListGetColumnRelative",
		"description": "This function get whether the columns' length are relative . | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetColumnRelative",
		"body": "dgsGridListGetColumnRelative(${1:element gridList})"
	},
	"dgsGridListAddColumn": {
		"scope": "lua",
		"prefix": "dgsGridListAddColumn",
		"description": "This function is used to create columns in grid lists. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListAddColumn",
		"body": "dgsGridListAddColumn(${1:element gridList}, ${2:string title}, ${3:float width [}, ${4:int insertPosition = nil}, ${5:string horizontalAlign = \"left\" ]})"
	},
	"dgsGridListRemoveColumn": {
		"scope": "lua",
		"prefix": "dgsGridListRemoveColumn",
		"description": "This allows you to delete columns that exist in grid lists. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListRemoveColumn",
		"body": "dgsGridListRemoveColumn(${1:element gridList}, ${2:int columnIndex})"
	},
	"dgsGridListClearColumn": {
		"scope": "lua",
		"prefix": "dgsGridListClearColumn",
		"description": "This function clears all the column data from a dgs grid list and doesn't remove row. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListClearColumn",
		"body": "dgsGridListClearColumn(${1:element gridList}, ${2:bool notResetSelectedItem}, ${3:bool notResetScrollBar})"
	},
	"dgsGridListGetColumnCount": {
		"scope": "lua",
		"prefix": "dgsGridListGetColumnCount",
		"description": "This function returns the number of columns in a dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetColumnCount",
		"body": "dgsGridListGetColumnCount(${1:element gridList})"
	},
	"dgsGridListGetColumnAllWidth": {
		"scope": "lua",
		"prefix": "dgsGridListGetColumnAllWidth",
		"description": "This function is used to get the total width from 1 to specific column index of dgs gridlist. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetColumnAllWidth",
		"body": "dgsGridListGetColumnAllWidth(${1:element dgsGridlist}, ${2:int columnIndex [}, ${3:bool relative = false}, ${4:bool fastFind = false ]})"
	},
	"dgsGridListGetColumnHeight": {
		"scope": "lua",
		"prefix": "dgsGridListGetColumnHeight",
		"description": "This function is used to get the height of a dgs gridlist column. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetColumnHeight",
		"body": "dgsGridListGetColumnHeight(${1:element dgsGridlist})"
	},
	"dgsGridListSetColumnHeight": {
		"scope": "lua",
		"prefix": "dgsGridListSetColumnHeight",
		"description": "This function is used to set the height of a dgs gridlist column. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetColumnHeight",
		"body": "dgsGridListSetColumnHeight(${1:element dgsGridlist}, ${2:int height})"
	},
	"dgsGridListGetColumnWidth": {
		"scope": "lua",
		"prefix": "dgsGridListGetColumnWidth",
		"description": "This function is used to get the width of a dgs gridlist column. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetColumnWidth",
		"body": "dgsGridListGetColumnWidth(${1:element dgsGridlist}, ${2:int columnIndex [}, ${3:bool relative = false ]})"
	},
	"dgsGridListSetColumnWidth": {
		"scope": "lua",
		"prefix": "dgsGridListSetColumnWidth",
		"description": "This function is used to set the width of a dgs gridlist column. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetColumnWidth",
		"body": "dgsGridListSetColumnWidth(${1:element dgsGridlist}, ${2:int columnIndex}, ${3:float/int width [}, ${4:bool relative = false ]})"
	},
	"dgsGridListAutoSizeColumn": {
		"scope": "lua",
		"prefix": "dgsGridListAutoSizeColumn",
		"description": "This allows you to automatically size a column to display everything in it correctly, with the most minimal width. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListAutoSizeColumn",
		"body": "dgsGridListAutoSizeColumn(${1:element gridList}, ${2:int columnIndex [}, ${3:float additionalLength}, ${4:bool relative}, ${5:bool isByItem ]})"
	},
	"dgsGridListGetColumnTitle": {
		"scope": "lua",
		"prefix": "dgsGridListGetColumnTitle",
		"description": "This function is used to get the column title of a dgs gridlist column. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetColumnTitle",
		"body": "dgsGridListGetColumnTitle(${1:element dgsGridlist}, ${2:int columnIndex})"
	},
	"dgsGridListSetColumnTitle": {
		"scope": "lua",
		"prefix": "dgsGridListSetColumnTitle",
		"description": "This function is used to change the column title of a dgs gridlist column. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetColumnTitle",
		"body": "dgsGridListSetColumnTitle(${1:element dgsGridlist}, ${2:int columnIndex}, ${3:string title})"
	},
	"dgsGridListGetColumnFont": {
		"scope": "lua",
		"prefix": "dgsGridListGetColumnFont",
		"description": "This function is used to get the font of a dgs gridlist column. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetColumnFont",
		"body": "dgsGridListGetColumnFont(${1:element dgsGridlist}, ${2:int columnIndex})"
	},
	"dgsGridListSetColumnFont": {
		"scope": "lua",
		"prefix": "dgsGridListSetColumnFont",
		"description": "This function is used to set the font of a dgs gridlist column. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetColumnFont",
		"body": "dgsGridListSetColumnFont(${1:element dgsGridlist}, ${2:int columnIndex}, ${3:dx-font/string font [}, ${4:affectRow = false ]})"
	},
	"dgsGridListSetColumnTextColor": {
		"scope": "lua",
		"prefix": "dgsGridListSetColumnTextColor",
		"description": "This function changes the color of a gridlist column title. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetColumnTextColor",
		"body": "dgsGridListSetColumnTextColor(${1:element gridList}, ${2:int columnIndex}, ${3:int color})"
	},
	"dgsGridListSetColumnTextColor2": {
		"scope": "lua",
		"prefix": "dgsGridListSetColumnTextColor2",
		"description": "This function changes the color of a gridlist column title. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetColumnTextColor",
		"body": "dgsGridListSetColumnTextColor(${1:element gridList}, ${2:int columnIndex}, ${3:int r}, ${4:int g}, ${5:int b [}, ${6:int a = 255 ]})"
	},
	"dgsGridListSetSortColumn": {
		"scope": "lua",
		"prefix": "dgsGridListSetSortColumn",
		"description": "This function chooses which column to be sorted by ( Must works with dgsGridListSetSortFunction ). | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetSortColumn",
		"body": "dgsGridListSetSortColumn(${1:element gridlist}, ${2:int sortedColumn})"
	},
	"dgsGridListGetSortColumn": {
		"scope": "lua",
		"prefix": "dgsGridListGetSortColumn",
		"description": "This function gets the column to be sorted by. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetSortColumn",
		"body": "dgsGridListGetSortColumn(${1:element gridlist})"
	},
	"dgsGridListGetEnterColumn": {
		"scope": "lua",
		"prefix": "dgsGridListGetEnterColumn",
		"description": "This function gets the column that the mouse hits from the specific grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetEnterColumn",
		"body": "dgsGridListGetEnterColumn(${1:element gridList})"
	},
	"dgsGridListAddRow": {
		"scope": "lua",
		"prefix": "dgsGridListAddRow",
		"description": "Adds a row to a grid list, and optionally add simple text items with your rows.  Use dgsGridListSetItemText to add row headers. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListAddRow",
		"body": "dgsGridListAddRow(${1:element gridList [}, ${2:int pos}, ${3:int/string itemText1}, ${4:int/string itemText2}, ${5:...]})"
	},
	"dgsGridListRemoveRow": {
		"scope": "lua",
		"prefix": "dgsGridListRemoveRow",
		"description": "This allows you to delete rows that exist in grid lists. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListRemoveRow",
		"body": "dgsGridListRemoveRow(${1:element gridList}, ${2:int rowIndex})"
	},
	"dgsGridListClearRow": {
		"scope": "lua",
		"prefix": "dgsGridListClearRow",
		"description": "This function clears all the row data from a dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListClearRow",
		"body": "dgsGridListClearRow(${1:element gridList}, ${2:bool notResetSelectedItem}, ${3:bool notResetScrollBar})"
	},
	"dgsGridListGetRowCount": {
		"scope": "lua",
		"prefix": "dgsGridListGetRowCount",
		"description": "This function returns the number of rows in a dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetRowCount",
		"body": "dgsGridListGetRowCount(${1:element gridList})"
	},
	"dgsGridListGetRowBackGroundImage": {
		"scope": "lua",
		"prefix": "dgsGridListGetRowBackGroundImage",
		"description": "This function gets the row background image from the grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetRowBackGroundImage",
		"body": "dgsGridListGetRowBackGroundImage(${1:element gridList}, ${2:int rowIndex})"
	},
	"dgsGridListSetRowBackGroundImage": {
		"scope": "lua",
		"prefix": "dgsGridListSetRowBackGroundImage",
		"description": "This function sets the row background texture of the grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetRowBackGroundImage",
		"body": "dgsGridListSetRowBackGroundImage(${1:element gridList}, ${2:int rowIndex}, ${3:texture imageDefault}, ${4:texture imageHoving}, ${5:texture imageSelected})"
	},
	"dgsGridListSetRowBackGroundColor": {
		"scope": "lua",
		"prefix": "dgsGridListSetRowBackGroundColor",
		"description": "This function sets the row background color of the grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetRowBackGroundColor",
		"body": "dgsGridListSetRowBackGroundColor(${1:element gridList}, ${2:int rowIndex}, ${3:int colorDefault}, ${4:int colorHoving}, ${5:int colorSelected})"
	},
	"dgsGridListGetRowBackGroundColor": {
		"scope": "lua",
		"prefix": "dgsGridListGetRowBackGroundColor",
		"description": "This function gets the row background color from the grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetRowBackGroundColor",
		"body": "dgsGridListGetRowBackGroundColor(${1:element gridList}, ${2:int rowIndex})"
	},
	"dgsGridListSetRowAsSection": {
		"scope": "lua",
		"prefix": "dgsGridListSetRowAsSection",
		"description": "This function sets whether the row is section. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetRowAsSection",
		"body": "dgsGridListSetRowAsSection(${1:element gridlist}, ${2:int row [}, ${3:bool enable = false}, ${4:bool enableClickAndSelect = false ]})"
	},
	"dgsGridListGetRowSelectable": {
		"scope": "lua",
		"prefix": "dgsGridListGetRowSelectable",
		"description": "This function gets whether the row is selectable. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetRowSelectable",
		"body": "dgsGridListGetRowSelectable(${1:element gridlist}, ${2:int row})"
	},
	"dgsGridListSetRowSelectable": {
		"scope": "lua",
		"prefix": "dgsGridListSetRowSelectable",
		"description": "This function sets whether the row is selectable, which has higer priority than dgsGridListSetItemSelectable. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetRowSelectable",
		"body": "dgsGridListSetRowSelectable(${1:element gridlist}, ${2:int row}, ${3:boolean state})"
	},
	"dgsGridListGetRowHoverable": {
		"scope": "lua",
		"prefix": "dgsGridListGetRowHoverable",
		"description": "This function returns whether the row is hoverable. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetRowHoverable",
		"body": "dgsGridListGetRowHoverable(${1:element gridlist}, ${2:int row})"
	},
	"dgsGridListSetRowHoverable": {
		"scope": "lua",
		"prefix": "dgsGridListSetRowHoverable",
		"description": "This function sets whether the row is hoverable, which has higer priority than dgsGridListSetItemHoverable. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetRowHoverable",
		"body": "dgsGridListSetRowHoverable(${1:element gridlist}, ${2:int row}, ${3:boolean state})"
	},
	"dgsGridListSetItemColor": {
		"scope": "lua",
		"prefix": "dgsGridListSetItemColor",
		"description": "This function changes the color of a gridlist item. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetItemColor",
		"body": "dgsGridListSetItemColor(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex}, ${4:int/table color})"
	},
	"dgsGridListSetItemColor2": {
		"scope": "lua",
		"prefix": "dgsGridListSetItemColor2",
		"description": "This function changes the color of a gridlist item. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetItemColor",
		"body": "dgsGridListSetItemColor(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex}, ${4:int r}, ${5:int g}, ${6:int b [}, ${7:int a = 255 ]})"
	},
	"dgsGridListGetItemColor": {
		"scope": "lua",
		"prefix": "dgsGridListGetItemColor",
		"description": "This function get the color of a gridlist item. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetItemColor",
		"body": "dgsGridListGetItemColor(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex [}, ${4:bool notSplitColor = false ]})"
	},
	"dgsGridListSetItemText": {
		"scope": "lua",
		"prefix": "dgsGridListSetItemText",
		"description": "This function changes the text of a gridlist item. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetItemText",
		"body": "dgsGridListSetItemText(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex}, ${4:string text [}, ${5:bool isSection ]})"
	},
	"dgsGridListGetItemText": {
		"scope": "lua",
		"prefix": "dgsGridListGetItemText",
		"description": "This function retrieves the text from a specific grid list item. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetItemText",
		"body": "dgsGridListGetItemText(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex})"
	},
	"dgsGridListSetItemFont": {
		"scope": "lua",
		"prefix": "dgsGridListSetItemFont",
		"description": "This function changes the font of an item of a dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetItemFont",
		"body": "dgsGridListSetItemFont(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex}, ${4:string/dx-font font})"
	},
	"dgsGridListSetItemData": {
		"scope": "lua",
		"prefix": "dgsGridListSetItemData",
		"description": "Returns true if set successfully, false if one of the arguments was invalid. This example displays a random item data from the gridlist. Thi... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetItemData",
		"body": "dgsGridListSetItemData(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex}, ${4:var data})"
	},
	"dgsGridListSetItemData2": {
		"scope": "lua",
		"prefix": "dgsGridListSetItemData2",
		"description": "Returns true if set successfully, false if one of the arguments was invalid. This example displays a random item data from the gridlist. Thi... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetItemData",
		"body": "dgsGridListSetItemData(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex}, ${4:mixed key}, ${5:mixed data})"
	},
	"dgsGridListGetItemData": {
		"scope": "lua",
		"prefix": "dgsGridListGetItemData",
		"description": "Returns the item data of the specified item if successful, false if one of the arguments was invalid. This example displays a random item da... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetItemData",
		"body": "dgsGridListGetItemData(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex})"
	},
	"dgsGridListGetItemData2": {
		"scope": "lua",
		"prefix": "dgsGridListGetItemData2",
		"description": "Returns the item data of the specified item if successful, false if one of the arguments was invalid. This example displays a random item da... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetItemData",
		"body": "dgsGridListGetItemData(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex}, ${4:mixed key})"
	},
	"dgsGridListSetItemImage": {
		"scope": "lua",
		"prefix": "dgsGridListSetItemImage",
		"description": "This function sets the image on a grid list item. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetItemImage",
		"body": "dgsGridListSetItemImage(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex}, ${4:element texture [}, ${5:int color = 0xFFFFFFFF}, ${6:float offsetX = 0}, ${7:float offsetY = 0}, ${8:float width}, ${9:float height}, ${10:bool relative ]})"
	},
	"dgsGridListGetItemImage": {
		"scope": "lua",
		"prefix": "dgsGridListGetItemImage",
		"description": "This function gets the image from a grid list item. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetItemImage",
		"body": "dgsGridListGetItemImage(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex})"
	},
	"dgsGridListRemoveItemImage": {
		"scope": "lua",
		"prefix": "dgsGridListRemoveItemImage",
		"description": "This function remove the image from the grid list item. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListRemoveItemImage",
		"body": "dgsGridListRemoveItemImage(${1:element gridList}, ${2:int rowIndex}, ${3:int columnIndex})"
	},
	"dgsGridListSelectItem": {
		"scope": "lua",
		"prefix": "dgsGridListSelectItem",
		"description": "This function is used to select single item by state. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSelectItem",
		"body": "dgsGridListSelectItem(${1:element gridList}, ${2:int row}, ${3:int column}, ${4:bool state})"
	},
	"dgsGridListItemIsSelected": {
		"scope": "lua",
		"prefix": "dgsGridListItemIsSelected",
		"description": "This function returns a bool value indicates whether the item is selected.(Different from dgsGridListGetSelectedItem, this function is alway... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListItemIsSelected",
		"body": "dgsGridListItemIsSelected(${1:element gridList}, ${2:int row}, ${3:int column})"
	},
	"dgsGridListGetSelectedCount": {
		"scope": "lua",
		"prefix": "dgsGridListGetSelectedCount",
		"description": "This function returns the amount of options selected in the specified dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetSelectedCount",
		"body": "dgsGridListGetSelectedCount(${1:element gridList [}, ${2:int inRow = -1}, ${3:int inColumn = -1 ]})"
	},
	"dgsGridListGetPreselectedItem": {
		"scope": "lua",
		"prefix": "dgsGridListGetPreselectedItem",
		"description": "This function returns the row and colum indexes of the hovering item in a grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetPreselectedItem",
		"body": "dgsGridListGetPreselectedItem(${1:element gridList})"
	},
	"dgsGridListGetSelectedItem": {
		"scope": "lua",
		"prefix": "dgsGridListGetSelectedItem",
		"description": "This function returns the row and colum indexes of the selected item in a grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetSelectedItem",
		"body": "dgsGridListGetSelectedItem(${1:element gridList})"
	},
	"dgsGridListSetSelectedItem": {
		"scope": "lua",
		"prefix": "dgsGridListSetSelectedItem",
		"description": "This function selects an item from a grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetSelectedItem",
		"body": "dgsGridListSetSelectedItem(${1:element gridList}, ${2:int rowID})"
	},
	"dgsGridListGetSelectedItems": {
		"scope": "lua",
		"prefix": "dgsGridListGetSelectedItems",
		"description": "This function returns the items selected in the specified dgs grid list. Note that the index of row and column start from 1, which is differ... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetSelectedItems",
		"body": "dgsGridListGetSelectedItems(${1:element gridList})"
	},
	"dgsGridListSetSelectedItems": {
		"scope": "lua",
		"prefix": "dgsGridListSetSelectedItems",
		"description": "This function selects multipile items in the specific dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetSelectedItems",
		"body": "dgsGridListSetSelectedItems(${1:element gridList}, ${2:table items})"
	},
	"dgsGridListGetItemSelectable": {
		"scope": "lua",
		"prefix": "dgsGridListGetItemSelectable",
		"description": "This function gets whether the item is selectable. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetItemSelectable",
		"body": "dgsGridListGetItemSelectable(${1:element gridlist}, ${2:int row}, ${3:int column})"
	},
	"dgsGridListSetItemSelectable": {
		"scope": "lua",
		"prefix": "dgsGridListSetItemSelectable",
		"description": "This function sets whether the item is selectable, which has a lower priority than dgsGridListSetRowSelectable. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetItemSelectable",
		"body": "dgsGridListSetItemSelectable(${1:element gridlist}, ${2:int row}, ${3:int column}, ${4:boolean state})"
	},
	"dgsGridListGetItemHoverable": {
		"scope": "lua",
		"prefix": "dgsGridListGetItemHoverable",
		"description": "This function returns whether the item is hoverable. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetItemHoverable",
		"body": "dgsGridListGetItemHoverable(${1:element gridlist}, ${2:int row}, ${3:int column})"
	},
	"dgsGridListSetItemHoverable": {
		"scope": "lua",
		"prefix": "dgsGridListSetItemHoverable",
		"description": "This function sets whether the item is hoverable, which has a lower priority than dgsGridListSetRowHoverable. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetItemHoverable",
		"body": "dgsGridListSetItemHoverable(${1:element gridlist}, ${2:int row}, ${3:int column}, ${4:boolean state})"
	},
	"dgsGridListSetSelectionMode": {
		"scope": "lua",
		"prefix": "dgsGridListSetSelectionMode",
		"description": "This function sets the selection mode of a dgs gridlist.  For example, the MTA server browser selects a whole row, while the Controls dialog... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetSelectionMode",
		"body": "dgsGridListSetSelectionMode(${1:element gridlist}, ${2:int mode})"
	},
	"dgsGridListGetSelectionMode": {
		"scope": "lua",
		"prefix": "dgsGridListGetSelectionMode",
		"description": "This function gets the selection mode of a dgs gridlist.  For example, the MTA server browser selects a whole row, while the Controls dialog... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetSelectionMode",
		"body": "dgsGridListGetSelectionMode(${1:element gridlist})"
	},
	"dgsGridListSetNavigationEnabled": {
		"scope": "lua",
		"prefix": "dgsGridListSetNavigationEnabled",
		"description": "This function set the state of navigation of dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetNavigationEnabled",
		"body": "dgsGridListSetNavigationEnabled(${1:element gridList}, ${2:bool state})"
	},
	"dgsGridListGetNavigationEnabled": {
		"scope": "lua",
		"prefix": "dgsGridListGetNavigationEnabled",
		"description": "This function get the state of navigation of dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetNavigationEnabled",
		"body": "dgsGridListGetNavigationEnabled(${1:element gridList})"
	},
	"dgsGridListSetMultiSelectionEnabled": {
		"scope": "lua",
		"prefix": "dgsGridListSetMultiSelectionEnabled",
		"description": "This function changes the multi-selecting mode of the dgs grid list. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetMultiSelectionEnabled",
		"body": "dgsGridListSetMultiSelectionEnabled(${1:element gridlist}, ${2:bool state})"
	},
	"dgsGridListGetMultiSelectionEnabled": {
		"scope": "lua",
		"prefix": "dgsGridListGetMultiSelectionEnabled",
		"description": "This function checks whether the multi-selecting mode is enabled. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetMultiSelectionEnabled",
		"body": "dgsGridListGetMultiSelectionEnabled(${1:element gridlist})"
	},
	"dgsGridListSetAutoSortEnabled": {
		"scope": "lua",
		"prefix": "dgsGridListSetAutoSortEnabled",
		"description": "This function sets whether the auto sorting of grid list enabled. Auto Sorting means when the grid list have target sorting column and sorti... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetAutoSortEnabled",
		"body": "dgsGridListSetAutoSortEnabled(${1:element gridlist}, ${2:bool state})"
	},
	"dgsGridListGetAutoSortEnabled": {
		"scope": "lua",
		"prefix": "dgsGridListGetAutoSortEnabled",
		"description": "This function gets whether the auto sorting of grid list enabled. Auto Sorting means when the grid list have target sorting column and sorti... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetAutoSortEnabled",
		"body": "dgsGridListGetAutoSortEnabled(${1:element gridlist})"
	},
	"dgsGridListSetSortFunction": {
		"scope": "lua",
		"prefix": "dgsGridListSetSortFunction",
		"description": "This function sets and loads the specific and custom sorting function ( Must works with dgsGridListSetSortColumn ). | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetSortFunction",
		"body": "dgsGridListSetSortFunction(${1:dgsElement gridlist}, ${2:string func})"
	},
	"dgsGridListSetSortEnabled": {
		"scope": "lua",
		"prefix": "dgsGridListSetSortEnabled",
		"description": "This function sets whether the sort which activated by clicking the column of grid list enabled. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSetSortEnabled",
		"body": "dgsGridListSetSortEnabled(${1:element gridlist}, ${2:bool state})"
	},
	"dgsGridListGetSortEnabled": {
		"scope": "lua",
		"prefix": "dgsGridListGetSortEnabled",
		"description": "This function gets whether the sort which activated by clicking the column of grid list enabled. | URL: https://wiki.multitheftauto.com/wiki/DgsGridListGetSortEnabled",
		"body": "dgsGridListGetSortEnabled(${1:element gridlist})"
	},
	"dgsGridListSort": {
		"scope": "lua",
		"prefix": "dgsGridListSort",
		"description": "This function forces the dgs gridlist to carry out sorting once ( Sorting function and sorted column must exist, or it will do nothing and r... | URL: https://wiki.multitheftauto.com/wiki/DgsGridListSort",
		"body": "dgsGridListSort(${1:delement gridlist})"
	},
	"dgsAttachToGridList": {
		"scope": "lua",
		"prefix": "dgsAttachToGridList",
		"description": "This function allows you to attach a specific dgs element to a dgs gridlist. This function will force to set the parent of dgs element to th... | URL: https://wiki.multitheftauto.com/wiki/DgsAttachToGridList",
		"body": "dgsAttachToGridList(${1:element dgsElement}, ${2:element gridList}, ${3:int rowIndex}, ${4:int columnIndex})"
	},
	"dgsDetachFromGridList": {
		"scope": "lua",
		"prefix": "dgsDetachFromGridList",
		"description": "This function allows you to detach a specific dgs element from a dgs gridlist. | URL: https://wiki.multitheftauto.com/wiki/DgsDetachFromGridList",
		"body": "dgsDetachFromGridList(${1:element dgsElement})"
	},
	"dgsCreateImage": {
		"scope": "lua",
		"prefix": "dgsCreateImage",
		"description": "This function creates an image using image elements ( render target, texture element, shader and screen source and so on, even nothing just... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateImage",
		"body": "dgsCreateImage(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:element/string image = nil}, ${6:bool relative [}, ${7:element parent = nil}, ${8:int color = 0xFFFFFFFF ]})"
	},
	"dgsImageSetImage": {
		"scope": "lua",
		"prefix": "dgsImageSetImage",
		"description": "This function allows you to change the image in DGS image element to another one. Note: | URL: https://wiki.multitheftauto.com/wiki/DgsImageSetImage",
		"body": "dgsImageSetImage(${1:element theElement}, ${2:element/string texture})"
	},
	"dgsImageGetImage": {
		"scope": "lua",
		"prefix": "dgsImageGetImage",
		"description": "This function allows you to get the image from dgs image element. | URL: https://wiki.multitheftauto.com/wiki/DgsImageGetImage",
		"body": "dgsImageGetImage(${1:element theElement})"
	},
	"dgsImageSetUVSize": {
		"scope": "lua",
		"prefix": "dgsImageSetUVSize",
		"description": "This function sets the UV size of a DGS image (Only available when there is a texture loaded in DGS image). | URL: https://wiki.multitheftauto.com/wiki/DgsImageSetUVSize",
		"body": "dgsImageSetUVSize(${1:element dgsImage}, ${2:float UPos}, ${3:float VPos}, ${4:bool relative})"
	},
	"dgsImageGetUVSize": {
		"scope": "lua",
		"prefix": "dgsImageGetUVSize",
		"description": "This function gets the UV size of a DGS image (Only available when there is a texture loaded in DGS image). | URL: https://wiki.multitheftauto.com/wiki/DgsImageGetUVSize",
		"body": "dgsImageGetUVSize(${1:element dgsImage}, ${2:bool relative})"
	},
	"dgsImageSetUVPosition": {
		"scope": "lua",
		"prefix": "dgsImageSetUVPosition",
		"description": "This function sets the UV positon of a DGS image (Only available when there is a texture loaded in DGS image). | URL: https://wiki.multitheftauto.com/wiki/DgsImageSetUVPosition",
		"body": "dgsImageSetUVPosition(${1:element dgsImage}, ${2:float UPos}, ${3:float VPos}, ${4:bool relative})"
	},
	"dgsImageGetUVPosition": {
		"scope": "lua",
		"prefix": "dgsImageGetUVPosition",
		"description": "This function gets the UV positon of a DGS image (Only available when there is a texture loaded in DGS image). | URL: https://wiki.multitheftauto.com/wiki/DgsImageGetUVPosition",
		"body": "dgsImageGetUVPosition(${1:element dgsImage}, ${2:bool relative})"
	},
	"dgsImageGetNativeSize": {
		"scope": "lua",
		"prefix": "dgsImageGetNativeSize",
		"description": "This function gets the size of the texture that is loaded in DGS image. | URL: https://wiki.multitheftauto.com/wiki/DgsImageGetNativeSize",
		"body": "dgsImageGetNativeSize(${1:element dgsImage})"
	},
	"dgsCreateMemo": {
		"scope": "lua",
		"prefix": "dgsCreateMemo",
		"description": "This function creates a new DGS memo.  This is a multiline edit box in which the user can input text. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateMemo",
		"body": "dgsCreateMemo(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:string text}, ${6:bool relative [}, ${7:element parent = nil}, ${8:int textColor = 0x000000FF}, ${9:int scaleX = 1}, ${10:int scaleY = 1}, ${11:element bgImage = nil}, ${12:int bgColor = 0xFFFFFFFF ]})"
	},
	"dgsMemoMoveCaret": {
		"scope": "lua",
		"prefix": "dgsMemoMoveCaret",
		"description": "This function sets the current position of the caret (the text cursor) within the memo by offsets. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoMoveCaret",
		"body": "dgsMemoMoveCaret(${1:element theElement}, ${2:int indexoffset [}, ${3:int lineoffset = 0}, ${4:bool selectText = false}, ${5:bool noChangeLine = false ]})"
	},
	"dgsMemoSeekPosition": {
		"scope": "lua",
		"prefix": "dgsMemoSeekPosition",
		"description": "This function transform the position (index and line) correctly of the text in memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSeekPosition",
		"body": "dgsMemoSeekPosition(${1:element dxMemo}, ${2:int index}, ${3:int line [}, ${4:bool transformLine = true ]})"
	},
	"dgsMemoGetScrollBar": {
		"scope": "lua",
		"prefix": "dgsMemoGetScrollBar",
		"description": "This function gets two scroll bars of dgs memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetScrollBar",
		"body": "dgsMemoGetScrollBar(${1:element memo})"
	},
	"dgsMemoSetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsMemoSetScrollPosition",
		"description": "This function set scroll position of dgs memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetScrollPosition",
		"body": "dgsMemoSetScrollPosition(${1:element memo [}, ${2:float vertical = nil}, ${3:float horizontal = nil ]})"
	},
	"dgsMemoGetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsMemoGetScrollPosition",
		"description": "This function get scroll position of dgs memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetScrollPosition",
		"body": "dgsMemoGetScrollPosition(${1:element memo})"
	},
	"dgsMemoSetHorizontalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsMemoSetHorizontalScrollPosition",
		"description": "This function is used to set the horizontal scroll position from a memo | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetHorizontalScrollPosition",
		"body": "dgsMemoSetHorizontalScrollPosition(${1:element dgsMemo}, ${2:float position})"
	},
	"dgsMemoGetHorizontalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsMemoGetHorizontalScrollPosition",
		"description": "This function is used to get the horizontal scroll position from a memo | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetHorizontalScrollPosition",
		"body": "dgsMemoGetHorizontalScrollPosition(${1:element dgsMemo})"
	},
	"dgsMemoSetVerticalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsMemoSetVerticalScrollPosition",
		"description": "This function is used to set the vertical scroll position from a memo | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetVerticalScrollPosition",
		"body": "dgsMemoSetVerticalScrollPosition(${1:element dgsMemo}, ${2:float position})"
	},
	"dgsMemoGetVerticalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsMemoGetVerticalScrollPosition",
		"description": "No info | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetVerticalScrollPosition",
		"body": "dgsMemoGetVerticalScrollPosition(${1:element dgsMemo})"
	},
	"dgsMemoSetCaretPosition": {
		"scope": "lua",
		"prefix": "dgsMemoSetCaretPosition",
		"description": "This function sets the current position of the caret (the text cursor) within the memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetCaretPosition",
		"body": "dgsMemoSetCaretPosition(${1:element theElement}, ${2:int index [}, ${3:int line = 0}, ${4:bool selectText = false}, ${5:bool noChangeLine = false ]})"
	},
	"dgsMemoGetCaretPosition": {
		"scope": "lua",
		"prefix": "dgsMemoGetCaretPosition",
		"description": "This function gets the current position of the caret (the text cursor) within the memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetCaretPosition",
		"body": "dgsMemoGetCaretPosition(${1:element theElement})"
	},
	"dgsMemoSetCaretStyle": {
		"scope": "lua",
		"prefix": "dgsMemoSetCaretStyle",
		"description": "This function is to set the caret style of dgs memo ( 0 is \"|\"; 1 is \"_\" ). Example(0): This is Text| Example(1): This is Text_ | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetCaretStyle",
		"body": "dgsMemoSetCaretStyle(${1:element dgsElement}, ${2:int style})"
	},
	"dgsMemoGetCaretStyle": {
		"scope": "lua",
		"prefix": "dgsMemoGetCaretStyle",
		"description": "This function is to get the caret style of dgs memo ( 0 is \"|\"; 1 is \"_\" ). Example(0): This is Text| Example(1): This is Text_ | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetCaretStyle",
		"body": "dgsMemoGetCaretStyle(${1:element dgsElement})"
	},
	"dgsMemoSetReadOnly": {
		"scope": "lua",
		"prefix": "dgsMemoSetReadOnly",
		"description": "This function allows you to set or remove read-only status for a dgs memo. If read-only is set to true, the box is not editable. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetReadOnly",
		"body": "dgsMemoSetReadOnly(${1:element memo}, ${2:bool status})"
	},
	"dgsMemoGetReadOnly": {
		"scope": "lua",
		"prefix": "dgsMemoGetReadOnly",
		"description": "This function allows you to get read-only status for a dgs memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetReadOnly",
		"body": "dgsMemoGetReadOnly(${1:element memo})"
	},
	"dgsMemoGetPartOfText": {
		"scope": "lua",
		"prefix": "dgsMemoGetPartOfText",
		"description": "This function returns a part of text from the memo by index and line. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetPartOfText",
		"body": "dgsMemoGetPartOfText(${1:element theElement [}, ${2:int startIndex = 0}, ${3:int startLine = 1}, ${4:int endIndex}, ${5:int endLine}, ${6:bool deleteText = false ]})"
	},
	"dgsMemoAppendText": {
		"scope": "lua",
		"prefix": "dgsMemoAppendText",
		"description": "This function append the text to memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoAppendText",
		"body": "dgsMemoAppendText(${1:element memo}, ${2:string text})"
	},
	"dgsMemoDeleteText": {
		"scope": "lua",
		"prefix": "dgsMemoDeleteText",
		"description": "This function deletes a part of text from the memo by index and line. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoDeleteText",
		"body": "dgsMemoDeleteText(${1:element theElement}, ${2:int fromindex}, ${3:int fromline}, ${4:int toindex}, ${5:int toline [}, ${6:bool noAffectCaret = false ]})"
	},
	"dgsMemoInsertText": {
		"scope": "lua",
		"prefix": "dgsMemoInsertText",
		"description": "This function deletes a part of text from the memo by index and line. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoInsertText",
		"body": "dgsMemoInsertText(${1:element theElement}, ${2:int index}, ${3:int line}, ${4:string text})"
	},
	"dgsMemoClearText": {
		"scope": "lua",
		"prefix": "dgsMemoClearText",
		"description": "This function clears the whole text of the memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoClearText",
		"body": "dgsMemoClearText(${1:element theElement})"
	},
	"dgsMemoGetTextBoundingBox": {
		"scope": "lua",
		"prefix": "dgsMemoGetTextBoundingBox",
		"description": "This function gets the bounding box of the text inside DGS Memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetTextBoundingBox",
		"body": "dgsMemoGetTextBoundingBox(${1:element dgsMemo [}, ${2:bool excludePadding = false ]})"
	},
	"dgsMemoSetTypingSound": {
		"scope": "lua",
		"prefix": "dgsMemoSetTypingSound",
		"description": "This function applies a typing sound to a dgs memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetTypingSound",
		"body": "dgsMemoSetTypingSound(${1:element dxMemo}, ${2:string soundPath})"
	},
	"dgsMemoGetTypingSound": {
		"scope": "lua",
		"prefix": "dgsMemoGetTypingSound",
		"description": "This function gets the typing sound that has already been applied. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetTypingSound",
		"body": "dgsMemoGetTypingSound(${1:element dxMemo})"
	},
	"dgsMemoSetTypingSoundVolume": {
		"scope": "lua",
		"prefix": "dgsMemoSetTypingSoundVolume",
		"description": "This function changes the volume of the typing sound to a dgs memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetTypingSoundVolume",
		"body": "dgsMemoSetTypingSoundVolume(${1:element memo}, ${2:number volume})"
	},
	"dgsMemoGetTypingSoundVolume": {
		"scope": "lua",
		"prefix": "dgsMemoGetTypingSoundVolume",
		"description": "This function gets the volume of the typing sound of a dgs memo | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetTypingSoundVolume",
		"body": "dgsMemoGetTypingSoundVolume(${1:element memo})"
	},
	"dgsMemoGetLineCount": {
		"scope": "lua",
		"prefix": "dgsMemoGetLineCount",
		"description": "This function gets how many lines in the dgs memo | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetLineCount",
		"body": "dgsMemoGetLineCount(${1:element memo [}, ${2:bool forceStrongLine = false ]})"
	},
	"dgsMemoSetWordWrapState": {
		"scope": "lua",
		"prefix": "dgsMemoSetWordWrapState",
		"description": "This function sets the word wrap state of dgs memo | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetWordWrapState",
		"body": "dgsMemoSetWordWrapState(${1:element memo}, ${2:int/bool state})"
	},
	"dgsMemoGetWordWrapState": {
		"scope": "lua",
		"prefix": "dgsMemoGetWordWrapState",
		"description": "This function gets the word wrap state of dgs memo | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetWordWrapState",
		"body": "dgsMemoGetWordWrapState(${1:element memo})"
	},
	"dgsMemoSetScrollBarState": {
		"scope": "lua",
		"prefix": "dgsMemoSetScrollBarState",
		"description": "This function force the scroll bar of the memo to be enabled/disabled. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetScrollBarState",
		"body": "dgsMemoSetScrollBarState(${1:element memo [}, ${2:bool/nil verticalState = nil}, ${3:bool/nil horizontalState = nil ]})"
	},
	"dgsMemoGetScrollBarState": {
		"scope": "lua",
		"prefix": "dgsMemoGetScrollBarState",
		"description": "This function get the force state of the scroll bar of the memo | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetScrollBarState",
		"body": "dgsMemoGetScrollBarState(${1:element memo})"
	},
	"dgsMemoSetMaxLength": {
		"scope": "lua",
		"prefix": "dgsMemoSetMaxLength",
		"description": "This function sets the maximum text length that can be typed into a memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoSetMaxLength",
		"body": "dgsMemoSetMaxLength(${1:element theElement}, ${2:int length})"
	},
	"dgsMemoGetMaxLength": {
		"scope": "lua",
		"prefix": "dgsMemoGetMaxLength",
		"description": "This function gets the maximum text length that can be typed into a memo. | URL: https://wiki.multitheftauto.com/wiki/DgsMemoGetMaxLength",
		"body": "dgsMemoGetMaxLength(${1:element theElement})"
	},
	"dgsCreateLabel": {
		"scope": "lua",
		"prefix": "dgsCreateLabel",
		"description": "This function is for creating a new DGS label.  A label is simply a piece of text that cannot be edited by the user. If you would like to ha... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateLabel",
		"body": "dgsCreateLabel(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:string text}, ${6:bool relative [}, ${7:element parent = nil}, ${8:int textColor = 0xFFFFFFFF}, ${9:float scaleX = 1}, ${10:float scaleY = 1}, ${11:float shadowOffsetX = nil}, ${12:float shadowOffsetY = nil}, ${13:int shadowColor = nil}, ${14:string horizontalAlign = \"left\"}, ${15:string verticalAlign = \"top\"]})"
	},
	"dgsLabelSetColor": {
		"scope": "lua",
		"prefix": "dgsLabelSetColor",
		"description": "Returns true if the the color of the dgs label was successfully changed, false otherwise. This example creates a label with text \"Hello Worl... | URL: https://wiki.multitheftauto.com/wiki/DgsLabelSetColor",
		"body": "dgsLabelSetColor(${1:element theElement}, ${2:int red}, ${3:int green}, ${4:int blue}, ${5:int alpha})"
	},
	"dgsLabelSetColor2": {
		"scope": "lua",
		"prefix": "dgsLabelSetColor2",
		"description": "Returns true if the the color of the dgs label was successfully changed, false otherwise. This example creates a label with text \"Hello Worl... | URL: https://wiki.multitheftauto.com/wiki/DgsLabelSetColor",
		"body": "dgsLabelSetColor(${1:element theElement}, ${2:int color}, ${3:bool notSplitColor})"
	},
	"dgsLabelGetColor": {
		"scope": "lua",
		"prefix": "dgsLabelGetColor",
		"description": "This function gets the color of a label. | URL: https://wiki.multitheftauto.com/wiki/DgsLabelGetColor",
		"body": "dgsLabelGetColor(${1:element theLabel [}, ${2:bool notSplit = false ]})"
	},
	"dgsLabelSetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsLabelSetHorizontalAlign",
		"description": "This function sets the horizontal alignment of a dgs text label. | URL: https://wiki.multitheftauto.com/wiki/DgsLabelSetHorizontalAlign",
		"body": "dgsLabelSetHorizontalAlign(${1:element theLabel}, ${2:string align [}, ${3:bool wordwrap = false ]})"
	},
	"dgsLabelGetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsLabelGetHorizontalAlign",
		"description": "This function gets the horizontal alignment of a dgs text label.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsLabelGetHorizontalAlign",
		"body": "dgsLabelGetHorizontalAlign(${1:element theLabel})"
	},
	"dgsLabelSetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsLabelSetVerticalAlign",
		"description": "This function sets the vertical alignment of a dgs text label. | URL: https://wiki.multitheftauto.com/wiki/DgsLabelSetVerticalAlign",
		"body": "dgsLabelSetVerticalAlign(${1:element theLabel}, ${2:string align})"
	},
	"dgsLabelGetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsLabelGetVerticalAlign",
		"description": "This function gets the vertical alignment of a dgs text label.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsLabelGetVerticalAlign",
		"body": "dgsLabelGetVerticalAlign(${1:element theLabel})"
	},
	"dgsLabelGetTextExtent": {
		"scope": "lua",
		"prefix": "dgsLabelGetTextExtent",
		"description": "This function returns the extent, or width, of the current text inside a DGS text label. | URL: https://wiki.multitheftauto.com/wiki/DgsLabelGetTextExtent",
		"body": "dgsLabelGetTextExtent(${1:element theLabel})"
	},
	"dgsLabelGetFontHeight": {
		"scope": "lua",
		"prefix": "dgsLabelGetFontHeight",
		"description": "This function returns the height of the font currently used in a DGS text label. | URL: https://wiki.multitheftauto.com/wiki/DgsLabelGetFontHeight",
		"body": "dgsLabelGetFontHeight(${1:element theLabel})"
	},
	"dgsLabelGetTextSize": {
		"scope": "lua",
		"prefix": "dgsLabelGetTextSize",
		"description": "This function retrieves the theoretical width and height (in pixels) of a certain piece of text of dgs label. | URL: https://wiki.multitheftauto.com/wiki/DgsLabelGetTextSize",
		"body": "dgsLabelGetTextSize(${1:element theLabel})"
	},
	"dgsCreateLine": {
		"scope": "lua",
		"prefix": "dgsCreateLine",
		"description": "This function creates a DGS Line on the screen. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateLine",
		"body": "dgsCreateLine(${1:float x}, ${2:float y}, ${3:float w}, ${4:float h}, ${5:bool relative [}, ${6:element parent = nil}, ${7:float lineWidth = 1}, ${8:int color = 0xFFFFFFFF ]})"
	},
	"dgsLineAddItem": {
		"scope": "lua",
		"prefix": "dgsLineAddItem",
		"description": "This function adds an item into DGS Line. | URL: https://wiki.multitheftauto.com/wiki/DgsLineAddItem",
		"body": "dgsLineAddItem(${1:element line}, ${2:float startX}, ${3:float startY}, ${4:float endX}, ${5:float endY [}, ${6:float lineWidth = dgsLineWidth}, ${7:int lineColor = dgsLineColor}, ${8:bool relative = false ]})"
	},
	"dgsLineRemoveItem": {
		"scope": "lua",
		"prefix": "dgsLineRemoveItem",
		"description": "This function removes an item from DGS Line. | URL: https://wiki.multitheftauto.com/wiki/DgsLineRemoveItem",
		"body": "dgsLineRemoveItem(${1:element line}, ${2:int itemIndex})"
	},
	"dgsLineSetItemPosition": {
		"scope": "lua",
		"prefix": "dgsLineSetItemPosition",
		"description": "This function sets the position of an item of dgs line. | URL: https://wiki.multitheftauto.com/wiki/DgsLineSetItemPosition",
		"body": "dgsLineSetItemPosition(${1:element line}, ${2:int index}, ${3:float startX = previousEndX}, ${4:float startY = previousEndY}, ${5:float endX}, ${6:float endY [}, ${7:float relative = false ]})"
	},
	"dgsLineGetItemPosition": {
		"scope": "lua",
		"prefix": "dgsLineGetItemPosition",
		"description": "This function gets the position of an item of dgs line. | URL: https://wiki.multitheftauto.com/wiki/DgsLineGetItemPosition",
		"body": "dgsLineGetItemPosition(${1:element line}, ${2:int index})"
	},
	"dgsLineSetItemWidth": {
		"scope": "lua",
		"prefix": "dgsLineSetItemWidth",
		"description": "This function sets the width of an item of DGS Line. | URL: https://wiki.multitheftauto.com/wiki/DgsLineSetItemWidth",
		"body": "dgsLineSetItemWidth(${1:element line}, ${2:int index}, ${3:int width})"
	},
	"dgsLineGetItemWidth": {
		"scope": "lua",
		"prefix": "dgsLineGetItemWidth",
		"description": "This function gets the width of an item of DGS Line. | URL: https://wiki.multitheftauto.com/wiki/DgsLineGetItemWidth",
		"body": "dgsLineGetItemWidth(${1:element line}, ${2:int index})"
	},
	"dgsLineSetItemColor": {
		"scope": "lua",
		"prefix": "dgsLineSetItemColor",
		"description": "This function sets the color of an item of DGS Line. | URL: https://wiki.multitheftauto.com/wiki/DgsLineSetItemColor",
		"body": "dgsLineSetItemColor(${1:element line}, ${2:int index}, ${3:int color})"
	},
	"dgsLineGetItemColor": {
		"scope": "lua",
		"prefix": "dgsLineGetItemColor",
		"description": "This function gets the color of an item of DGS Line. | URL: https://wiki.multitheftauto.com/wiki/DgsLineGetItemColor",
		"body": "dgsLineGetItemColor(${1:element line}, ${2:int index})"
	},
	"dgsCreateProgressBar": {
		"scope": "lua",
		"prefix": "dgsCreateProgressBar",
		"description": "This function creates a progress bar. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateProgressBar",
		"body": "dgsCreateProgressBar(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:bool relative [}, ${6:element parent = nil}, ${7:texture bgImage = nil}, ${8:int bgColor = nil}, ${9:texture indicatorImage = nil}, ${10:int indicatorColor = nil}, ${11:bool indicatorMode = false ]})"
	},
	"dgsProgressBarGetProgress": {
		"scope": "lua",
		"prefix": "dgsProgressBarGetProgress",
		"description": "This function gets the progress of a progress bar as a percentage. | URL: https://wiki.multitheftauto.com/wiki/DgsProgressBarGetProgress",
		"body": "dgsProgressBarGetProgress(${1:progressBar theProgressbar})"
	},
	"dgsProgressBarSetProgress": {
		"scope": "lua",
		"prefix": "dgsProgressBarSetProgress",
		"description": "This function sets the progress of a progress bar as a percentage. | URL: https://wiki.multitheftauto.com/wiki/DgsProgressBarSetProgress",
		"body": "dgsProgressBarSetProgress(${1:progressBar theProgressbar}, ${2:float progress})"
	},
	"dgsProgressBarGetMode": {
		"scope": "lua",
		"prefix": "dgsProgressBarGetMode",
		"description": "This function gets bar image showing mode. | URL: https://wiki.multitheftauto.com/wiki/DgsProgressBarGetMode",
		"body": "dgsProgressBarGetMode(${1:element progressBar})"
	},
	"dgsProgressBarSetMode": {
		"scope": "lua",
		"prefix": "dgsProgressBarSetMode",
		"description": "This function sets bar image showing mode. | URL: https://wiki.multitheftauto.com/wiki/DgsProgressBarSetMode",
		"body": "dgsProgressBarSetMode(${1:element progressBar}, ${2:bool mode})"
	},
	"dgsProgressBarGetStyle": {
		"scope": "lua",
		"prefix": "dgsProgressBarGetStyle",
		"description": "This function get style name from a progress bar. | URL: https://wiki.multitheftauto.com/wiki/DgsProgressBarGetStyle",
		"body": "dgsProgressBarGetStyle(${1:element progressbar})"
	},
	"dgsProgressBarSetStyle": {
		"scope": "lua",
		"prefix": "dgsProgressBarSetStyle",
		"description": "This function changes the style of a dgs progress bar. | URL: https://wiki.multitheftauto.com/wiki/DgsProgressBarSetStyle",
		"body": "dgsProgressBarSetStyle(${1:element progressbar}, ${2:string style [}, ${3:table settingTable ]})"
	},
	"dgsCreateRadioButton": {
		"scope": "lua",
		"prefix": "dgsCreateRadioButton",
		"description": "This function creates a radio button. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateRadioButton",
		"body": "dgsCreateRadioButton(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:string text}, ${6:bool relative [}, ${7:element parent = nil}, ${8:int textcolor}, ${9:float scaleX = 1.0}, ${10:float scaleY = 1.0}, ${11:element normalUncheckedImage = nil}, ${12:element hoveringUncheckedImage = nil}, ${13:element clickedUnCheckedImage = nil}, ${14:int normalUnCheckedColor = 0xFFFFFFFF}, ${15:int hoveringUnCheckedColor = 0xFFFFFFFF}, ${16:int clickedUnCheckedColor = 0xFFB4B4B4}, ${17:element normalCheckedImage = nil}, ${18:element  hoveringCheckedImage = nil}, ${19:element clickedCheckedImage = nil}, ${20:int normalCheckedColor = 0xFFFFFFFF}, ${21:int hoveringCheckedColor = 0xFFFFFFFF}, ${22:int clickedCheckedColor = 0xFFB4B4B4 ]})"
	},
	"dgsRadioButtonGetSelected": {
		"scope": "lua",
		"prefix": "dgsRadioButtonGetSelected",
		"description": "This function gets a radio button's selection state.  | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonGetSelected",
		"body": "dgsRadioButtonGetSelected(${1:element RadioButton})"
	},
	"dgsRadioButtonSetSelected": {
		"scope": "lua",
		"prefix": "dgsRadioButtonSetSelected",
		"description": "This function selects or unselects a radio button. | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonSetSelected",
		"body": "dgsRadioButtonSetSelected(${1:element RadioButton}, ${2:bool state})"
	},
	"dgsRadioButtonSetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsRadioButtonSetHorizontalAlign",
		"description": "This function sets the horizontal alignment of the text of a dgs radio button. | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonSetHorizontalAlign",
		"body": "dgsRadioButtonSetHorizontalAlign(${1:element radioButton}, ${2:string align})"
	},
	"dgsRadioButtonGetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsRadioButtonGetHorizontalAlign",
		"description": "This function gets the horizontal alignment of a dgs radio button.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonGetHorizontalAlign",
		"body": "dgsRadioButtonGetHorizontalAlign(${1:element radioButton})"
	},
	"dgsRadioButtonSetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsRadioButtonSetVerticalAlign",
		"description": "This function sets the vertical alignment of the text of a dgs radio button. | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonSetVerticalAlign",
		"body": "dgsRadioButtonSetVerticalAlign(${1:element radioButton}, ${2:string align})"
	},
	"dgsRadioButtonGetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsRadioButtonGetVerticalAlign",
		"description": "This function gets the vertical alignment of a dgs radio button.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonGetVerticalAlign",
		"body": "dgsRadioButtonGetVerticalAlign(${1:element radioButton})"
	},
	"dgsRadioButtonGetButtonSide": {
		"scope": "lua",
		"prefix": "dgsRadioButtonGetButtonSide",
		"description": "This function gets the side of the button of a dgs radio button. | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonGetButtonSide",
		"body": "dgsRadioButtonGetButtonSide(${1:dgsRadioButton [}, ${2:string side = \"left\" ]})"
	},
	"dgsRadioButtonSetButtonSide": {
		"scope": "lua",
		"prefix": "dgsRadioButtonSetButtonSide",
		"description": "This function sets the side of the button of a dgs radio button. | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonSetButtonSide",
		"body": "dgsRadioButtonSetButtonSide(${1:dgsRadioButton [}, ${2:string side = \"left\" ]})"
	},
	"dgsRadioButtonGetButtonAlign": {
		"scope": "lua",
		"prefix": "dgsRadioButtonGetButtonAlign",
		"description": "This function gets the alignment of the button of a dgs radio button. | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonGetButtonAlign",
		"body": "dgsRadioButtonGetButtonAlign(${1:dgsRadioButton})"
	},
	"dgsRadioButtonSetButtonAlign": {
		"scope": "lua",
		"prefix": "dgsRadioButtonSetButtonAlign",
		"description": "This function sets the alignment of the button of a dgs radio button. | URL: https://wiki.multitheftauto.com/wiki/DgsRadioButtonSetButtonAlign",
		"body": "dgsRadioButtonSetButtonAlign(${1:dgsRadioButton [}, ${2:string alignment = \"left\" ]})"
	},
	"dgsCreateScrollBar": {
		"scope": "lua",
		"prefix": "dgsCreateScrollBar",
		"description": "This function allows creation of a DGS Scroll Bar. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateScrollBar",
		"body": "dgsCreateScrollBar(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:bool isHorizontal}, ${6:bool relative [}, ${7:element parent = nil}, ${8:element arrowImage = nil}, ${9:element troughImage = nil}, ${10:element cursorImage = nil}, ${11:int normalArrowColor = 0xAARRGGBB}, ${12:int hoveringArrowColor = 0xAARRGGBB}, ${13:int clickedArrowColor = 0xAARRGGBB}, ${14:int troughColor = 0xAARRGGBB}, ${15:int normalCursorColor = 0xAARRGGBB}, ${16:int hoveringCursorColor = 0xAARRGGBB}, ${17:int clickedCursorColor = 0xAARRGGBB ]})"
	},
	"dgsScrollBarSetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsScrollBarSetScrollPosition",
		"description": "This function is used to set the scroll amount of a dgs scrollbar as a percentage. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarSetScrollPosition",
		"body": "dgsScrollBarSetScrollPosition(${1:element theScrollBar}, ${2:float amount [}, ${3:bool isGrade = false ]})"
	},
	"dgsScrollBarGetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsScrollBarGetScrollPosition",
		"description": "This function gets the scroll amount of a dgs scrollbar as a percentage. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarGetScrollPosition",
		"body": "dgsScrollBarGetScrollPosition(${1:element theScrollBar [}, ${2:bool isGrade = false ]})"
	},
	"dgsScrollBarSetCursorLength": {
		"scope": "lua",
		"prefix": "dgsScrollBarSetCursorLength",
		"description": "This function sets the length of scroll bar cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarSetCursorLength",
		"body": "dgsScrollBarSetCursorLength(${1:element scrollBar}, ${2:float size [}, ${3:bool relative]})"
	},
	"dgsScrollBarGetCursorLength": {
		"scope": "lua",
		"prefix": "dgsScrollBarGetCursorLength",
		"description": "This function gets the length of scroll bar cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarGetCursorLength",
		"body": "dgsScrollBarGetCursorLength(${1:element scrollBar [}, ${2:bool relative ]})"
	},
	"dgsScrollBarSetGrades": {
		"scope": "lua",
		"prefix": "dgsScrollBarSetGrades",
		"description": "This function allows you can use grades on dgs scroll bar. This can make scroll bar have steps when scrolling. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarSetGrades",
		"body": "dgsScrollBarSetGrades(${1:element scrollBar}, ${2:int grades [}, ${3:bool remainMultipler = false ]})"
	},
	"dgsScrollBarGetGrades": {
		"scope": "lua",
		"prefix": "dgsScrollBarGetGrades",
		"description": "This function gets the grade of scroll bar cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarGetGrades",
		"body": "dgsScrollBarGetGrades(${1:element scrollBar})"
	},
	"dgsScrollBarSetLocked": {
		"scope": "lua",
		"prefix": "dgsScrollBarSetLocked",
		"description": "This function is used to lock/unlock the scroll bar to prevent scrolling. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarSetLocked",
		"body": "dgsScrollBarSetLocked(${1:element theScrollBar}, ${2:bool state})"
	},
	"dgsScrollBarGetLocked": {
		"scope": "lua",
		"prefix": "dgsScrollBarGetLocked",
		"description": "This function is used to get the lock state of the scroll bar. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarGetLocked",
		"body": "dgsScrollBarGetLocked(${1:element theScrollBar})"
	},
	"dgsScrollBarSetCursorWidth": {
		"scope": "lua",
		"prefix": "dgsScrollBarSetCursorWidth",
		"description": "This function changes the width of cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarSetCursorWidth",
		"body": "dgsScrollBarSetCursorWidth(${1:element scrollBar}, ${2:float width [}, ${3:bool relative ]})"
	},
	"dgsScrollBarGetCursorWidth": {
		"scope": "lua",
		"prefix": "dgsScrollBarGetCursorWidth",
		"description": "This function gets the width of cursor. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarGetCursorWidth",
		"body": "dgsScrollBarGetCursorWidth(${1:element scrollBar [}, ${2:bool relative ]})"
	},
	"dgsScrollBarSetTroughWidth": {
		"scope": "lua",
		"prefix": "dgsScrollBarSetTroughWidth",
		"description": "This function changes the width of trough. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarSetTroughWidth",
		"body": "dgsScrollBarSetTroughWidth(${1:element scrollBar}, ${2:float width [}, ${3:bool relative ]})"
	},
	"dgsScrollBarGetTroughWidth": {
		"scope": "lua",
		"prefix": "dgsScrollBarGetTroughWidth",
		"description": "This function gets the width of trough. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarGetTroughWidth",
		"body": "dgsScrollBarGetTroughWidth(${1:element scrollBar [}, ${2:bool relative ]})"
	},
	"dgsScrollBarSetArrowSize": {
		"scope": "lua",
		"prefix": "dgsScrollBarSetArrowSize",
		"description": "This function changes the size of arrow. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarSetArrowSize",
		"body": "dgsScrollBarSetArrowSize(${1:element scrollBar}, ${2:float size [}, ${3:bool relative ]})"
	},
	"dgsScrollBarGetArrowSize": {
		"scope": "lua",
		"prefix": "dgsScrollBarGetArrowSize",
		"description": "This function gets the size of arrow. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollBarGetArrowSize",
		"body": "dgsScrollBarGetArrowSize(${1:element scrollBar [}, ${2:bool relative ]})"
	},
	"dgsCreateScrollPane": {
		"scope": "lua",
		"prefix": "dgsCreateScrollPane",
		"description": "This creates a DGS scroll pane. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateScrollPane",
		"body": "dgsCreateScrollPane(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:bool relative [}, ${6:element parent = nil ]})"
	},
	"dgsScrollPaneGetScrollBar": {
		"scope": "lua",
		"prefix": "dgsScrollPaneGetScrollBar",
		"description": "This function gets two scroll bars of dgs scroll pane. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollPaneGetScrollBar",
		"body": "dgsScrollPaneGetScrollBar(${1:element scrollPane})"
	},
	"dgsScrollPaneSetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsScrollPaneSetScrollPosition",
		"description": "This function set scroll position of dgs scroll pane. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollPaneSetScrollPosition",
		"body": "dgsScrollPaneSetScrollPosition(${1:element scrollPane[}, ${2:float vertical = nil}, ${3:float horizontal = nil ]})"
	},
	"dgsScrollPaneGetScrollPosition": {
		"scope": "lua",
		"prefix": "dgsScrollPaneGetScrollPosition",
		"description": "This function get scroll position of dgs scroll pane. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollPaneGetScrollPosition",
		"body": "dgsScrollPaneGetScrollPosition(${1:element scrollPane})"
	},
	"dgsScrollPaneSetHorizontalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsScrollPaneSetHorizontalScrollPosition",
		"description": "This function is used to set the position of a horizontal scroll pane as a percentage. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollPaneSetHorizontalScrollPosition",
		"body": "dgsScrollPaneSetHorizontalScrollPosition(${1:element dgsScrollPane}, ${2:float position})"
	},
	"dgsScrollPaneGetHorizontalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsScrollPaneGetHorizontalScrollPosition",
		"description": "This function is used to get the position of a horizontal scroll pane as a percentage. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollPaneGetHorizontalScrollPosition",
		"body": "dgsScrollPaneGetHorizontalScrollPosition(${1:element dgsScrollPane})"
	},
	"dgsScrollPaneSetVerticalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsScrollPaneSetVerticalScrollPosition",
		"description": "This function is used to set the position of a vertical scroll pane as a percentage. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollPaneSetVerticalScrollPosition",
		"body": "dgsScrollPaneSetVerticalScrollPosition(${1:element dgsScrollPane}, ${2:float position})"
	},
	"dgsScrollPaneGetVerticalScrollPosition": {
		"scope": "lua",
		"prefix": "dgsScrollPaneGetVerticalScrollPosition",
		"description": "This function is used to get the position of a vertical scroll pane as a percentage. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollPaneGetVerticalScrollPosition",
		"body": "dgsScrollPaneGetVerticalScrollPosition(${1:element dgsScrollPane})"
	},
	"dgsScrollPaneSetScrollBarState": {
		"scope": "lua",
		"prefix": "dgsScrollPaneSetScrollBarState",
		"description": "This function force the scroll bar of the scroll pane to be enabled/disabled. | URL: https://wiki.multitheftauto.com/wiki/DgsScrollPaneSetScrollBarState",
		"body": "dgsScrollPaneSetScrollBarState(${1:element scrollPane [}, ${2:bool/nil verticalState = nil}, ${3:bool/nil horizontalState = nil ]})"
	},
	"dgsScrollPaneGetScrollBarState": {
		"scope": "lua",
		"prefix": "dgsScrollPaneGetScrollBarState",
		"description": "This function get the force state of the scroll bar of the scroll pane | URL: https://wiki.multitheftauto.com/wiki/DgsScrollPaneGetScrollBarState",
		"body": "dgsScrollPaneGetScrollBarState(${1:element scrollPane})"
	},
	"dgsCreateSelector": {
		"scope": "lua",
		"prefix": "dgsCreateSelector",
		"description": "This function allows creation of a DGS Selector. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateSelector",
		"body": "dgsCreateSelector(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:bool relative [}, ${6:element parent = nil}, ${7:int textColor = 0xFFFFFFFF}, ${8:float scaleX = 1}, ${9:float scaleY = 1}, ${10:float shadowOffsetX = nil}, ${11:float shadowOffsetY = nil}, ${12:int shadowColor = nil ]})"
	},
	"dgsSelectorAddItem": {
		"scope": "lua",
		"prefix": "dgsSelectorAddItem",
		"description": "Adds an item to a selector. | URL: https://wiki.multitheftauto.com/wiki/DgsSelectorAddItem",
		"body": "dgsSelectorAddItem(${1:element selector [}, ${2:string text ]})"
	},
	"dgsSelectorRemoveItem": {
		"scope": "lua",
		"prefix": "dgsSelectorRemoveItem",
		"description": "This function removes the selected item from a dgs selector. | URL: https://wiki.multitheftauto.com/wiki/DgsSelectorRemoveItem",
		"body": "dgsSelectorRemoveItem(${1:element selector}, ${2:int item})"
	},
	"dgsSelectorClear": {
		"scope": "lua",
		"prefix": "dgsSelectorClear",
		"description": "This function removes all the items from a dgs selector. | URL: https://wiki.multitheftauto.com/wiki/DgsSelectorClear",
		"body": "dgsSelectorClear(${1:element selector})"
	},
	"dgsSelectorSetSelectedItem": {
		"scope": "lua",
		"prefix": "dgsSelectorSetSelectedItem",
		"description": "This function sets the selected item from a dgs selector. | URL: https://wiki.multitheftauto.com/wiki/DgsSelectorSetSelectedItem",
		"body": "dgsSelectorSetSelectedItem(${1:element selector}, ${2:int item})"
	},
	"dgsSelectorGetSelectedItem": {
		"scope": "lua",
		"prefix": "dgsSelectorGetSelectedItem",
		"description": "This function returns the index of the selected dgs selector item. | URL: https://wiki.multitheftauto.com/wiki/DgsSelectorGetSelectedItem",
		"body": "dgsSelectorGetSelectedItem(${1:element selector})"
	},
	"dgsSelectorGetItemText": {
		"scope": "lua",
		"prefix": "dgsSelectorGetItemText",
		"description": "This function retrieves the text from a specific selector item. | URL: https://wiki.multitheftauto.com/wiki/DgsSelectorGetItemText",
		"body": "dgsSelectorGetItemText(${1:element selector}, ${2:int item})"
	},
	"dgsSelectorSetItemText": {
		"scope": "lua",
		"prefix": "dgsSelectorSetItemText",
		"description": "This function changes the text of a dgs selector item. | URL: https://wiki.multitheftauto.com/wiki/DgsSelectorSetItemText",
		"body": "dgsSelectorSetItemText(${1:element selector}, ${2:int itemId}, ${3:string/number text})"
	},
	"dgsSelectorSetItemFont": {
		"scope": "lua",
		"prefix": "dgsSelectorSetItemFont",
		"description": "This function changes the font of an item of a dgs selector. | URL: https://wiki.multitheftauto.com/wiki/DgsSelectorSetItemFont",
		"body": "dgsSelectorSetItemFont(${1:element selector}, ${2:int itemId}, ${3:string/dx-font font})"
	},
	"dgsAddStyle": {
		"scope": "lua",
		"prefix": "dgsAddStyle",
		"description": "This function adds a style into dgs, which is needed for external resource. This function is unncessary if you load the style from DGS style... | URL: https://wiki.multitheftauto.com/wiki/DgsAddStyle",
		"body": "dgsAddStyle(${1:string styleName}, ${2:string stylePath [}, ${3:resource-data/string bindResource = resource ]})"
	},
	"dgsLoadStyle": {
		"scope": "lua",
		"prefix": "dgsLoadStyle",
		"description": "This function loads an existing style into memory. | URL: https://wiki.multitheftauto.com/wiki/DgsLoadStyle",
		"body": "dgsLoadStyle(${1:string styleName [}, ${2:resource-data/string bindResource = resource ]})"
	},
	"dgsUnloadStyle": {
		"scope": "lua",
		"prefix": "dgsUnloadStyle",
		"description": "This function unloads an existing style from memory. | URL: https://wiki.multitheftauto.com/wiki/DgsUnloadStyle",
		"body": "dgsUnloadStyle(${1:string styleName [}, ${2:resource-data/string bindResource = resource ]})"
	},
	"dgsSetStyle": {
		"scope": "lua",
		"prefix": "dgsSetStyle",
		"description": "This function applies a DGS style to DGS global or just inside a specific resource. If the style is added but not loaded, this funtion will... | URL: https://wiki.multitheftauto.com/wiki/DgsSetStyle",
		"body": "dgsSetStyle(${1:string styleName [}, ${2:resource-data/string bindResource = resource ]})"
	},
	"dgsGetStyle": {
		"scope": "lua",
		"prefix": "dgsGetStyle",
		"description": "This function get the using style name from DGS global or a specific resource. | URL: https://wiki.multitheftauto.com/wiki/DgsGetStyle",
		"body": "dgsGetStyle(${1:[ resource-data/string bindResource = resource ]})"
	},
	"dgsGetLoadedStyleList": {
		"scope": "lua",
		"prefix": "dgsGetLoadedStyleList",
		"description": "This function get the loaded style list from DGS global or a specific resource. | URL: https://wiki.multitheftauto.com/wiki/DgsGetLoadedStyleList",
		"body": "dgsGetLoadedStyleList(${1:[ bool includeGlobal = false}, ${2:resource-data/string bindResource = resource ]})"
	},
	"dgsGetAddedStyleList": {
		"scope": "lua",
		"prefix": "dgsGetAddedStyleList",
		"description": "This function get the added style list from DGS global or a specific resource. | URL: https://wiki.multitheftauto.com/wiki/DgsGetAddedStyleList",
		"body": "dgsGetAddedStyleList(${1:[ bool includeGlobal = false}, ${2:resource-data/string bindResource = resource ]})"
	},
	"dgsGetValueFromStyle": {
		"scope": "lua",
		"prefix": "dgsGetValueFromStyle",
		"description": "This function returns the value from a loaded style( current style if not specified ) from DGS global or a specific resource. | URL: https://wiki.multitheftauto.com/wiki/DgsGetValueFromStyle",
		"body": "dgsGetValueFromStyle(${1:string elementType}, ${2:string key [}, ${3:string styleName = dgsGetStyle(})"
	},
	"dgsCreateSwitchButton": {
		"scope": "lua",
		"prefix": "dgsCreateSwitchButton",
		"description": "This function allows creation of a DGS Switch Button, which is a clickable item as part of GUI. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateSwitchButton",
		"body": "dgsCreateSwitchButton(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height [}, ${5:string textOn = \"\"}, ${6:string textOff = \"\"}, ${7:bool state = false}, ${8:bool relative = false}, ${9:element parent = nil}, ${10:int textColorOn = 0x5AA0E6FF}, ${11:int textColorOff = 0x3C3C3CFF}, ${12:float scaleX = 1}, ${13:float scaleY = 1 ]})"
	},
	"dgsSwitchButtonGetState": {
		"scope": "lua",
		"prefix": "dgsSwitchButtonGetState",
		"description": "This function gets the state of switch button. | URL: https://wiki.multitheftauto.com/wiki/DgsSwitchButtonGetState",
		"body": "dgsSwitchButtonGetState(${1:element switchButton})"
	},
	"dgsSwitchButtonSetState": {
		"scope": "lua",
		"prefix": "dgsSwitchButtonSetState",
		"description": "This function sets the state of switch button. | URL: https://wiki.multitheftauto.com/wiki/DgsSwitchButtonSetState",
		"body": "dgsSwitchButtonSetState(${1:element switchButton}, ${2:bool state})"
	},
	"dgsSwitchButtonSetText": {
		"scope": "lua",
		"prefix": "dgsSwitchButtonSetText",
		"description": "This function sets the text of switch button. | URL: https://wiki.multitheftauto.com/wiki/DgsSwitchButtonSetText",
		"body": "dgsSwitchButtonSetText(${1:element switchbutton}, ${2:string textOn}, ${3:string textOff})"
	},
	"dgsSwitchButtonGetText": {
		"scope": "lua",
		"prefix": "dgsSwitchButtonGetText",
		"description": "This function gets the text of switch button. | URL: https://wiki.multitheftauto.com/wiki/DgsSwitchButtonGetText",
		"body": "dgsSwitchButtonGetText(${1:element switchButton})"
	},
	"dgsCreateTabPanel": {
		"scope": "lua",
		"prefix": "dgsCreateTabPanel",
		"description": "This function allows creation of a DGS Tab Panel. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateTabPanel",
		"body": "dgsCreateTabPanel(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:bool relative [}, ${6:element parent = nil}, ${7:int tabHeight = 20}, ${8:element bgImage = nil}, ${9:int bgColor = 0xB4000000 ]})"
	},
	"dgsCreateTab": {
		"scope": "lua",
		"prefix": "dgsCreateTab",
		"description": "This function creates a tab on a pre-existing tab panel. A tab is a button as well as a 'dimension' that can be used to switch between infor... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateTab",
		"body": "dgsCreateTab(${1:string text}, ${2:element parent [}, ${3:int scaleX = 1}, ${4:int scaleY = 1}, ${5:int textColor = 0xFFFFFFFF}, ${6:element bgImage = nil}, ${7:int bgColor = 0x000000C8}, ${8:element normalImage = nil}, ${9:element hoveringImage = nil}, ${10:element clickedImage = nil}, ${11:int normalColor = 282828B4}, ${12:int hoveringColor = 0x505050BE}, ${13:int clickedColor = 0X000000C8]})"
	},
	"dgsGetSelectedTab": {
		"scope": "lua",
		"prefix": "dgsGetSelectedTab",
		"description": "This function returns the currently selected tab in the specified dgs tab panel. | URL: https://wiki.multitheftauto.com/wiki/DgsGetSelectedTab",
		"body": "dgsGetSelectedTab(${1:dgsElement tabPanel})"
	},
	"dgsSetSelectedTab": {
		"scope": "lua",
		"prefix": "dgsSetSelectedTab",
		"description": "This function is used to change the currently selected tab in the specified dgs tab panel. | URL: https://wiki.multitheftauto.com/wiki/DgsSetSelectedTab",
		"body": "dgsSetSelectedTab(${1:dgsElement tabPanel}, ${2:dgsElement tab})"
	},
	"dgsTabPanelGetTabFromID": {
		"scope": "lua",
		"prefix": "dgsTabPanelGetTabFromID",
		"description": "This function gets tab by the specific tab panel and tab id (start from 1). | URL: https://wiki.multitheftauto.com/wiki/DgsTabPanelGetTabFromID",
		"body": "dgsTabPanelGetTabFromID(${1:element tabpanel}, ${2:int ID})"
	},
	"dgsTabPanelMoveTab": {
		"scope": "lua",
		"prefix": "dgsTabPanelMoveTab",
		"description": "This function moves the tab to a specific index. | URL: https://wiki.multitheftauto.com/wiki/DgsTabPanelMoveTab",
		"body": "dgsTabPanelMoveTab(${1:element tabpanel}, ${2:int from}, ${3:int to})"
	},
	"dgsTabPanelGetTabID": {
		"scope": "lua",
		"prefix": "dgsTabPanelGetTabID",
		"description": "This function gets the index of the tab. | URL: https://wiki.multitheftauto.com/wiki/DgsTabPanelGetTabID",
		"body": "dgsTabPanelGetTabID(${1:element tab})"
	},
	"dgsDeleteTab": {
		"scope": "lua",
		"prefix": "dgsDeleteTab",
		"description": "This function deletes a tab from a tab panel. | URL: https://wiki.multitheftauto.com/wiki/DgsDeleteTab",
		"body": "dgsDeleteTab(${1:element tabToDelete})"
	},
	"dgsCreateWindow": {
		"scope": "lua",
		"prefix": "dgsCreateWindow",
		"description": "This function is for creating a new DGS window.  This provides a base for other dgs elements to be created within.  However, windows do not... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateWindow",
		"body": "dgsCreateWindow(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:string text}, ${6:bool relative[}, ${7:int textColor = 0xFFFFFFFF}, ${8:float titleHeight = 25}, ${9:element titleImage = nil}, ${10:int titleColor = 0xC8141414}, ${11:element image = nil}, ${12:int color = 0x96141414}, ${13:float borderSize = 5}, ${14:bool noCloseButton = false ]})"
	},
	"dgsWindowSetSizable": {
		"scope": "lua",
		"prefix": "dgsWindowSetSizable",
		"description": "This function enables or disables user resizing of a DGS window. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowSetSizable",
		"body": "dgsWindowSetSizable(${1:element theElement}, ${2:bool status})"
	},
	"dgsWindowSetMovable": {
		"scope": "lua",
		"prefix": "dgsWindowSetMovable",
		"description": "This function allows you to specify whether or not a user can move a DGS window. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowSetMovable",
		"body": "dgsWindowSetMovable(${1:element theElement}, ${2:bool status})"
	},
	"dgsWindowGetSizable": {
		"scope": "lua",
		"prefix": "dgsWindowGetSizable",
		"description": "This function allows you to check if a window is sizable. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetSizable",
		"body": "dgsWindowGetSizable(${1:element dgsWindow})"
	},
	"dgsWindowGetMovable": {
		"scope": "lua",
		"prefix": "dgsWindowGetMovable",
		"description": "This function allows you to check if a window is movable. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetMovable",
		"body": "dgsWindowGetMovable(${1:element dgsWindow})"
	},
	"dgsCloseWindow": {
		"scope": "lua",
		"prefix": "dgsCloseWindow",
		"description": "This function allows you to close a DGS window. | URL: https://wiki.multitheftauto.com/wiki/DgsCloseWindow",
		"body": "dgsCloseWindow(${1:element theElement})"
	},
	"dgsWindowSetCloseButtonEnabled": {
		"scope": "lua",
		"prefix": "dgsWindowSetCloseButtonEnabled",
		"description": "This function enables/disables the window close button( show or hide ). | URL: https://wiki.multitheftauto.com/wiki/DgsWindowSetCloseButtonEnabled",
		"body": "dgsWindowSetCloseButtonEnabled(${1:element window}, ${2:bool enabled})"
	},
	"dgsWindowGetCloseButtonEnabled": {
		"scope": "lua",
		"prefix": "dgsWindowGetCloseButtonEnabled",
		"description": "This function gets whether the window close button is enabled or not. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetCloseButtonEnabled",
		"body": "dgsWindowGetCloseButtonEnabled(${1:element window})"
	},
	"dgsWindowSetCloseButtonSize": {
		"scope": "lua",
		"prefix": "dgsWindowSetCloseButtonSize",
		"description": "This functions sets the dgs-dxwindow close(off) button size. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowSetCloseButtonSize",
		"body": "dgsWindowSetCloseButtonSize(${1:element dgsElement}, ${2:int width}, ${3:int height[}, ${4:bool relative]})"
	},
	"dgsWindowGetCloseButtonSize": {
		"scope": "lua",
		"prefix": "dgsWindowGetCloseButtonSize",
		"description": "This functions gets the size of dgs-dxwindow close(off) button. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetCloseButtonSize",
		"body": "dgsWindowGetCloseButtonSize(${1:element dgsElement [}, ${2:bool relative ]})"
	},
	"dgsWindowGetCloseButton": {
		"scope": "lua",
		"prefix": "dgsWindowGetCloseButton",
		"description": "This function allows you get the close button of window | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetCloseButton",
		"body": "dgsWindowGetCloseButton(${1:element dgsWindow})"
	},
	"dgsWindowSetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsWindowSetHorizontalAlign",
		"description": "This function sets the horizontal alignment of the title text of a dgs window. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowSetHorizontalAlign",
		"body": "dgsWindowSetHorizontalAlign(${1:element window}, ${2:string align})"
	},
	"dgsWindowSetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsWindowSetVerticalAlign",
		"description": "This function sets the vertical alignment of the title text of a dgs window. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowSetVerticalAlign",
		"body": "dgsWindowSetVerticalAlign(${1:element window}, ${2:string align})"
	},
	"dgsWindowGetHorizontalAlign": {
		"scope": "lua",
		"prefix": "dgsWindowGetHorizontalAlign",
		"description": "This function gets the horizontal alignment of a dgs window.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetHorizontalAlign",
		"body": "dgsWindowGetHorizontalAlign(${1:element window})"
	},
	"dgsWindowGetVerticalAlign": {
		"scope": "lua",
		"prefix": "dgsWindowGetVerticalAlign",
		"description": "This function gets the vertical alignment of a dgs window.Valid alignment types are: | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetVerticalAlign",
		"body": "dgsWindowGetVerticalAlign(${1:element window})"
	},
	"dgsWindowGetTextExtent": {
		"scope": "lua",
		"prefix": "dgsWindowGetTextExtent",
		"description": "This function returns the extent, or width, of the current title text of a DGS window. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetTextExtent",
		"body": "dgsWindowGetTextExtent(${1:element theWIndow})"
	},
	"dgsWindowGetFontHeight": {
		"scope": "lua",
		"prefix": "dgsWindowGetFontHeight",
		"description": "This function returns the height of the font currently used in title text of a DGS window. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetFontHeight",
		"body": "dgsWindowGetFontHeight(${1:element theWindow})"
	},
	"dgsWindowGetTextSize": {
		"scope": "lua",
		"prefix": "dgsWindowGetTextSize",
		"description": "This function retrieves the theoretical width and height (in pixels) of a certain piece of title text of dgs window. | URL: https://wiki.multitheftauto.com/wiki/DgsWindowGetTextSize",
		"body": "dgsWindowGetTextSize(${1:element theWindow})"
	},
	"dgsCreateBlurBox": {
		"scope": "lua",
		"prefix": "dgsCreateBlurBox",
		"description": ">>>Warning: This feature requires pixel shader model 2_a<<< This function creates a blur box. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateBlurBox",
		"body": "dgsCreateBlurBox(${1:int resolutionX}, ${2:int resolutionY [}, ${3:texture sourceTexture = nil ]})"
	},
	"dgsBlurBoxSetTexture": {
		"scope": "lua",
		"prefix": "dgsBlurBoxSetTexture",
		"description": "This function sets the source texture of dgs blur box that will be blurred. | URL: https://wiki.multitheftauto.com/wiki/DgsBlurBoxSetTexture",
		"body": "dgsBlurBoxSetTexture(${1:element blurbox [}, ${2:texture sourceTexture ]})"
	},
	"dgsBlurBoxGetTexture": {
		"scope": "lua",
		"prefix": "dgsBlurBoxGetTexture",
		"description": "This function gets the texture that is used in blur box. | URL: https://wiki.multitheftauto.com/wiki/DgsBlurBoxGetTexture",
		"body": "dgsBlurBoxGetTexture(${1:element blurbox})"
	},
	"dgsBlurBoxSetResolution": {
		"scope": "lua",
		"prefix": "dgsBlurBoxSetResolution",
		"description": "This function changes blur box resolution. | URL: https://wiki.multitheftauto.com/wiki/DgsBlurBoxSetResolution",
		"body": "dgsBlurBoxSetResolution(${1:element blurBox}, ${2:int width}, ${3:int height})"
	},
	"dgsBlurBoxSetIntensity": {
		"scope": "lua",
		"prefix": "dgsBlurBoxSetIntensity",
		"description": "This function sets blur box intensity. | URL: https://wiki.multitheftauto.com/wiki/DgsBlurBoxSetIntensity",
		"body": "dgsBlurBoxSetIntensity(${1:element blurBox}, ${2:float intensity})"
	},
	"dgsBlurBoxSetLevel": {
		"scope": "lua",
		"prefix": "dgsBlurBoxSetLevel",
		"description": "This function sets blur box level. | URL: https://wiki.multitheftauto.com/wiki/DgsBlurBoxSetLevel",
		"body": "dgsBlurBoxSetLevel(${1:element blurBox}, ${2:int level})"
	},
	"dgsBlurBoxGetResolution": {
		"scope": "lua",
		"prefix": "dgsBlurBoxGetResolution",
		"description": "This function gets resolution of a blur box. | URL: https://wiki.multitheftauto.com/wiki/DgsBlurBoxGetResolution",
		"body": "dgsBlurBoxGetResolution(${1:element blurBox})"
	},
	"dgsBlurBoxGetLevel": {
		"scope": "lua",
		"prefix": "dgsBlurBoxGetLevel",
		"description": "This function gets level of a blur box. | URL: https://wiki.multitheftauto.com/wiki/DgsBlurBoxGetLevel",
		"body": "dgsBlurBoxGetLevel(${1:element blurBox})"
	},
	"dgsBlurBoxGetIntensity": {
		"scope": "lua",
		"prefix": "dgsBlurBoxGetIntensity",
		"description": "This function gets intensity of a blur box. | URL: https://wiki.multitheftauto.com/wiki/DgsBlurBoxGetIntensity",
		"body": "dgsBlurBoxGetIntensity(${1:element blurBox})"
	},
	"dgsBlurBoxSetFilter": {
		"scope": "lua",
		"prefix": "dgsBlurBoxSetFilter",
		"description": "This function applies a dgs shape plugin to a blurbox. | URL: https://wiki.multitheftauto.com/wiki/DgsBlurBoxSetFilter",
		"body": "dgsBlurBoxSetFilter(${1:element blurbox [}, ${2:shader shapePlugin]})"
	},
	"dgsCreateCanvas": {
		"scope": "lua",
		"prefix": "dgsCreateCanvas",
		"description": "This function creates a canvas that is used to draw multiple shaders. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateCanvas",
		"body": "dgsCreateCanvas(${1:element renderSource}, ${2:int width}, ${3:int height [}, ${4:int color ]})"
	},
	"dgsCreateChart": {
		"scope": "lua",
		"prefix": "dgsCreateChart",
		"description": "This function creates a data chart. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateChart",
		"body": "dgsCreateChart(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height}, ${5:string chartType}, ${6:bool relative [}, ${7:element parent = nil ]})"
	},
	"dgsCreateCircle": {
		"scope": "lua",
		"prefix": "dgsCreateCircle",
		"description": "This function creates a circle shader that can be used for dgs elements. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateCircle",
		"body": "dgsCreateCircle(${1:[ float outsideRadius = 0.5}, ${2:float insideRadius = 0.2}, ${3:float angle = 360}, ${4:int color = 0xFFFFFFFF}, ${5:element texture = nil ]})"
	},
	"dgsCircleSetRadius": {
		"scope": "lua",
		"prefix": "dgsCircleSetRadius",
		"description": "This function set the outside/inside radius of the dgs circle. | URL: https://wiki.multitheftauto.com/wiki/DgsCircleSetRadius",
		"body": "dgsCircleSetRadius(${1:element circle}, ${2:float outsideRadius = 0.5}, ${3:float insideRadius = 0.2})"
	},
	"dgsCircleGetRadius": {
		"scope": "lua",
		"prefix": "dgsCircleGetRadius",
		"description": "This function gets the outside/inside radius from the dgs circle. | URL: https://wiki.multitheftauto.com/wiki/DgsCircleGetRadius",
		"body": "dgsCircleGetRadius(${1:element circle})"
	},
	"dgsCircleSetTexture": {
		"scope": "lua",
		"prefix": "dgsCircleSetTexture",
		"description": "This function applies a texture into dgs circle. | URL: https://wiki.multitheftauto.com/wiki/DgsCircleSetTexture",
		"body": "dgsCircleSetTexture(${1:element circle [ element texture = nil ]})"
	},
	"dgsCircleGetTexture": {
		"scope": "lua",
		"prefix": "dgsCircleGetTexture",
		"description": "This function gets the texture from the dgs circle. | URL: https://wiki.multitheftauto.com/wiki/DgsCircleGetTexture",
		"body": "dgsCircleGetTexture(${1:element circle})"
	},
	"dgsCircleSetTextureRotation": {
		"scope": "lua",
		"prefix": "dgsCircleSetTextureRotation",
		"description": "This function changes the texture rotation of the dgs circle. | URL: https://wiki.multitheftauto.com/wiki/DgsCircleSetTextureRotation",
		"body": "dgsCircleSetTextureRotation(${1:element circle}, ${2:float rotDegree [}, ${3:float rotCenterX = rotCenterX}, ${4:float rotCenterY = rotCenterY ]})"
	},
	"dgsCreateColorPicker": {
		"scope": "lua",
		"prefix": "dgsCreateColorPicker",
		"description": ">>>Warning: This feature requires pixel shader model 2_a<<< This function creates a dgs color picker plugin with RGB, HSL, HSV color mode. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateColorPicker",
		"body": "dgsCreateColorPicker(${1:string style}, ${2:float x}, ${3:float y}, ${4:float w}, ${5:float h}, ${6:bool relative [}, ${7:element parent = nil ]})"
	},
	"dgsColorPickerSetColor": {
		"scope": "lua",
		"prefix": "dgsColorPickerSetColor",
		"description": "This function sets the color of the color picker. | URL: https://wiki.multitheftauto.com/wiki/DgsColorPickerSetColor",
		"body": "dgsColorPickerSetColor(${1:element colorPicker [}, ${2:int color1}, ${3:int color2}, ${4:int color3}, ${5:int alpha}, ${6:string colorType = \"RGB\" ]})"
	},
	"dgsColorPickerGetColor": {
		"scope": "lua",
		"prefix": "dgsColorPickerGetColor",
		"description": "This function gets the color from the color picker. | URL: https://wiki.multitheftauto.com/wiki/DgsColorPickerGetColor",
		"body": "dgsColorPickerGetColor(${1:element colorPicker [}, ${2:string colorType = \"RGB\" ]})"
	},
	"dgsBindToColorPicker": {
		"scope": "lua",
		"prefix": "dgsBindToColorPicker",
		"description": "This function allows the possibility to bind a dgs edit/label/component selector/scrollbar to a dgs color picker. The value will be automati... | URL: https://wiki.multitheftauto.com/wiki/DgsBindToColorPicker",
		"body": "dgsBindToColorPicker(${1:element boundSource}, ${2:element targetColorPicker}, ${3:string colorType}, ${4:string colorAttribute [}, ${5:bool isStatic = false}, ${6:bool isReversed = false ]})"
	},
	"dgsUnbindFromColorPicker": {
		"scope": "lua",
		"prefix": "dgsUnbindFromColorPicker",
		"description": "This function allows the possibility to unbind a dgs edit/label/component selector/scrollbar from a dgs color picker. | URL: https://wiki.multitheftauto.com/wiki/DgsUnbindFromColorPicker",
		"body": "dgsUnbindFromColorPicker(${1:element boundSource})"
	},
	"dgsColorPickerCreateComponentSelector": {
		"scope": "lua",
		"prefix": "dgsColorPickerCreateComponentSelector",
		"description": ">>>Warning: This feature requires pixel shader model 2_a<<< This function creates a dgs color picker component selector. | URL: https://wiki.multitheftauto.com/wiki/DgsColorPickerCreateComponentSelector",
		"body": "dgsColorPickerCreateComponentSelector(${1:float x}, ${2:float y}, ${3:float w}, ${4:float h}, ${5:bool isHorizontal}, ${6:bool relative [}, ${7:element parent ]})"
	},
	"dgsColorPickerGetComponentSelectorValue": {
		"scope": "lua",
		"prefix": "dgsColorPickerGetComponentSelectorValue",
		"description": "This function gets the value in component selector ranges from 0 to 100. | URL: https://wiki.multitheftauto.com/wiki/DgsColorPickerGetComponentSelectorValue",
		"body": "dgsColorPickerGetComponentSelectorValue(${1:element componentSelector})"
	},
	"dgsColorPickerSetComponentSelectorValue": {
		"scope": "lua",
		"prefix": "dgsColorPickerSetComponentSelectorValue",
		"description": "This function sets the value in component selector ranges from 0 to 100. | URL: https://wiki.multitheftauto.com/wiki/DgsColorPickerSetComponentSelectorValue",
		"body": "dgsColorPickerSetComponentSelectorValue(${1:element componentSelector}, ${2:float value})"
	},
	"dgsCreateEffect3D": {
		"scope": "lua",
		"prefix": "dgsCreateEffect3D",
		"description": "This function creates a 3d effect for scroll pane. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateEffect3D",
		"body": "dgsCreateEffect3D(${1:float rotateFactor})"
	},
	"dgsEffect3DApplyToScrollPane": {
		"scope": "lua",
		"prefix": "dgsEffect3DApplyToScrollPane",
		"description": "This function applies dgs effect 3d to a scroll pane. | URL: https://wiki.multitheftauto.com/wiki/DgsEffect3DApplyToScrollPane",
		"body": "dgsEffect3DApplyToScrollPane(${1:element effect3d}, ${2:element scrollpane})"
	},
	"dgsEffect3DRemoveFromScrollPane": {
		"scope": "lua",
		"prefix": "dgsEffect3DRemoveFromScrollPane",
		"description": "This function removes dgs effect 3d from a scroll pane if existing. | URL: https://wiki.multitheftauto.com/wiki/DgsEffect3DRemoveFromScrollPane",
		"body": "dgsEffect3DRemoveFromScrollPane(${1:element scrollpane})"
	},
	"dgsCreateGradient": {
		"scope": "lua",
		"prefix": "dgsCreateGradient",
		"description": "This function is for creating a gradient shader. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateGradient",
		"body": "dgsCreateGradient(${1:int colorFrom}, ${2:int colorTo [}, ${3:float rotation = 0 ]})"
	},
	"dgsGradientSetColorOverwritten": {
		"scope": "lua",
		"prefix": "dgsGradientSetColorOverwritten",
		"description": "This function sets whether the color of gradient will overwrite the color of dx functions. | URL: https://wiki.multitheftauto.com/wiki/DgsGradientSetColorOverwritten",
		"body": "dgsGradientSetColorOverwritten(${1:element gradient}, ${2:bool isOverwritten})"
	},
	"dgsGradientGetColorOverwritten": {
		"scope": "lua",
		"prefix": "dgsGradientGetColorOverwritten",
		"description": "This function gets whether the color of gradient will overwrite the color of dx functions. | URL: https://wiki.multitheftauto.com/wiki/DgsGradientGetColorOverwritten",
		"body": "dgsGradientGetColorOverwritten(${1:element gradient})"
	},
	"dgsCreateMask": {
		"scope": "lua",
		"prefix": "dgsCreateMask",
		"description": "This function creates a DGS mask. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateMask",
		"body": "dgsCreateMask(${1:texture sourceTexture}, ${2:texture/shader/string mask [}, ${3:table settings ]})"
	},
	"dgsMaskGetTexture": {
		"scope": "lua",
		"prefix": "dgsMaskGetTexture",
		"description": "This function gets the texture that is used as source texture of dgs mask. | URL: https://wiki.multitheftauto.com/wiki/DgsMaskGetTexture",
		"body": "dgsMaskGetTexture(${1:element mask})"
	},
	"dgsMaskSetTexture": {
		"scope": "lua",
		"prefix": "dgsMaskSetTexture",
		"description": "This function sets the texture that is used as source texture of dgs mask. | URL: https://wiki.multitheftauto.com/wiki/DgsMaskSetTexture",
		"body": "dgsMaskSetTexture(${1:element mask}, ${2:element texture})"
	},
	"dgsMaskCenterTexturePosition": {
		"scope": "lua",
		"prefix": "dgsMaskCenterTexturePosition",
		"description": "This function center the source texture of DGS mask. | URL: https://wiki.multitheftauto.com/wiki/DgsMaskCenterTexturePosition",
		"body": "dgsMaskCenterTexturePosition(${1:element mask}, ${2:int w}, ${3:int h})"
	},
	"dgsMaskAdaptTextureSize": {
		"scope": "lua",
		"prefix": "dgsMaskAdaptTextureSize",
		"description": "This function adapt the size of the source texture of DGS mask. | URL: https://wiki.multitheftauto.com/wiki/DgsMaskAdaptTextureSize",
		"body": "dgsMaskAdaptTextureSize(${1:element mask}, ${2:int w}, ${3:int h})"
	},
	"dgsCreateMediaBrowser": {
		"scope": "lua",
		"prefix": "dgsCreateMediaBrowser",
		"description": "This function is for creating a browser(CEF) which is coded to load Video/Audio/Image more convenient. Only Local Mode Available. Available... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateMediaBrowser",
		"body": "dgsCreateMediaBrowser(${1:int width}, ${2:int height}, ${3:bool transparent})"
	},
	"dgsMediaLoadMedia": {
		"scope": "lua",
		"prefix": "dgsMediaLoadMedia",
		"description": "This function is for loading Video/Audio/Image to a Media Browser (dgsCreateMediaBrowser) element. Available Media Format: Video: webm Audio... | URL: https://wiki.multitheftauto.com/wiki/DgsMediaLoadMedia",
		"body": "dgsMediaLoadMedia(${1:element media}, ${2:string path}, ${3:string theType})"
	},
	"dgsMediaGetMediaPath": {
		"scope": "lua",
		"prefix": "dgsMediaGetMediaPath",
		"description": "This function returns file path of the media in the (dgsCreateMediaBrowser) element. | URL: https://wiki.multitheftauto.com/wiki/DgsMediaGetMediaPath",
		"body": "dgsMediaGetMediaPath(${1:element media})"
	},
	"dgsMediaClearMedia": {
		"scope": "lua",
		"prefix": "dgsMediaClearMedia",
		"description": "This function clears the media in the (dgsCreateMediaBrowser) element. | URL: https://wiki.multitheftauto.com/wiki/DgsMediaClearMedia",
		"body": "dgsMediaClearMedia(${1:element media})"
	},
	"dgsMediaIsStreamMedia": {
		"scope": "lua",
		"prefix": "dgsMediaIsStreamMedia",
		"description": "This function checks whether there is a media loaded by the media browser . | URL: https://wiki.multitheftauto.com/wiki/DgsMediaIsStreamMedia",
		"body": "dgsMediaIsStreamMedia(${1:element media})"
	},
	"dgsMediaPlay": {
		"scope": "lua",
		"prefix": "dgsMediaPlay",
		"description": "This function plays media in media browser. Please ensure media has been loaded into media browser before playing | URL: https://wiki.multitheftauto.com/wiki/DgsMediaPlay",
		"body": "dgsMediaPlay(${1:element multiMediaBrowser})"
	},
	"dgsMediaPause": {
		"scope": "lua",
		"prefix": "dgsMediaPause",
		"description": "This function pauses media in media browser. Available types: | URL: https://wiki.multitheftauto.com/wiki/DgsMediaPause",
		"body": "dgsMediaPause(${1:element multiMediaBrowser})"
	},
	"dgsMediaStop": {
		"scope": "lua",
		"prefix": "dgsMediaStop",
		"description": "This function stops media in media browser. Available types: | URL: https://wiki.multitheftauto.com/wiki/DgsMediaStop",
		"body": "dgsMediaStop(${1:element multiMediaBrowser})"
	},
	"dgsMediaGetDuration": {
		"scope": "lua",
		"prefix": "dgsMediaGetDuration",
		"description": "This function gets the duration of the loaded media. | URL: https://wiki.multitheftauto.com/wiki/DgsMediaGetDuration",
		"body": "dgsMediaGetDuration(${1:element multiMediaBrowser})"
	},
	"dgsMediaGetCurrentPosition": {
		"scope": "lua",
		"prefix": "dgsMediaGetCurrentPosition",
		"description": "This function gets the position of the loaded media. | URL: https://wiki.multitheftauto.com/wiki/DgsMediaGetCurrentPosition",
		"body": "dgsMediaGetCurrentPosition(${1:element multiMediaBrowser})"
	},
	"dgsMediaGetLooped": {
		"scope": "lua",
		"prefix": "dgsMediaGetLooped",
		"description": "This function gets whether the media browser is looped. Only Video/Audio support loop option. | URL: https://wiki.multitheftauto.com/wiki/DgsMediaGetLooped",
		"body": "dgsMediaGetLooped(${1:element multiMediaBrowser})"
	},
	"dgsMediaSetLooped": {
		"scope": "lua",
		"prefix": "dgsMediaSetLooped",
		"description": "This function sets whether the media in media browser is looped.  Only Video/Audio support loop option. | URL: https://wiki.multitheftauto.com/wiki/DgsMediaSetLooped",
		"body": "dgsMediaSetLooped(${1:element multiMediaBrowser}, ${2:bool state})"
	},
	"dgsCreateNineSlice": {
		"scope": "lua",
		"prefix": "dgsCreateNineSlice",
		"description": "This function creates a nine-slice scaler. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateNineSlice",
		"body": "dgsCreateNineSlice(${1:element texture}, ${2:float gridXLeft}, ${3:float gridXRight}, ${4:float gridYTop}, ${5:float gridYBottom [}, ${6:bool relative = false ]})"
	},
	"dgsNineSliceSetGrid": {
		"scope": "lua",
		"prefix": "dgsNineSliceSetGrid",
		"description": "This function changes the grid position of DGS nine slice plugin. | URL: https://wiki.multitheftauto.com/wiki/DgsNineSliceSetGrid",
		"body": "dgsNineSliceSetGrid(${1:element nineSlice [}, ${2:float gridXLeft}, ${3:float gridXRight}, ${4:float gridYTop}, ${5:float gridYBottom}, ${6:bool relative = false ]})"
	},
	"dgsNineSliceGetGrid": {
		"scope": "lua",
		"prefix": "dgsNineSliceGetGrid",
		"description": "This function gets the grid position of DGS nine slice plugin. | URL: https://wiki.multitheftauto.com/wiki/DgsNineSliceGetGrid",
		"body": "dgsNineSliceGetGrid(${1:element nineSlice [}, ${2:relative = false ]})"
	},
	"dgsCreateObjectPreviewHandle": {
		"scope": "lua",
		"prefix": "dgsCreateObjectPreviewHandle",
		"description": ">>>Warning: This feature requires hardware MRT support ( You can also solve this problem by renewing your graphic card )<<< >>>Warning: This... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateObjectPreviewHandle",
		"body": "dgsCreateObjectPreviewHandle(${1:element theElementToShow}, ${2:float rotX}, ${3:float rotY}, ${4:float rotZ [}, ${5:bool isSecRT = true]})"
	},
	"dgsLocateObjectPreviewResource": {
		"scope": "lua",
		"prefix": "dgsLocateObjectPreviewResource",
		"description": "This function locates the object preview resource for DGS. Object Preview should be running. | URL: https://wiki.multitheftauto.com/wiki/DgsLocateObjectPreviewResource",
		"body": "dgsLocateObjectPreviewResource(${1:string name})"
	},
	"dgsAttachObjectPreviewToImage": {
		"scope": "lua",
		"prefix": "dgsAttachObjectPreviewToImage",
		"description": "This function applies the object preview element to dgs image. | URL: https://wiki.multitheftauto.com/wiki/DgsAttachObjectPreviewToImage",
		"body": "dgsAttachObjectPreviewToImage(${1:element SOVElement}, ${2:element dgsImage})"
	},
	"dgsRemoveObjectPreviewFromImage": {
		"scope": "lua",
		"prefix": "dgsRemoveObjectPreviewFromImage",
		"description": "This function removes the object preview element from dgs image. | URL: https://wiki.multitheftauto.com/wiki/DgsRemoveObjectPreviewFromImage",
		"body": "dgsRemoveObjectPreviewFromImage(${1:element dgsImage})"
	},
	"dgsObjectPreviewGetHandleByID": {
		"scope": "lua",
		"prefix": "dgsObjectPreviewGetHandleByID",
		"description": "This function gets the DGS handled object prreview element by element ID. | URL: https://wiki.multitheftauto.com/wiki/DgsObjectPreviewGetHandleByID",
		"body": "dgsObjectPreviewGetHandleByID(${1:string elementID})"
	},
	"dgsConfigureObjectPreview": {
		"scope": "lua",
		"prefix": "dgsConfigureObjectPreview",
		"description": "You need to insert this line into line 340 in 'c_main.lua of Object Preview: | URL: https://wiki.multitheftauto.com/wiki/DgsConfigureObjectPreview",
		"body": "dgsConfigureObjectPreview(${1:})"
	},
	"dgsPasteHandlerSetEnabled": {
		"scope": "lua",
		"prefix": "dgsPasteHandlerSetEnabled",
		"description": "This function enables/disables DGS Paste Handler. This paste handler will enable player to paste (ctrl+v) something with format. | URL: https://wiki.multitheftauto.com/wiki/DgsPasteHandlerSetEnabled",
		"body": "dgsPasteHandlerSetEnabled(${1:bool state})"
	},
	"dgsPasteHandlerIsEnabled": {
		"scope": "lua",
		"prefix": "dgsPasteHandlerIsEnabled",
		"description": "This function gets whether the DGS Paste Handler is enabled or not. | URL: https://wiki.multitheftauto.com/wiki/DgsPasteHandlerIsEnabled",
		"body": "dgsPasteHandlerIsEnabled(${1:})"
	},
	"dgsPasteHandlerSetFocused": {
		"scope": "lua",
		"prefix": "dgsPasteHandlerSetFocused",
		"description": "This function focus/blur DGS Paste Handler. | URL: https://wiki.multitheftauto.com/wiki/DgsPasteHandlerSetFocused",
		"body": "dgsPasteHandlerSetFocused(${1:bool state})"
	},
	"dgsPasteHandlerIsFocused": {
		"scope": "lua",
		"prefix": "dgsPasteHandlerIsFocused",
		"description": "This function gets whether the DGS Paste Handler is focused or not. | URL: https://wiki.multitheftauto.com/wiki/DgsPasteHandlerIsFocused",
		"body": "dgsPasteHandlerIsFocused(${1:})"
	},
	"dgsRequestQRCode": {
		"scope": "lua",
		"prefix": "dgsRequestQRCode",
		"description": "This function uses the API from api.qrserver.com to create a QRCode and handled by DGS. | URL: https://wiki.multitheftauto.com/wiki/DgsRequestQRCode",
		"body": "dgsRequestQRCode(${1:string dataString [}, ${2:int width = 128}, ${3:int height = 128 ]})"
	},
	"dgsGetQRCodeLoaded": {
		"scope": "lua",
		"prefix": "dgsGetQRCodeLoaded",
		"description": "This function gets whether the DGS QRCode is loaded or not. | URL: https://wiki.multitheftauto.com/wiki/DgsGetQRCodeLoaded",
		"body": "dgsGetQRCodeLoaded(${1:element QRCode})"
	},
	"dgsCreateRemoteImage": {
		"scope": "lua",
		"prefix": "dgsCreateRemoteImage",
		"description": "This function creates a texture from URL, that can be used for dgsCreateImage. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateRemoteImage",
		"body": "dgsCreateRemoteImage(${1:string URL})"
	},
	"dgsRemoteImageRequest": {
		"scope": "lua",
		"prefix": "dgsRemoteImageRequest",
		"description": "This function loads image from a URL with existing dgs remote image. | URL: https://wiki.multitheftauto.com/wiki/DgsRemoteImageRequest",
		"body": "dgsRemoteImageRequest(${1:element remoteImage}, ${2:string URL})"
	},
	"dgsRemoteImageAbort": {
		"scope": "lua",
		"prefix": "dgsRemoteImageAbort",
		"description": "This function aborts the request of remote image when it is downloading. | URL: https://wiki.multitheftauto.com/wiki/DgsRemoteImageAbort",
		"body": "dgsRemoteImageAbort(${1:element remoteImage})"
	},
	"dgsRemoteImageGetTexture": {
		"scope": "lua",
		"prefix": "dgsRemoteImageGetTexture",
		"description": "This function gets the texture of loaded dgs remote image. | URL: https://wiki.multitheftauto.com/wiki/DgsRemoteImageGetTexture",
		"body": "dgsRemoteImageGetTexture(${1:element remoteImage})"
	},
	"dgsGetRemoteImageLoadState": {
		"scope": "lua",
		"prefix": "dgsGetRemoteImageLoadState",
		"description": "This function gets whether the DGS Remote Image is loaded or not. | URL: https://wiki.multitheftauto.com/wiki/DgsGetRemoteImageLoadState",
		"body": "dgsGetRemoteImageLoadState(${1:element imageTexture})"
	},
	"dgsCreateRoundRect": {
		"scope": "lua",
		"prefix": "dgsCreateRoundRect",
		"description": "NOTE: When using optional arguments, you might need to supply all arguments before the one you wish to use. For more information on optional... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateRoundRect",
		"body": "dgsCreateRoundRect(${1:float radius}, ${2:bool relative [}, ${3:int color = 0xFFFFFFFF}, ${4:texture background = nil}, ${5:bool colorOverwritten = true}, ${6:bool isBorderOnly}, ${7:float borderHorizontalThickness}, ${8:float borderVerticalThickness ]})"
	},
	"dgsCreateRoundRect2": {
		"scope": "lua",
		"prefix": "dgsCreateRoundRect2",
		"description": "NOTE: When using optional arguments, you might need to supply all arguments before the one you wish to use. For more information on optional... | URL: https://wiki.multitheftauto.com/wiki/DgsCreateRoundRect",
		"body": "dgsCreateRoundRect(${1:table multiArguments [}, ${2:int color = 0xFFFFFFFF}, ${3:texture background = nil}, ${4:bool colorOverwritten = true}, ${5:bool isBorderOnly}, ${6:float borderHorizontalThickness}, ${7:float borderVerticalThickness ]})"
	},
	"dgsRoundRectSetTexture": {
		"scope": "lua",
		"prefix": "dgsRoundRectSetTexture",
		"description": "This function sets the source texture of dgs rounded rectangle that will be cut into rounded rectangle. | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectSetTexture",
		"body": "dgsRoundRectSetTexture(${1:element rndRect}, ${2:texture sourceTexture})"
	},
	"dgsRoundRectGetTexture": {
		"scope": "lua",
		"prefix": "dgsRoundRectGetTexture",
		"description": "This function gets the texture that is used in rounded rectangle. | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectGetTexture",
		"body": "dgsRoundRectGetTexture(${1:element rndRect})"
	},
	"dgsRoundRectSetRadius": {
		"scope": "lua",
		"prefix": "dgsRoundRectSetRadius",
		"description": "This function sets the radius of the corner of the dgs rounded rectangle. | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectSetRadius",
		"body": "dgsRoundRectSetRadius(${1:element rndRect}, ${2:float radius [}, ${3:bool isRelative = true]})"
	},
	"dgsRoundRectGetRadius": {
		"scope": "lua",
		"prefix": "dgsRoundRectGetRadius",
		"description": "This function gets the radius of the corner of the dgs rounded rectangle. | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectGetRadius",
		"body": "dgsRoundRectGetRadius(${1:element rndRect})"
	},
	"dgsRoundRectSetColor": {
		"scope": "lua",
		"prefix": "dgsRoundRectSetColor",
		"description": "This function sets the color of the dgs rounded rectangle. | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectSetColor",
		"body": "dgsRoundRectSetColor(${1:element rndRect}, ${2:int color})"
	},
	"dgsRoundRectGetColor": {
		"scope": "lua",
		"prefix": "dgsRoundRectGetColor",
		"description": "This function gets the color of the dgs rounded rectangle. | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectGetColor",
		"body": "dgsRoundRectGetColor(${1:element rndRect})"
	},
	"dgsRoundRectSetColorOverwritten": {
		"scope": "lua",
		"prefix": "dgsRoundRectSetColorOverwritten",
		"description": "This function sets whether the color of round rectangle will overwrite the color of dx functions. | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectSetColorOverwritten",
		"body": "dgsRoundRectSetColorOverwritten(${1:element rndRect}, ${2:bool isOverwritten})"
	},
	"dgsRoundRectGetColorOverwritten": {
		"scope": "lua",
		"prefix": "dgsRoundRectGetColorOverwritten",
		"description": "This function gets whether the color of round rectangle will overwrite the color of dx functions. | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectGetColorOverwritten",
		"body": "dgsRoundRectGetColorOverwritten(${1:element rndRect})"
	},
	"dgsRoundRectSetBorderThickness": {
		"scope": "lua",
		"prefix": "dgsRoundRectSetBorderThickness",
		"description": "This function sets border thickness of an unfilled round rectangle. This function only works with unfilled round rectangle, make sure the ro... | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectSetBorderThickness",
		"body": "dgsRoundRectSetBorderThickness(${1:element rndRect}, ${2:float horizontal [}, ${3:float vertical = horizontal ]})"
	},
	"dgsRoundRectGetBorderThickness": {
		"scope": "lua",
		"prefix": "dgsRoundRectGetBorderThickness",
		"description": "This function gets border thickness of an unfilled round rectangle. | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectGetBorderThickness",
		"body": "dgsRoundRectGetBorderThickness(${1:element rndRect})"
	},
	"dgsRoundRectGetBorderOnly": {
		"scope": "lua",
		"prefix": "dgsRoundRectGetBorderOnly",
		"description": "This function gets whether the round rectangle is border only ( unfilled ). | URL: https://wiki.multitheftauto.com/wiki/DgsRoundRectGetBorderOnly",
		"body": "dgsRoundRectGetBorderOnly(${1:element rndRect})"
	},
	"dgsCreateSVG": {
		"scope": "lua",
		"prefix": "dgsCreateSVG",
		"description": "Creates an svg from size (blank document), filepath or raw data , similar to svgCreate.  | URL: https://wiki.multitheftauto.com/wiki/DgsCreateSVG",
		"body": "dgsCreateSVG(${1:int width}, ${2:int height [}, ${3:string pathORrawData ]})"
	},
	"dgsSVGGetRawDocument": {
		"scope": "lua",
		"prefix": "dgsSVGGetRawDocument",
		"description": "Gets the raw xml data from an svg or an svg node. | URL: https://wiki.multitheftauto.com/wiki/DgsSVGGetRawDocument",
		"body": "dgsSVGGetRawDocument(${1:mixed svgNode})"
	},
	"dgsSVGGetDocument": {
		"scope": "lua",
		"prefix": "dgsSVGGetDocument",
		"description": "Gets the underlying XML document from an SVG element.  | URL: https://wiki.multitheftauto.com/wiki/DgsSVGGetDocument",
		"body": "dgsSVGGetDocument(${1:svg svgElement})"
	},
	"dgsSVGCreateNode": {
		"scope": "lua",
		"prefix": "dgsSVGCreateNode",
		"description": "This function create a node in svg document  . | URL: https://wiki.multitheftauto.com/wiki/DgsSVGCreateNode",
		"body": "dgsSVGCreateNode(${1:xmlnode xmlNode}, ${2:string nodeType}, ${3:...})"
	},
	"dgsSVGDestroyNode": {
		"scope": "lua",
		"prefix": "dgsSVGDestroyNode",
		"description": "This function destroys a XML node from the XML node tree. | URL: https://wiki.multitheftauto.com/wiki/DgsSVGDestroyNode",
		"body": "dgsSVGDestroyNode(${1:xmlnode theXMLNode})"
	},
	"dgsSVGNodeSetAttribute": {
		"scope": "lua",
		"prefix": "dgsSVGNodeSetAttribute",
		"description": "This function change single node attribute in svg document . | URL: https://wiki.multitheftauto.com/wiki/DgsSVGNodeSetAttribute",
		"body": "dgsSVGNodeSetAttribute(${1:xmlnode xmlNode}, ${2:string attributeName}, ${3:string value})"
	},
	"dgsSVGNodeGetAttribute": {
		"scope": "lua",
		"prefix": "dgsSVGNodeGetAttribute",
		"description": "This function change single node attribute in svg document . | URL: https://wiki.multitheftauto.com/wiki/DgsSVGNodeGetAttribute",
		"body": "dgsSVGNodeGetAttribute(${1:xmlnode xmlNode}, ${2:string attributeName})"
	},
	"dgsSVGNodeSetAttributes": {
		"scope": "lua",
		"prefix": "dgsSVGNodeSetAttributes",
		"description": "This function change svg xmlnode attributes value with formated.  | URL: https://wiki.multitheftauto.com/wiki/DgsSVGNodeSetAttributes",
		"body": "dgsSVGNodeSetAttributes(${1:xmlnode xmlNode}, ${2:table attributesWithValue})"
	},
	"dgsSVGNodeGetAttributes": {
		"scope": "lua",
		"prefix": "dgsSVGNodeGetAttributes",
		"description": "This function gets xmlnode attributes value.  | URL: https://wiki.multitheftauto.com/wiki/DgsSVGNodeGetAttributes",
		"body": "dgsSVGNodeGetAttributes(${1:xmlnode xmlNode [}, ${2:table attributes ]})"
	},
	"dgsCreateToolTip": {
		"scope": "lua",
		"prefix": "dgsCreateToolTip",
		"description": "This function creates a tooltip as template that can be applied to any DGS elements. | URL: https://wiki.multitheftauto.com/wiki/DgsCreateToolTip",
		"body": "dgsCreateToolTip(${1:[ int textColor = 0xFFFFFFFF}, ${2:int bgColor = 0x80000000}, ${3:texture bgImage = nil ]})"
	},
	"dgsTooltipApplyTo": {
		"scope": "lua",
		"prefix": "dgsTooltipApplyTo",
		"description": "This function applies a DGS tooltip to a DGS element. | URL: https://wiki.multitheftauto.com/wiki/DgsTooltipApplyTo",
		"body": "dgsTooltipApplyTo(${1:element tooltip}, ${2:element targetElement}, ${3:string text [}, ${4:string/dx-font font = tooltipFont}, ${5:number maxWidth = tooltipMaxWidth ]})"
	},
	"dgsTooltipRemoveFrom": {
		"scope": "lua",
		"prefix": "dgsTooltipRemoveFrom",
		"description": "This function removes tooltip from a DGS element. | URL: https://wiki.multitheftauto.com/wiki/DgsTooltipRemoveFrom",
		"body": "dgsTooltipRemoveFrom(${1:element targetElement})"
	}
}